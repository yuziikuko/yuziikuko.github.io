const s=JSON.parse('{"key":"v-3b6ac770","path":"/notes/Algorithm/02.html","title":"二、时间复杂度","lang":"zh-CN","frontmatter":{"title":"二、时间复杂度","copyright":false,"date":"2023-09-08T00:00:00.000Z","category":["笔记"],"tag":["左程云"]},"headers":[{"level":2,"title":"（一）含义","slug":"一-含义","link":"#一-含义","children":[]},{"level":2,"title":"（二）master 公式","slug":"二-master-公式","link":"#二-master-公式","children":[{"level":3,"title":"1.含义","slug":"_1-含义","link":"#_1-含义","children":[]},{"level":3,"title":"2.应用示例","slug":"_2-应用示例","link":"#_2-应用示例","children":[]}]}],"git":{"createdTime":1694351324000,"updatedTime":1694351324000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":1}]},"readingTime":{"minutes":1.51,"words":453},"filePathRelative":"notes/Algorithm/02.md","localizedDate":"2023年9月8日","excerpt":"<h2> （一）含义</h2>\\n<ul>\\n<li><span class=\\"katex\\"><span class=\\"katex-mathml\\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>)</mo></mrow><annotation encoding=\\"application/x-tex\\">O()</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"strut\\" style=\\"height:0.75em;\\"></span><span class=\\"strut bottom\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"base textstyle uncramped\\"><span class=\\"mord mathit\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mclose\\">)</span></span></span></span> 读作 Big O</li>\\n<li>评估一个算法在最坏情况下的计算数量级别</li>\\n<li>如果一个算法所有操作数量级和为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math><semantics><mrow><mi>a</mi><msup><mi>N</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>N</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding=\\"application/x-tex\\">aN^2+bN+c</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"strut\\" style=\\"height:0.8141079999999999em;\\"></span><span class=\\"strut bottom\\" style=\\"height:0.897438em;vertical-align:-0.08333em;\\"></span><span class=\\"base textstyle uncramped\\"><span class=\\"mord mathit\\">a</span><span class=\\"mord\\"><span class=\\"mord mathit\\" style=\\"margin-right:0.10903em;\\">N</span><span class=\\"vlist\\"><span style=\\"top:-0.363em;margin-right:0.05em;\\"><span class=\\"fontsize-ensurer reset-size5 size5\\"><span style=\\"font-size:0em;\\">​</span></span><span class=\\"reset-textstyle scriptstyle uncramped\\"><span class=\\"mord mathrm\\">2</span></span></span><span class=\\"baseline-fix\\"><span class=\\"fontsize-ensurer reset-size5 size5\\"><span style=\\"font-size:0em;\\">​</span></span>​</span></span></span><span class=\\"mbin\\">+</span><span class=\\"mord mathit\\">b</span><span class=\\"mord mathit\\" style=\\"margin-right:0.10903em;\\">N</span><span class=\\"mbin\\">+</span><span class=\\"mord mathit\\">c</span></span></span></span>\\n<ul>\\n<li>则该算法的时间复杂度为 <span class=\\"katex\\"><span class=\\"katex-mathml\\"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>N</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding=\\"application/x-tex\\">O(N^2)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"strut\\" style=\\"height:0.8141079999999999em;\\"></span><span class=\\"strut bottom\\" style=\\"height:1.064108em;vertical-align:-0.25em;\\"></span><span class=\\"base textstyle uncramped\\"><span class=\\"mord mathit\\" style=\\"margin-right:0.02778em;\\">O</span><span class=\\"mopen\\">(</span><span class=\\"mord\\"><span class=\\"mord mathit\\" style=\\"margin-right:0.10903em;\\">N</span><span class=\\"vlist\\"><span style=\\"top:-0.363em;margin-right:0.05em;\\"><span class=\\"fontsize-ensurer reset-size5 size5\\"><span style=\\"font-size:0em;\\">​</span></span><span class=\\"reset-textstyle scriptstyle uncramped\\"><span class=\\"mord mathrm\\">2</span></span></span><span class=\\"baseline-fix\\"><span class=\\"fontsize-ensurer reset-size5 size5\\"><span style=\\"font-size:0em;\\">​</span></span>​</span></span></span><span class=\\"mclose\\">)</span></span></span></span></li>\\n</ul>\\n</li>\\n<li>常数操作：一个操作和样本的数据量无关，每次都是固定时间完成</li>\\n</ul>"}');export{s as data};
