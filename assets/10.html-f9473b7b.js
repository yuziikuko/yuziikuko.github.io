import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as p,a as n,b as l,d as i,e as a}from"./app-6262948b.js";const c={},r=a(`<h2 id="一-文字滚动效果" tabindex="-1"><a class="header-anchor" href="#一-文字滚动效果" aria-hidden="true">#</a> （一）文字滚动效果</h2><h3 id="_1-编写-js-前需考虑" tabindex="-1"><a class="header-anchor" href="#_1-编写-js-前需考虑" aria-hidden="true">#</a> 1.编写 JS 前需考虑</h3><ul><li>初始化：一开始要做什么</li><li>交互：用户操作之后要做什么</li></ul><h2 id="二-手风琴效果" tabindex="-1"><a class="header-anchor" href="#二-手风琴效果" aria-hidden="true">#</a> （二）手风琴效果</h2><div class="hint-container tip"><p class="hint-container-title">规范</p><p>DRY：don&#39;t repeat yourself</p><p>能封装成模块的功能函数尽量抽离出来</p></div><h3 id="_1-js-动画函数" tabindex="-1"><a class="header-anchor" href="#_1-js-动画函数" aria-hidden="true">#</a> 1.JS 动画函数</h3><ul><li>动画的本质：从一个值变化到另一个值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createAnimation</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> from <span class="token operator">=</span> options<span class="token punctuation">.</span>from<span class="token punctuation">;</span> <span class="token comment">// 起始值</span>
  <span class="token keyword">var</span> to <span class="token operator">=</span> options<span class="token punctuation">.</span>to<span class="token punctuation">;</span> <span class="token comment">// 结束值</span>
  <span class="token keyword">var</span> totalMS <span class="token operator">=</span> options<span class="token punctuation">.</span>totalMS <span class="token operator">||</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 变化总时间</span>
  <span class="token keyword">var</span> duration <span class="token operator">=</span> options<span class="token punctuation">.</span>duration <span class="token operator">||</span> <span class="token number">15</span><span class="token punctuation">;</span> <span class="token comment">// 动画间隔时间</span>
  <span class="token keyword">var</span> times <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>totalMS <span class="token operator">/</span> duration<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 变化的次数</span>
  <span class="token keyword">var</span> dis <span class="token operator">=</span> <span class="token punctuation">(</span>to <span class="token operator">-</span> from<span class="token punctuation">)</span> <span class="token operator">/</span> times<span class="token punctuation">;</span> <span class="token comment">// 每一次变化改变的值</span>
  <span class="token keyword">var</span> curTimes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 当前变化的次数</span>
  <span class="token keyword">var</span> timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    from <span class="token operator">+=</span> dis<span class="token punctuation">;</span>
    curTimes<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 当前变化增加一次</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curTimes <span class="token operator">&gt;=</span> times<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 变化的次数达到了</span>
      from <span class="token operator">=</span> to<span class="token punctuation">;</span> <span class="token comment">// 变化完成了</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不再变化了</span>
      options<span class="token punctuation">.</span>onend <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span><span class="token function">onend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 无数的可能性 —— 回调模式</span>
    options<span class="token punctuation">.</span>onmove <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span><span class="token function">onmove</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> duration<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-回调模式" tabindex="-1"><a class="header-anchor" href="#_2-回调模式" aria-hidden="true">#</a> 2.回调模式</h3><ul><li>满足以下两点即可使用回调模式 <ul><li>事件函数知道什么时候处理，但不知道怎么处理</li><li>绑定事件的对象知道怎么处理，但不知道什么时候处理</li></ul></li><li>通过回调函数参数交互</li></ul><h2 id="三-动态排序表格效果" tabindex="-1"><a class="header-anchor" href="#三-动态排序表格效果" aria-hidden="true">#</a> （三）动态排序表格效果</h2><h3 id="_1-localecompare" tabindex="-1"><a class="header-anchor" href="#_1-localecompare" aria-hidden="true">#</a> 1.localeCompare</h3><ul><li>localeCompare 是一种基于国际化字体的地区字符比较 <ul><li>例如中国用中文，美国用英文，法国用法文，德国用德文......</li><li>将这些国家的文字按照国家/地区等进行编号，然后每个编号都对应了该国/地区的文字</li></ul></li><li>传入两个参数： <ul><li>参数 1：待比较的字符串</li><li>参数 2：字符串文字对应的国家/地区的编号</li></ul></li><li>返回值： <ul><li>正数：参数 1 顺序排在调用的变量之前</li><li>负数：参数 1 顺序排在调用的变量之后</li><li>零：参数 1 和调用的变量相等，顺序不分先后</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> val1 <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
  val2 <span class="token operator">=</span> <span class="token string">&quot;李四他爸爸&quot;</span><span class="token punctuation">;</span>
val1<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>val2<span class="token punctuation">,</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-appendchild" tabindex="-1"><a class="header-anchor" href="#_2-appendchild" aria-hidden="true">#</a> 2.appendChild</h3><ul><li><code>parentNode.appendChild(chileNode)</code> 方法将一个节点附加到指定父节点的子节点列表的末尾处</li><li>如果将被插入的节点已经存在于当前文档的文档树中【即原本就是该父节点的一个子节点】 <ul><li>那么 appendChild() 只会将它从原先的位置移动到新的位置</li><li>不需要事先移除要移动的节点</li></ul></li></ul><h2 id="四-三级联动效果" tabindex="-1"><a class="header-anchor" href="#四-三级联动效果" aria-hidden="true">#</a> （四）三级联动效果</h2><h3 id="_1-中国各省市大学名称【2017-年整理】" tabindex="-1"><a class="header-anchor" href="#_1-中国各省市大学名称【2017-年整理】" aria-hidden="true">#</a> 1.中国各省市大学名称【2017 年整理】</h3>`,18),u={href:"https://gitee.com/dev-edu/frontend-pre-js-practice/blob/master/04.%20js%E5%AE%9E%E7%8E%B0%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E6%95%88%E6%9E%9C/AllSchool.js",target:"_blank",rel:"noopener noreferrer"},d=a('<ul><li>省会字典 <ul><li>标号：省市名称</li></ul></li><li>城市字典 <ul><li>省标号：{ 城市标号：城市名称 }</li></ul></li><li>学校字典 <ul><li>城市标号：[大学 1， 大学 2]</li></ul></li></ul><h2 id="五-腾讯视频重磅推荐模块" tabindex="-1"><a class="header-anchor" href="#五-腾讯视频重磅推荐模块" aria-hidden="true">#</a> （五）腾讯视频重磅推荐模块</h2><h2 id="六-图片放大镜" tabindex="-1"><a class="header-anchor" href="#六-图片放大镜" aria-hidden="true">#</a> （六）图片放大镜</h2>',3);function k(m,h){const s=t("ExternalLinkIcon");return o(),p("div",null,[r,n("p",null,[n("a",u,[l("渡一教育 - JS 项目实战 - AllSchool.js"),i(s)])]),d])}const f=e(c,[["render",k],["__file","10.html.vue"]]);export{f as default};
