import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as r,c as a,e}from"./app-f4db3521.js";const l={},p=e('<p>一套用于 <strong>构建用户界面</strong> 的 <strong>渐进式</strong> JavaScript 框架。</p><h2 id="_1-构建用户界面" tabindex="-1"><a class="header-anchor" href="#_1-构建用户界面" aria-hidden="true">#</a> 1.构建用户界面</h2><ul><li><p>数据 =&gt; 界面</p></li><li><p>在合适的时候发出合适的请求把数据渲染到页面中。</p></li></ul><h2 id="_2-渐进式" tabindex="-1"><a class="header-anchor" href="#_2-渐进式" aria-hidden="true">#</a> 2.渐进式</h2><ul><li><p>Vue 可以自底向上逐层的应用。</p></li><li><p>简单应用：只需一个轻量小巧的核心库。</p></li></ul><h2 id="_3-vue-的特点" tabindex="-1"><a class="header-anchor" href="#_3-vue-的特点" aria-hidden="true">#</a> 3.Vue 的特点</h2><p>1）采用 <strong>组件化</strong> 模式，提高代码复用率、且让代码更好维护。</p><p>2）<strong>声明式</strong> 编码，让编码人员无需直接操作 DOM，提高开发效率。</p><ul><li><p>声明式：数据先准备好，要用的时候再渲染。</p></li><li><p>区别于 <strong>命令式</strong> 编码，每一条命令都不可或缺。</p></li></ul><p>3）使用虚拟 DOM+优秀的 Diff 算法，尽量复用 DOM 节点。</p><p>4）遵循 <strong>MVVM</strong> 模式。</p><h2 id="_4-必备-javascript-基础知识" tabindex="-1"><a class="header-anchor" href="#_4-必备-javascript-基础知识" aria-hidden="true">#</a> 4.必备 JavaScript 基础知识</h2><ul><li><p>ES6 语法规范</p></li><li><p>ES6 模块化</p></li><li><p>包管理器：npm、yarn、cnpm</p></li><li><p><strong>原型、原型链</strong></p></li><li><p>数组常用方法</p></li><li><p>Axios</p></li><li><p>Promise</p></li><li><p>......</p></li></ul>',13),t=[p];function n(s,o){return r(),a("div",null,t)}const d=i(l,[["render",n],["__file","01.html.vue"]]);export{d as default};
