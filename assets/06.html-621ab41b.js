import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as r,c as o,e as t}from"./app-3664ad8b.js";const i={},l=t('<h2 id="_1-从定义数据角度对比" tabindex="-1"><a class="header-anchor" href="#_1-从定义数据角度对比" aria-hidden="true">#</a> 1.从定义数据角度对比</h2><ul><li><p>ref 用来定义：<strong>基本类型数据</strong>。</p></li><li><p>reactive 用来定义：<strong>对象（或数组）类型数据</strong>。</p></li><li><p>备注：ref 也可以用来定义<strong>对象（或数组）类型数据</strong>，内部会自动通过<code>reactive</code>转为 <strong>代理对象（Proxy）</strong>。</p></li></ul><h2 id="_2-从原理角度对比" tabindex="-1"><a class="header-anchor" href="#_2-从原理角度对比" aria-hidden="true">#</a> 2.从原理角度对比</h2><ul><li><p>ref 通过<code>Object.defineProperty()</code>的<code>get</code>和<code>set</code>来实现响应式（数据劫持）。</p></li><li><p>reactive 通过使用 <strong>Proxy</strong> 来实现响应式（数据劫持），并通过 <strong>Reflect</strong> 操作 <strong>源对象</strong> 内部的数据。</p></li></ul><h2 id="_3-从使用角度对比" tabindex="-1"><a class="header-anchor" href="#_3-从使用角度对比" aria-hidden="true">#</a> 3.从使用角度对比</h2><ul><li><p>ref 定义的数据：</p><ul><li>操作数据 <strong>需要</strong> <code>.value</code>，读取数据时模板中直接读取， <strong>不需要</strong> <code>.value</code>。</li></ul></li><li><p>reactive 定义的数据：</p><ul><li>操作数据与读取数据： <strong>均不需要</strong> <code>.value</code>。</li></ul></li></ul>',6),c=[l];function n(a,s){return r(),o("div",null,c)}const _=e(i,[["render",n],["__file","06.html.vue"]]);export{_ as default};
