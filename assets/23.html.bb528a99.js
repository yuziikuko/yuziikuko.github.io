import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.093d3470.js";const p={},e=t(`<h2 id="\u4E00-\u5BF9\u8C61\u65B9\u6CD5\u6269\u5C55-\u2014\u2014-object-fromentries" tabindex="-1"><a class="header-anchor" href="#\u4E00-\u5BF9\u8C61\u65B9\u6CD5\u6269\u5C55-\u2014\u2014-object-fromentries" aria-hidden="true">#</a> \uFF08\u4E00\uFF09\u5BF9\u8C61\u65B9\u6CD5\u6269\u5C55 \u2014\u2014 Object.fromEntries()</h2><ul><li>\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u65B9\u6CD5\u53C2\u6570\u53EF\u4EE5\u662F\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A <code>Map</code> \u5BF9\u8C61\u3002</li></ul><h3 id="_1-\u4E8C\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1-\u4E8C\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> 1.\u4E8C\u7EF4\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> res1 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ikuko&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;skill&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u524D\u7AEF, PHP&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {name: &#39;ikuko&#39;, skill: &#39;\u524D\u7AEF, PHP&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-map-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-map-\u5BF9\u8C61" aria-hidden="true">#</a> 2.Map \u5BF9\u8C61</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ikuko&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6570\u7EC4\u8F6C\u4E3A\u5BF9\u8C61</span>
<span class="token keyword">const</span> res2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {}</span>
<span class="token comment">// {name: &#39;ikuko&#39;}</span>

<span class="token comment">// \u5BF9\u8C61\u8F6C\u4E3A\u6570\u7EC4(ES8)</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ikuko&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [Array(2)]</span>
<span class="token comment">// 0: (2) [&#39;name&#39;, &#39;ikuko&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C-\u5B57\u7B26\u4E32\u65B9\u6CD5\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u4E8C-\u5B57\u7B26\u4E32\u65B9\u6CD5\u6269\u5C55" aria-hidden="true">#</a> \uFF08\u4E8C\uFF09\u5B57\u7B26\u4E32\u65B9\u6CD5\u6269\u5C55</h2><ul><li>ES5\uFF1A <code>trim()</code> \u3002</li></ul><h3 id="_1-trimstart" tabindex="-1"><a class="header-anchor" href="#_1-trimstart" aria-hidden="true">#</a> 1.trimStart()</h3><ul><li>\u6E05\u9664\u5B57\u7B26\u4E32\u5DE6\u4FA7\u7A7A\u767D\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;    iLoveU   &quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">trimStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//     iLoveU</span>
<span class="token comment">// iLoveU</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-trimend" tabindex="-1"><a class="header-anchor" href="#_2-trimend" aria-hidden="true">#</a> 2.trimEnd()</h3><ul><li>\u6E05\u9664\u5B57\u7B26\u4E32\u53F3\u4FA7\u7A7A\u767D\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;    iLoveU   &quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">trimEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//     iLoveU   //</span>
<span class="token comment">//     iLoveU//</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09-\u6570\u7EC4\u65B9\u6CD5\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u4E09-\u6570\u7EC4\u65B9\u6CD5\u6269\u5C55" aria-hidden="true">#</a> \uFF08\u4E09\uFF09\u6570\u7EC4\u65B9\u6CD5\u6269\u5C55</h2><h3 id="_1-flat" tabindex="-1"><a class="header-anchor" href="#_1-flat" aria-hidden="true">#</a> 1.flat()</h3><ul><li><p>\u964D\u4F4E\u591A\u7EF4\u6570\u7EC4\u7684\u7EF4\u5EA6\u3002</p><ul><li><p>\u53C2\u6570\u4E3A\u6570\u5B57\uFF0C\u8868\u793A\u6DF1\u5EA6\u3002</p></li><li><p>\u9ED8\u8BA4\u53C2\u6570\u4E3A 1\u3002</p></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (6) [1, 2, 3, 4, 5, 6]</span>

<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (7) [1, 2, 3, 4, 5, 6, Array(3)]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-flatmap" tabindex="-1"><a class="header-anchor" href="#_2-flatmap" aria-hidden="true">#</a> 2.flatMap()</h3><ul><li><p>\u964D\u4F4E\u591A\u7EF4 <code>Map</code> \u7684\u7EF4\u5EA6\u3002</p></li><li><p>\u76F8\u5F53\u4E8E\u4E24\u4E2A\u64CD\u4F5C <code>flat()</code> + <code>map()</code> \u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> res3 <span class="token operator">=</span> arr3<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (4) [10, 20, 30, 40]</span>

<span class="token keyword">const</span> res4 <span class="token operator">=</span> arr3<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>item <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (4) [Array(1), Array(1), Array(1), Array(1)]</span>

<span class="token keyword">const</span> res5 <span class="token operator">=</span> arr3<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>item <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res5<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// (4) [10, 20, 30, 40]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DB-symbol-\u5C5E\u6027\u6269\u5C55-\u2014\u2014-symbol-prototype-description" tabindex="-1"><a class="header-anchor" href="#\u56DB-symbol-\u5C5E\u6027\u6269\u5C55-\u2014\u2014-symbol-prototype-description" aria-hidden="true">#</a> \uFF08\u56DB\uFF09Symbol \u5C5E\u6027\u6269\u5C55 \u2014\u2014 Symbol.prototype.description</h2><ul><li>\u83B7\u53D6 <code>Symbol</code> \u7684\u63CF\u8FF0\u5B57\u7B26\u4E32\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFASymbol</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;ikuko&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ikuko</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","23.html.vue"]]);export{k as default};
