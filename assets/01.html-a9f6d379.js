import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as s,e as n}from"./app-1ca76096.js";const i={},t=n(`<h2 id="一-typescript-是什么" tabindex="-1"><a class="header-anchor" href="#一-typescript-是什么" aria-hidden="true">#</a> （一）TypeScript 是什么</h2><ul><li>以 JavaScript 为基础构建的语言</li><li>一个 JavaScript 的超集</li><li>扩展了 JavaScript，并添加了类型</li><li>可以在任何支持 JavaScript 的平台中执行</li><li>不能被 JS 解析器直接执行，需要经过编译器编译成.js 文件</li></ul><h2 id="二-typescript-增加了什么" tabindex="-1"><a class="header-anchor" href="#二-typescript-增加了什么" aria-hidden="true">#</a> （二）TypeScript 增加了什么</h2><ul><li>类型系统</li><li>支持 ES 的新特性</li><li>添加 ES 不具备的新特性，如抽象类、接口等</li><li>提供丰富的配置选项</li><li>强大的开发工具，如 VS Code 代码提示</li></ul><h2 id="三-开发环境搭建" tabindex="-1"><a class="header-anchor" href="#三-开发环境搭建" aria-hidden="true">#</a> （三）开发环境搭建</h2><h3 id="_1-下载-node-js-并安装" tabindex="-1"><a class="header-anchor" href="#_1-下载-node-js-并安装" aria-hidden="true">#</a> 1.下载 Node.js 并安装</h3><h3 id="_2-使用-npm-全局安装-typescript" tabindex="-1"><a class="header-anchor" href="#_2-使用-npm-全局安装-typescript" aria-hidden="true">#</a> 2.使用 npm 全局安装 TypeScript</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入命令行</span>
<span class="token function">npm</span> i <span class="token parameter variable">-g</span> typescript
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-创建一个-ts-文件" tabindex="-1"><a class="header-anchor" href="#_3-创建一个-ts-文件" aria-hidden="true">#</a> 3.创建一个.ts 文件</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello TS&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-使用tsc对-ts-文件进行编译" tabindex="-1"><a class="header-anchor" href="#_4-使用tsc对-ts-文件进行编译" aria-hidden="true">#</a> 4.使用<code>tsc</code>对 ts 文件进行编译</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入命令行</span>

<span class="token comment"># 进入ts文件所在目录</span>
<span class="token builtin class-name">cd</span> xxx/

tsc xxx.ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),c=[t];function l(d,r){return e(),s("div",null,c)}const h=a(i,[["render",l],["__file","01.html.vue"]]);export{h as default};
