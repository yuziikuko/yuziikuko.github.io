const e=JSON.parse('{"key":"v-63f76fb4","path":"/notes/ECMAScript6-11/21.html","title":"二十一、ES8 新特性","lang":"zh-CN","frontmatter":{"title":"二十一、ES8 新特性","copyright":false,"date":"2023-01-01T00:00:00.000Z","category":["笔记","ECMAScript"],"tag":["尚硅谷","李强"]},"headers":[{"level":2,"title":"（一）async 函数","slug":"一-async-函数","link":"#一-async-函数","children":[{"level":3,"title":"1.async 和 await 两种语法结合可以让异步代码像同步代码一样","slug":"_1-async-和-await-两种语法结合可以让异步代码像同步代码一样","link":"#_1-async-和-await-两种语法结合可以让异步代码像同步代码一样","children":[]},{"level":3,"title":"2.Promise 对象的结果由 async 函数执行的返回值决定","slug":"_2-promise-对象的结果由-async-函数执行的返回值决定","link":"#_2-promise-对象的结果由-async-函数执行的返回值决定","children":[]}]},{"level":2,"title":"（二）await 表达式","slug":"二-await-表达式","link":"#二-await-表达式","children":[]},{"level":2,"title":"（三）async 和 await 结合读取文件","slug":"三-async-和-await-结合读取文件","link":"#三-async-和-await-结合读取文件","children":[]},{"level":2,"title":"（四）async 和 await 结合发送 Ajax 请求","slug":"四-async-和-await-结合发送-ajax-请求","link":"#四-async-和-await-结合发送-ajax-请求","children":[]},{"level":2,"title":"（五）对象方法扩展","slug":"五-对象方法扩展","link":"#五-对象方法扩展","children":[{"level":3,"title":"1.获取对象所有的键","slug":"_1-获取对象所有的键","link":"#_1-获取对象所有的键","children":[]},{"level":3,"title":"2.获取对象所有的值","slug":"_2-获取对象所有的值","link":"#_2-获取对象所有的值","children":[]},{"level":3,"title":"3.entries","slug":"_3-entries","link":"#_3-entries","children":[]},{"level":3,"title":"4.返回对象属性的描述对象","slug":"_4-返回对象属性的描述对象","link":"#_4-返回对象属性的描述对象","children":[]}]}],"git":{"createdTime":1672650149000,"updatedTime":1689308920000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":3.01,"words":903},"filePathRelative":"notes/ECMAScript6-11/21.md","localizedDate":"2023年1月1日","excerpt":"<h2> （一）async 函数</h2>\\n<h3> 1.<code>async</code> 和 <code>await</code> 两种语法结合可以让异步代码像同步代码一样</h3>\\n<ul>\\n<li>返回值为 <code>Promise</code> 对象</li>\\n</ul>\\n<h3> 2.<code>Promise</code> 对象的结果由 <code>async</code> 函数执行的返回值决定</h3>\\n<h4> 1）返回的结果为非 <code>Promise</code> 对象</h4>\\n<ul>\\n<li><code>async</code> 函数返回值是成功的 <code>Promise</code> 对象</li>\\n<li>且对象值为 <code>return</code> 的值</li>\\n</ul>"}');export{e as data};
