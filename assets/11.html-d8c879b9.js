import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as l}from"./app-1ca76096.js";const r={},t=l('<h2 id="一-class-样式" tabindex="-1"><a class="header-anchor" href="#一-class-样式" aria-hidden="true">#</a> （一）class 样式</h2><ul><li>写法：<code>:class=&quot;xxx&quot;</code></li><li>xxx 可以是字符串、对象、数组</li></ul><h3 id="_1-字符串" tabindex="-1"><a class="header-anchor" href="#_1-字符串" aria-hidden="true">#</a> 1.字符串</h3><ul><li>适用于类名不确定，要动态获取</li></ul><h3 id="_2-对象" tabindex="-1"><a class="header-anchor" href="#_2-对象" aria-hidden="true">#</a> 2.对象</h3><ul><li>适用于要绑定多个样式，个数不确定，名字也不确定</li></ul><h3 id="_3-数组" tabindex="-1"><a class="header-anchor" href="#_3-数组" aria-hidden="true">#</a> 3.数组</h3><ul><li>适用于要绑定多个样式，个数确定，名字也确定，但不确定用不用</li></ul><h2 id="二-style-样式" tabindex="-1"><a class="header-anchor" href="#二-style-样式" aria-hidden="true">#</a> （二）style 样式</h2><h3 id="_1-对象写法" tabindex="-1"><a class="header-anchor" href="#_1-对象写法" aria-hidden="true">#</a> 1.对象写法</h3><ul><li><code>:style=&quot;{fontSize: xxx}&quot;</code></li><li>其中 xxx 是动态值</li></ul><h3 id="_2-数组写法" tabindex="-1"><a class="header-anchor" href="#_2-数组写法" aria-hidden="true">#</a> 2.数组写法</h3><ul><li><code>:style=&quot;[a, b]&quot;</code></li><li>其中 a、b 是 <strong>样式对象</strong> （key 必须是存在的 css 配置项）</li></ul>',13),d=[t];function h(s,c){return a(),i("div",null,d)}const u=e(r,[["render",h],["__file","11.html.vue"]]);export{u as default};
