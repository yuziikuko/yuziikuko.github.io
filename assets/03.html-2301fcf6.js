import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as p,a as n,b as s,d as e,e as t}from"./app-1240ea23.js";const c="/assets/vue组件库从入门到实战01-e4fdf6fe.png",d="/assets/vue组件库从入门到实战02-9cc707d5.png",r="/assets/vue组件库从入门到实战03-ed5c4277.png",u="/assets/vue组件库从入门到实战04-559666b7.png",m="/assets/vue组件库从入门到实战05-0336e0c3.png",v="/assets/vue组件库从入门到实战06-4632104c.png",b="/assets/vue组件库从入门到实战07-ba1b3940.png",k="/assets/vue组件库从入门到实战08-e549d848.png",h="/assets/vue组件库从入门到实战09-31a0eee7.png",g="/assets/vue组件库从入门到实战10-2ccdf9b9.png",_="/assets/vue组件库从入门到实战11-5d51db2f.png",f="/assets/vue组件库从入门到实战12-a6045cd8.png",x="/assets/vue组件库从入门到实战13-d1e2c406.png",y="/assets/vue组件库从入门到实战14-1f71f590.png",q="/assets/vue组件库从入门到实战15-d6796123.png",w="/assets/vue组件库从入门到实战16-e84df84f.png",j="/assets/vue组件库从入门到实战17-4fa38268.png",D="/assets/vue组件库从入门到实战18-ca3906c9.png",M="/assets/vue组件库从入门到实战19-f77298c0.png",S="/assets/vue组件库从入门到实战20-de9a4de6.png",C="/assets/vue组件库从入门到实战21-41d49abc.png",B="/assets/vue组件库从入门到实战22-cb51a2a9.png",z="/assets/vue组件库从入门到实战23-f410eaf6.png",N="/assets/vue组件库从入门到实战24-6de671b1.png",E="/assets/vue组件库从入门到实战25-10620dc4.png",L="/assets/vue组件库从入门到实战26-d3fa6053.png",I="/assets/vue组件库从入门到实战27-69696757.png",A="/assets/vue组件库从入门到实战28-208e588a.png",O="/assets/vue组件库从入门到实战29-36515ed4.png",P="/assets/vue组件库从入门到实战30-444a510b.png",T="/assets/vue组件库从入门到实战31-7c80523c.png",R="/assets/vue组件库从入门到实战32-49ee56af.png",U="/assets/vue组件库从入门到实战33-b55a1ef6.png",V="/assets/vue组件库从入门到实战34-52f5268f.png",$="/assets/vue组件库从入门到实战35-f1a7c736.png",W="/assets/vue组件库从入门到实战36-af8b7def.png",F="/assets/vue组件库从入门到实战37-ee05f402.png",Y="/assets/vue组件库从入门到实战38-62a981bb.png",H="/assets/vue组件库从入门到实战39-214c7cb6.png",J="/assets/vue组件库从入门到实战40-61cd0e03.png",G="/assets/vue组件库从入门到实战41-ee45c155.png",K="/assets/vue组件库从入门到实战42-c9ef55a9.png",Q="/assets/vue组件库从入门到实战43-35b1ddb2.png",X="/assets/vue组件库从入门到实战44-5c41b119.png",Z="/assets/vue组件库从入门到实战45-f586fc9a.png",nn="/assets/vue组件库从入门到实战46-bcb308af.png",sn="/assets/vue组件库从入门到实战47-f75ca716.png",an="/assets/vue组件库从入门到实战48-9e020703.png",en={},tn=t(`<h2 id="一-项目准备" tabindex="-1"><a class="header-anchor" href="#一-项目准备" aria-hidden="true">#</a> （一）项目准备</h2><h3 id="_1-vscode-隐藏资源管理器显示的部分文件" tabindex="-1"><a class="header-anchor" href="#_1-vscode-隐藏资源管理器显示的部分文件" aria-hidden="true">#</a> 1.VSCode 隐藏资源管理器显示的部分文件</h3><ul><li>配置 setting.json 中的 files.exclude 选项</li><li>不希望在文件目录中显示什么文件就配置什么文件</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;files.exclude&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;**/.git&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.svn&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.hg&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/CVS&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.DS_Store&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// &quot;**/node_modules&quot;: true,</span>
  <span class="token property">&quot;**/shims-tsx.d.ts&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/shims-vue.d.ts&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.browserslistrc&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.eslintrc.js&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.gitignore&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/babel.config.js&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/package-lock.json&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/README.md&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/tsconfig.json&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.env&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.env.development&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.env.preview&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.env.production&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.travis.yml&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.env.staging&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.eslintignore&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.editorconfig&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.github&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/tests&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/jsconfig.json&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/jest.config.js&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/.postcssrc.js&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/d2-admin.babel&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/dependencies-cdn.js&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/README.zh.md&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/LICENSE&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/postcss.config.js&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;**/README-zh.md&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-服务器地址" tabindex="-1"><a class="header-anchor" href="#_2-服务器地址" aria-hidden="true">#</a> 2.服务器地址</h3>`,5),ln={href:"https://gitee.com/dev-edu/mysite-server",target:"_blank",rel:"noopener noreferrer"},on=n("h3",{id:"_3-接口地址",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-接口地址","aria-hidden":"true"},"#"),s(" 3.接口地址")],-1),pn={href:"https://app.apifox.com/project/2429912",target:"_blank",rel:"noopener noreferrer"},cn=n("h3",{id:"_4-安装-mongodb-并恢复数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-安装-mongodb-并恢复数据","aria-hidden":"true"},"#"),s(" 4.安装 MongoDB 并恢复数据")],-1),dn=n("h4",{id:"_1-下载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-下载","aria-hidden":"true"},"#"),s(" 1）下载")],-1),rn={href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"},un=t('<p><img src="'+c+'" alt=""></p><ul><li>会自动根据操作系统选择对应的版本</li><li>直接点击 download 进行下载即可</li></ul><p><img src="'+d+'" alt=""></p><h4 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装" aria-hidden="true">#</a> 2）安装</h4><ul><li>Mac 是一个 <code>tgz</code> 格式的压缩包，直接解压</li><li>解压后就是安装好的目录，放入到 <code>/usr/local</code></li></ul><p><img src="'+r+'" alt=""></p><ul><li>需要创建几个文件</li></ul><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>存储数据的地方<br>所有数据库的所有数据都在这个文件夹里面</td></tr><tr><td>mongod.log</td><td>日志文件</td></tr><tr><td>mongodb.conf</td><td>数据库的配置文件<br>需要对这个配置文件进行一些必要的修改，之后让数据库以配置文件的配置来启动</td></tr></tbody></table><p><img src="'+u+`" alt=""></p><h4 id="_3-配置文件" tabindex="-1"><a class="header-anchor" href="#_3-配置文件" aria-hidden="true">#</a> 3）配置文件</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
  <span class="token comment"># 日志输出方式：file/syslog，如果是file，需指定path，默认是输出到标准输出流中</span>
  <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
  <span class="token comment"># 日志路径</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> /usr/local/mongodb/mongod.log
  <span class="token comment"># 启动时，日志追加在已有日志文件内还是备份旧日志后，创建新文件记录日志，默认false</span>
  <span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">net</span><span class="token punctuation">:</span>
  <span class="token comment"># 监听端口，默认27017</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
  <span class="token comment"># 绑定监听的ip，设置为127.0.0.1时，只会监听本机</span>
  <span class="token key atrule">bindIp</span><span class="token punctuation">:</span> 127.0.0.1
  <span class="token comment"># 最大连接数，可接受的连接数还受限于操作系统配置的最大连接数</span>
  <span class="token key atrule">maxIncomingConnections</span><span class="token punctuation">:</span> <span class="token number">65536</span>
  <span class="token comment"># 校验客户端的请求，防止错误的或无效BSON插入，多层文档嵌套的对象会有轻微性能影响，默认true</span>
  <span class="token key atrule">wireObjectCheck</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
  <span class="token comment"># 后台运行</span>
  <span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">security</span><span class="token punctuation">:</span>
  <span class="token comment"># 开启客户端认证：enabled/disabled</span>
  <span class="token key atrule">authorization</span><span class="token punctuation">:</span> disabled

<span class="token key atrule">storage</span><span class="token punctuation">:</span>
  <span class="token comment"># 数据库地址</span>
  <span class="token key atrule">dbPath</span><span class="token punctuation">:</span> /usr/local/mongodb/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-启动" tabindex="-1"><a class="header-anchor" href="#_4-启动" aria-hidden="true">#</a> 4）启动</h4><ul><li>cd 到 MongoDB 的 <code>bin</code> 目录下</li><li>该 bin 目录全部都是一些可执行文件</li></ul><p><img src="`+m+`" alt=""></p><table><thead><tr><th>常用命令</th><th>说明</th></tr></thead><tbody><tr><td><code>mongod</code></td><td>启动数据库服务器</td></tr><tr><td><code>mongo</code></td><td>是一个命令行工具<br>可以以命令行的形式来操作数据库</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongod <span class="token parameter variable">-f</span> 配置文件的路径
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Mac 需要 <code>./mongod</code> 找到 mongod 可执行文件， Windows 可以直接 <code>mongod</code></li></ul><p><img src="`+v+'" alt=""></p><ul><li>使用 mongo 可执行命令连接数据库</li></ul><p><img src="'+b+'" alt=""></p><h4 id="_5-安装可视化工具" tabindex="-1"><a class="header-anchor" href="#_5-安装可视化工具" aria-hidden="true">#</a> 5）安装可视化工具</h4><ul><li>一些拥有图形化界面的工具，能够更加方便的操作数据库</li><li>可视化工具安装一个就可以了</li></ul><table><thead><tr><th>可视化工具</th><th>备注</th></tr></thead><tbody><tr><td>robo3t</td><td>现在官方已经合并到了 stduio3t 里面</td></tr><tr><td>stduio3t</td><td></td></tr><tr><td>compass</td><td></td></tr><tr><td>navicat</td><td>可以连接 mongo、mysql...</td></tr></tbody></table><ul><li>创建本地连接</li></ul><p><img src="'+k+'" alt=""></p><h4 id="_6-下载更多的可执行文件" tabindex="-1"><a class="header-anchor" href="#_6-下载更多的可执行文件" aria-hidden="true">#</a> 6）下载更多的可执行文件</h4><ul><li>在 mongodb 下的 bin 目录里面，可执行文件只有几个</li></ul><p><img src="'+h+'" alt=""></p><ul><li>需要去官网，下载其他的可执行文件压缩包</li><li>下载完成后，解压缩</li><li>之后将 bin 文件夹下面的所有可执行文件放入到 mongo 目录下的 bin 目录下即可</li></ul><p><img src="'+g+'" alt=""></p><h4 id="_7-恢复数据" tabindex="-1"><a class="header-anchor" href="#_7-恢复数据" aria-hidden="true">#</a> 7）恢复数据</h4>',31),mn={href:"https://gitee.com/dev-edu/mysite-server",target:"_blank",rel:"noopener noreferrer"},vn=t('<ul><li>下载服务器后，安装依赖</li><li>启动之前，需要先将数据库服务器启动起来</li><li>默认会生成一个叫做 mysite 的数据库，里面默认只会初始化三张表</li><li>在 mongodb 中，如果连接一个不存在的数据库，会自动创建该数据库</li><li>如果往一个不存在的集合（表）里面添加数据，mongodb 就会自动创建该集合（表）</li></ul><p><img src="'+_+'" alt=""></p><ul><li>Mongodb.pdf <ul><li>是一个关于 mongodb 的简易教程</li></ul></li><li>mysiteDB.zip <ul><li>是一个压缩包，里面是课堂上使用的数据</li></ul></li></ul><p><img src="'+f+`" alt=""></p><ul><li>恢复数据库数据</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongorestore <span class="token parameter variable">-h</span> dbhost <span class="token parameter variable">-d</span> dbname <span class="token parameter variable">--dir</span> dbdirectory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>修饰符</th><th>含义</th></tr></thead><tbody><tr><td><code>-h</code></td><td>MongoDB 所在服务器地址</td></tr><tr><td><code>-d</code></td><td>需要恢复的数据库实例<br>例如：test，当然这个名称也可以和备份时候的不一样，比如 test2</td></tr><tr><td><code>--dir</code></td><td>备份数据所在位置</td></tr></tbody></table><ul><li>要保证在启动了数据库服务器的前提下</li><li>先进入到 mongodb 下的 bin 目录</li></ul><p><img src="`+x+'" alt=""></p><ul><li>通过可视化工具也可以看到数据恢复成功</li></ul><p><img src="'+y+'" alt=""></p><h4 id="_8-关于数据库的图片" tabindex="-1"><a class="header-anchor" href="#_8-关于数据库的图片" aria-hidden="true">#</a> 8）关于数据库的图片</h4><ul><li>数据库里面存储图片时，存储的是该图片在服务器所在目录的地址</li></ul><p><img src="'+q+'" alt=""></p><ul><li>真实的图片实际上是在服务器对应的目录下面</li></ul><p><img src="'+w+'" alt=""></p><div class="hint-container info"><p class="hint-container-title">相关信息</p><ul><li>windows 安装 mongodb 后，自带 mongodb 配置文件</li><li>配置文件位于 <code>mongo安装目录/server/6.0/bin</code> 目录下</li><li>是一个名为 <code>mongod.cfg</code> 的文件</li></ul></div><h2 id="二-登录功能制作" tabindex="-1"><a class="header-anchor" href="#二-登录功能制作" aria-hidden="true">#</a> （二）登录功能制作</h2><h3 id="_1-点击登录按钮后" tabindex="-1"><a class="header-anchor" href="#_1-点击登录按钮后" aria-hidden="true">#</a> 1.点击登录按钮后</h3><p><img src="'+j+'" alt=""></p><h3 id="_2-服务器返回数据后" tabindex="-1"><a class="header-anchor" href="#_2-服务器返回数据后" aria-hidden="true">#</a> 2.服务器返回数据后</h3><p><img src="'+D+'" alt=""></p><h2 id="三-鉴权功能制作" tabindex="-1"><a class="header-anchor" href="#三-鉴权功能制作" aria-hidden="true">#</a> （三）鉴权功能制作</h2><h3 id="_1-vue-element-admin-中的鉴权流程" tabindex="-1"><a class="header-anchor" href="#_1-vue-element-admin-中的鉴权流程" aria-hidden="true">#</a> 1.vue-element-admin 中的鉴权流程</h3><p><img src="'+M+'" alt=""></p><h3 id="_2-改造后的鉴权流程" tabindex="-1"><a class="header-anchor" href="#_2-改造后的鉴权流程" aria-hidden="true">#</a> 2.改造后的鉴权流程</h3><p><img src="'+S+`" alt=""></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token function">getPageTitle</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> getUserInfo <span class="token operator">=</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>getUserInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> getToken <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>token<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>getToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&quot;user/getInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&quot;user/resetToken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;登录过期，请重新登录&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&quot;/login&quot;</span> <span class="token operator">&amp;&amp;</span> getUserInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-首页标语制作" tabindex="-1"><a class="header-anchor" href="#四-首页标语制作" aria-hidden="true">#</a> （四）首页标语制作</h2><h2 id="五-文章模块制作" tabindex="-1"><a class="header-anchor" href="#五-文章模块制作" aria-hidden="true">#</a> （五）文章模块制作</h2><h3 id="_1-markdown-编辑器" tabindex="-1"><a class="header-anchor" href="#_1-markdown-编辑器" aria-hidden="true">#</a> 1.Markdown 编辑器</h3>`,31),bn={href:"https://ui.toast.com/",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://www.npmjs.com/package/@toast-ui/vue-editor",target:"_blank",rel:"noopener noreferrer"},hn=t('<h2 id="六-项目管理模块" tabindex="-1"><a class="header-anchor" href="#六-项目管理模块" aria-hidden="true">#</a> （六）项目管理模块</h2><h2 id="七-评论管理和留言板模块" tabindex="-1"><a class="header-anchor" href="#七-评论管理和留言板模块" aria-hidden="true">#</a> （七）评论管理和留言板模块</h2><h2 id="八-关于我、设置和个人信息模块" tabindex="-1"><a class="header-anchor" href="#八-关于我、设置和个人信息模块" aria-hidden="true">#</a> （八）关于我、设置和个人信息模块</h2><h2 id="九-项目部署" tabindex="-1"><a class="header-anchor" href="#九-项目部署" aria-hidden="true">#</a> （九）项目部署</h2><ul><li>项目开发完毕后，需要将项目打包、部署到服务器上，供用户使用</li><li>常见的部署方式有两种 <ul><li>后端部署</li><li>前后端分离部署</li></ul></li></ul><h3 id="_1-后端部署" tabindex="-1"><a class="header-anchor" href="#_1-后端部署" aria-hidden="true">#</a> 1.后端部署</h3><ul><li>是最古老的部署方式，也是最常见的一种部署方式</li><li>前端只需要将项目打包好，交给后端开发人员即可</li><li>后端开发人员会把打包好的项目放到后端的静态资源目录里面</li></ul><p><img src="'+C+'" alt=""></p><h3 id="_2-前后端分离部署" tabindex="-1"><a class="header-anchor" href="#_2-前后端分离部署" aria-hidden="true">#</a> 2.前后端分离部署</h3><ul><li>随着前后端分离开发模式的流行，现在可以采用前后端分离部署的形式 <ul><li>后端部署后端服务器的代码</li><li>前端将打包好的资源，部署到前端的服务器上面</li></ul></li><li>大多采用 Node.js 或者 Nginx 来做静态资源部署</li><li>用户在做请求的时候，从前端服务器请求静态资源，然后从后端服务器获取数据</li></ul><p><img src="'+B+'" alt=""></p><h3 id="_3-部署具体流程" tabindex="-1"><a class="header-anchor" href="#_3-部署具体流程" aria-hidden="true">#</a> 3.部署具体流程</h3><h4 id="_1-阿里云购买服务器" tabindex="-1"><a class="header-anchor" href="#_1-阿里云购买服务器" aria-hidden="true">#</a> 1）阿里云购买服务器</h4>',13),gn={href:"https://www.aliyun.com/",target:"_blank",rel:"noopener noreferrer"},_n=t('<ul><li>注册账号</li><li>选择 <mark>云服务器 ECS</mark> ，点击查看详情</li></ul><p><img src="'+z+'" alt=""></p><ul><li>立即购买</li></ul><p><img src="'+N+'" alt=""></p><ul><li>选择 <mark>一键购买</mark></li></ul><p><img src="'+E+`" alt=""></p><ul><li>镜像选择 CentOS</li><li>进入到 Linux 系统后，使用命令操作</li></ul><table><thead><tr><th>常用命令</th><th>说明</th></tr></thead><tbody><tr><td>ls</td><td>查看当前目录下的文件</td></tr><tr><td>exit</td><td>退出系统</td></tr><tr><td>clear</td><td>清屏</td></tr><tr><td>touch</td><td>创建文件<br>如：<code>touch 文件名</code></td></tr><tr><td>mkdir</td><td>创建目录<br>如：<code>mkdir 目录名称</code></td></tr><tr><td>mv</td><td>移动目录或者文件<br>如：<code>mv 要移动的文件或者目录 要移动到哪儿</code></td></tr><tr><td><code>rm -rf 要删除的目录或者文件名</code></td><td>删除目录或者文件</td></tr></tbody></table><ul><li>本地连接云服务器</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-p</span> <span class="token number">22</span> root@xxx.xxx.xxx.xxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-安装-node-js" tabindex="-1"><a class="header-anchor" href="#_2-安装-node-js" aria-hidden="true">#</a> 2）安装 Node.js</h4>`,11),fn={href:"https://help.aliyun.com/document_detail/50775.html",target:"_blank",rel:"noopener noreferrer"},xn=t(`<h4 id="_3-安装-mongodb" tabindex="-1"><a class="header-anchor" href="#_3-安装-mongodb" aria-hidden="true">#</a> 3）安装 MongoDB</h4><ul><li>安装依赖库</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> pcre*
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> openssl*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>下载</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-O</span> https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.2.1.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>解压</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> zxvf mongodb-linux-x86_64-4.2.1.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>移动</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> mongodb-linux-x86_64-4.2.1/ /usr/local/mongodb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建数据文件夹、日志文件和 mongo 配置文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span>  /usr/local/mongodb/data/db
<span class="token function">touch</span> /usr/local/mongodb/mongod.log
<span class="token function">touch</span> /usr/local/mongodb/mongodb.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在配置文件中加入如下代码</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>dbpath=/usr/local/mongodb/data/db
logpath=/usr/local/mongodb/log/mongod.log
logappend = true
port = 27017
fork = true
auth = true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>切换到 mongodb 的 bin 下</li></ul><p><img src="`+L+`" alt=""></p><ul><li>启动</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mongod <span class="token parameter variable">--dbpath</span> /usr/local/mongodb/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>指定所有的 <code>ip</code> 都可以连接上 <ul><li>只是暂时的，项目部署上去后要关闭</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongod <span class="token parameter variable">-dbpath</span><span class="token operator">=</span>/usr/local/mongodb/data/db <span class="token parameter variable">--bind_ip</span> <span class="token number">0.0</span>.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19),yn={class:"hint-container info"},qn=n("p",{class:"hint-container-title"},"可能遇到的错误以及解决方案",-1),wn=n("code",null,"Segmentation fault (core dumped)",-1),jn={href:"https://blog.csdn.net/weixin_44320761/article/details/107671990",target:"_blank",rel:"noopener noreferrer"},Dn=n("code",null,"error while loading shared libraries: libssl.so.10",-1),Mn=n("li",null,"libssl.so.10 缺失库文件",-1),Sn={href:"https://blog.csdn.net/xcyja/article/details/115357818",target:"_blank",rel:"noopener noreferrer"},Cn=n("h4",{id:"_4-上传服务器代码以及数据库数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-上传服务器代码以及数据库数据","aria-hidden":"true"},"#"),s(" 4）上传服务器代码以及数据库数据")],-1),Bn=n("ul",null,[n("li",null,"导出数据库的数据")],-1),zn={href:"https://www.runoob.com/mongodb/mongodb-mongodump-mongorestore.html",target:"_blank",rel:"noopener noreferrer"},Nn=t('<ul><li>将打包好的数据库数据压缩包以及服务器代码压缩包（删除 node_modules）上传到云服务器</li></ul><blockquote><p>Windows 系统可以使用 FinalShell，安装，连接服务器，将要上传的文件拖动到对应窗口即可</p></blockquote><ul><li>Mac 系统可以使用自带的 shell 工具</li><li>打开 shell 工具，选择 <mark>新建远程连接</mark></li></ul><p><img src="'+I+'" alt=""></p><ul><li>选择 <mark>安全文件传输（sftp）</mark></li><li>填写用户名和对应的服务器的 ip 地址</li></ul><p><img src="'+A+'" alt=""></p><ul><li>点击 <mark>连接</mark></li></ul><p><img src="'+O+`" alt=""></p><ul><li>使用命令：<code>put 要上传的文件的地址 远程服务器的具体地址</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>put /Users/Jie/Desktop/dbData.zip /usr/local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>解压 zip 压缩包命令：<code>unzip 压缩包名</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">unzip</span> dbData.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>启动服务器，进入到服务器目录</li><li>安装依赖包， <code>npm start</code> 启动即可</li></ul><h4 id="_5-安装-nginx-静态资源服务器" tabindex="-1"><a class="header-anchor" href="#_5-安装-nginx-静态资源服务器" aria-hidden="true">#</a> 5）安装 Nginx 静态资源服务器</h4><ul><li>下载依赖</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> pcre*
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> openssl*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>下载 wget <ul><li>类似于迅雷，用来下载文件的</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">wget</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>下载 nginx</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://nginx.org/download/nginx-1.21.1.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>解压</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> zxvf nginx-1.21.1.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>进入到解压后的目录，编译</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装完毕后，会在同级目录生成一个 nginx 的目录，这个才是服务器目录</li></ul><table><thead><tr><th>常用命令</th><th>含义</th></tr></thead><tbody><tr><td>nginx</td><td>启动</td></tr><tr><td>nginx -v</td><td>查看版本</td></tr><tr><td>nginx -s stop</td><td>停止</td></tr><tr><td>nginx -s reload</td><td>重启</td></tr></tbody></table><h4 id="_6-打包静态资源" tabindex="-1"><a class="header-anchor" href="#_6-打包静态资源" aria-hidden="true">#</a> 6）打包静态资源</h4><ul><li>打包前台代码 <ul><li>放入 <code>nginx/html</code> 目录下</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>打包后台代码 <ul><li>放入 <code>nginx/html/admin</code> 目录下</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run build:prod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改 nginx 的配置文件 <ul><li>该文件位于 <code>conf/nginx.conf</code></li><li>添加代理设置</li></ul></li></ul><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>location / {
  root   html;
  index  index.html index.htm;
  try_files $uri $uri/ /index.html;
}

location /api {
  proxy_pass http://127.0.0.1:7001;
}

location /res {
  proxy_pass http://127.0.0.1:7001;
}

location /static {
  proxy_pass http://127.0.0.1:7001;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-进程守护" tabindex="-1"><a class="header-anchor" href="#_7-进程守护" aria-hidden="true">#</a> 7）进程守护</h4><ul><li>在 Linux 中可以使用 <code>nohup command &amp;</code> 把进程挂起</li><li>即使退出了远程连接，也能够继续保持进程</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nohup</span> <span class="token function">npm</span> start <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>进程挂起后，使用 <code>exit</code> 命令退出远程连接</li></ul><h4 id="_8-域名映射" tabindex="-1"><a class="header-anchor" href="#_8-域名映射" aria-hidden="true">#</a> 8）域名映射</h4><ul><li>项目已经部署成功了</li><li>但是用 IP 访问不太友好</li><li>需要进行域名的映射</li><li>购买一个域名</li></ul><p><img src="`+P+'" alt=""></p><ul><li>购买完成后，点击 <mark>管理我的域名</mark></li></ul><p><img src="'+T+'" alt=""></p><ul><li>找到要映射的域名，点击 <mark>解析</mark></li></ul><p><img src="'+R+'" alt=""></p><ul><li>点击 <mark>添加记录</mark></li></ul><p><img src="'+U+'" alt=""></p><ul><li>记录类型选择 <code>A</code></li><li>主机记录填写 <code>www</code></li><li>记录值填写 <code>IP 地址</code></li></ul><p><img src="'+V+`" alt=""></p><h4 id="_9-数据库加密" tabindex="-1"><a class="header-anchor" href="#_9-数据库加密" aria-hidden="true">#</a> 9）数据库加密</h4><ul><li>为了权限接入可用，必须确保有一个用户是 <code>userAdmin</code> 或者 <code>userAdminAnyDatabase</code> 的角色在 <code>admin</code> 数据库里</li><li>首先在 <code>admin</code> 数据库里创建用户 <code>root</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 切换 admin 数据库</span>
use admin
db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;root&quot;</span>,pwd:<span class="token string">&quot;123456&quot;</span>,roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&quot;userAdminAnyDatabase&quot;</span>,db: <span class="token string">&quot;admin&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+$+'" alt=""></p><blockquote><p>使用命令 <code>db</code> 可以查看当前所使用的数据库</p></blockquote><p><img src="'+W+`" alt=""></p><ul><li>接下来在其他数据库上面创建用户</li><li>一定要注意先在 <code>admin</code> 数据库上面使用刚才的超级管理员登录</li><li>再进行其他数据库用户的创建</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use amdin
db.auth<span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 MongoDB 中 <code>admin</code> 数据库是一个特别的数据库</li><li>这个数据库的用户，可以访问 MongoDB 中的所有数据库</li><li>如果要为其他数据库设置用户，步骤也是一样的 <ul><li>首先切换到其他数据库</li><li>然后创建用户</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use 数据库名
db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;用户名&quot;</span>,pwd:<span class="token string">&quot;密码&quot;</span>,roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&quot;read&quot;</span>,db: <span class="token string">&quot;数据库名&quot;</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>role:<span class="token string">&quot;readWrite&quot;</span>,db:<span class="token string">&quot;数据库名&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+F+`" alt=""></p><ul><li>最后执行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.auth<span class="token punctuation">(</span><span class="token string">&quot;用户名&quot;</span>,<span class="token string">&quot;密码&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+Y+`" alt=""></p><ul><li>返回 <code>1</code>，说明登录成功</li><li>至此，就在数据库上面添加了一个用户，并且设置了账号和密码</li><li>修改 MongoDB 的配置文件</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
  <span class="token comment"># 日志输出方式：file/syslog，如果是file，需指定path，默认是输出到标准输出流中</span>
  <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
  <span class="token comment"># 日志路径</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> /usr/local/mongodb/mongod.log
  <span class="token comment"># 启动时，日志追加在已有日志文件内还是备份旧日志后，创建新文件记录日志，默认false</span>
  <span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">net</span><span class="token punctuation">:</span>
  <span class="token comment"># 监听端口，默认27017</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
  <span class="token comment"># 绑定监听的ip，设置为127.0.0.1时，只会监听本机</span>
  <span class="token key atrule">bindIp</span><span class="token punctuation">:</span> 0.0.0.0
  <span class="token comment"># 最大连接数，可接受的连接数还受限于操作系统配置的最大连接数</span>
  <span class="token key atrule">maxIncomingConnections</span><span class="token punctuation">:</span> <span class="token number">65536</span>
  <span class="token comment"># 校验客户端的请求，防止错误的或无效BSON插入，多层文档嵌套的对象会有轻微性能影响，默认true</span>
  <span class="token key atrule">wireObjectCheck</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
  <span class="token comment"># 后台运行</span>
  <span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token key atrule">security</span><span class="token punctuation">:</span>
  <span class="token comment"># 开启客户端认证：enabled/disabled</span>
  <span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled

<span class="token key atrule">storage</span><span class="token punctuation">:</span>
  <span class="token comment"># 数据库地址</span>
  <span class="token key atrule">dbPath</span><span class="token punctuation">:</span> /usr/local/mongodb/data/db
  <span class="token comment">#启动journal，64位系统默认开启，32位默认关闭</span>
  <span class="token key atrule">journal</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在启动 MongoDB 时指定读取配置文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mongod <span class="token parameter variable">--config</span> /usr/local/mongodb/mongodb.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>命令</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td><code>lsof -i:端口号</code></td><td>查看进程的 PID</td><td>lsof -i:27017</td></tr><tr><td><code>kill -9 PID</code></td><td>停止进程</td><td>kill -9 24311</td></tr></tbody></table><ul><li>远程连接数据库时，需要输入账号以及密码</li><li>在服务器端代码里面，使用 Mongoose 时连接的是有权限的数据库，需要修改连接字符串</li><li><code>mongodb://username:password@ip:port/database?authSource=admin</code><ul><li><code>testadmin</code> 用户名称</li><li><code>testadmin123</code> 用户密码</li><li><code>88.888.88.888</code> 服务器地址</li><li><code>27017</code> 端口号码</li><li><code>testmongodb</code> 连接的数据库</li><li><code>?authSource=admin</code> 权限来源</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongodb://testadmin:testadmin123@88.888.88.888:27017/testmongodb?authSource<span class="token operator">=</span>admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>至此，可以通过 mongoose 连接数据库</li></ul><h2 id="十-项目部署补充" tabindex="-1"><a class="header-anchor" href="#十-项目部署补充" aria-hidden="true">#</a> （十）项目部署补充</h2><h3 id="_1-数据库恢复数据" tabindex="-1"><a class="header-anchor" href="#_1-数据库恢复数据" aria-hidden="true">#</a> 1.数据库恢复数据</h3><ul><li>新的 MongoDB 不会包含以前的一大堆命令</li><li>所以要恢复数据库，还需要下载命令</li><li>根据操作系统下载对应的工具包</li></ul><p><img src="`+H+'" alt=""></p><h3 id="_2-centos-linux-停止维护" tabindex="-1"><a class="header-anchor" href="#_2-centos-linux-停止维护" aria-hidden="true">#</a> 2.CentOS Linux 停止维护</h3><ul><li>CentOS 官方已计划停止维护 CentOS Linux 项目</li><li>阿里云上 CentOS Linux 公共镜像来源于 CentOS 官方</li><li>当 CentOS Linux 停止维护后，阿里云将会同时停止对该操作系统的支持</li></ul>',78),En={href:"https://help.aliyun.com/document_detail/347584.html?spm=5176.11346930configuration.0.0.284e5ca3pjg7iY",target:"_blank",rel:"noopener noreferrer"},Ln=n("ul",null,[n("li",null,"选择它家自研的 Alibaba Cloud Linux 2.1903 LTS 64"),n("li",null,"因为做了很多优化，而且全面兼容 RHEL/CentOS 生态，并且这也是官方所提供的一个替代方案")],-1),In=n("p",null,[n("img",{src:J,alt:""})],-1),An={href:"https://help.aliyun.com/document_detail/172788.html",target:"_blank",rel:"noopener noreferrer"},On=n("code",null,"fatal: unable to access 'https://github.com/cnpm/nvm.git/': Encountered end of file",-1),Pn=n("li",null,"原因：阿里云服务器未开启 443 端口",-1),Tn={href:"https://www.cnblogs.com/pangya/p/15735974.html",target:"_blank",rel:"noopener noreferrer"},Rn=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 开启防火墙</span>
systemctl start firewalld

<span class="token comment"># 添加 443 端口访问</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">443</span>/tcp <span class="token parameter variable">--permanent</span>

<span class="token comment"># 重新加载让配置生效</span>
firewall-cmd <span class="token parameter variable">--reload</span>

<span class="token comment"># 查看开启情况，返回 yes 说明已开启</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --query-port<span class="token operator">=</span><span class="token number">443</span>/tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-安装-mongodb-1" tabindex="-1"><a class="header-anchor" href="#_3-安装-mongodb-1" aria-hidden="true">#</a> 3.安装 MongoDB</h3><ul><li>由于更换了操作系统，所以安装 MongoDB 的方式也和之前有所不同 <ul><li>Alibaba Cloud Linux 2 对应的是 <code>CentOS7</code></li><li>Alibaba Cloud Linux 3 对应的是 <code>CentOS8</code></li></ul></li></ul><h4 id="_1-添加-yum-源" tabindex="-1"><a class="header-anchor" href="#_1-添加-yum-源" aria-hidden="true">#</a> 1）添加 yum 源</h4><ul><li>使用 yum 命令安装，需要先添加 yum 源</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/yum.repos.d/mongodb-org-5.0.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>然后添加如下内容</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>mongodb-org-5.0<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>MongoDB Repository
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://repo.mongodb.org/yum/redhat/<span class="token variable">$releasever</span>/mongodb-org/5.0/x86_64/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://www.mongodb.org/static/pgp/server-5.0.asc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在 vi 中，按键盘的 <code>i</code> 键是插入内容，插入完毕后按 <code>ESC</code> 退出，然后输入 <code>:wq</code> 保存并退出</p></blockquote><ul><li>按照官方文档添加了 yum 源文件</li><li>执行 <code>yum install -y mongodb-org</code> 命令报错 <code>Error: Failed to download metadata for repo &#39;mongodb-org-5.0&#39;: Cannot download repomd.xml: Status code: 404 for https://repo.mongodb.org/yum/redhat/3/mongodb-org/5.0/x86_64/repodata/repomd.xml</code></li><li>解决办法是将 <code>$releasever</code> 变量直接修改为 Centos 的版本 7</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>mongodb-org-5.0<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>MongoDB Repository
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>https://repo.mongodb.org/yum/redhat/7/mongodb-org/5.0/x86_64/
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgkey</span><span class="token operator">=</span>https://www.mongodb.org/static/pgp/server-5.0.asc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+G+`" alt=""></p><ul><li>修改完后再次执行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mongodb-org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>MongoDB 就能安装成功</li></ul><h4 id="_2-启动-mongodb" tabindex="-1"><a class="header-anchor" href="#_2-启动-mongodb" aria-hidden="true">#</a> 2）启动 MongoDB</h4><ul><li>安装完成后，使用 <code>systemctl</code> 命令启动 MongoDB 服务</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 启动</span>
systemctl start mongod

<span class="token comment"># 查看状态</span>
systemctl status mongod

<span class="token comment"># 重新启动</span>
systemctl restart mongod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+K+'" alt=""></p><h4 id="_3-远程连接" tabindex="-1"><a class="header-anchor" href="#_3-远程连接" aria-hidden="true">#</a> 3）远程连接</h4><ul><li>先把阿里云的安全组的对应端口打开</li></ul><p><img src="'+Q+'" alt=""></p><ul><li>点击 <mark>配置规则</mark></li></ul><p><img src="'+X+'" alt=""></p><ul><li>添加 27017 端口，不把这个端口打开，后期本地电脑无法远程连接数据库</li></ul><p><img src="'+Z+'" alt=""></p><ul><li>首先在云端系统输入 <code>mongo</code>，连接上云端的数据库</li></ul><p><img src="'+nn+`" alt=""></p><ul><li>进行数据库加密，步骤和上一个文档一样</li><li>接下来修改 MongoDB 的配置文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>将 <code>bingIp</code> 修改为 <code>0.0.0.0</code> ，这样本地的电脑才能访问到</li></ul><p><img src="`+sn+`" alt=""></p><ul><li>重新启动 MongoDB</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart mongod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在本地的 robo3T 就能连接云端数据库</li></ul><p><img src="`+an+'" alt=""></p>',36);function Un(Vn,$n){const a=o("ExternalLinkIcon");return i(),p("div",null,[tn,n("ul",null,[n("li",null,[n("a",ln,[s("https://gitee.com/dev-edu/mysite-server"),e(a)])])]),on,n("ul",null,[n("li",null,[n("a",pn,[s("https://app.apifox.com/project/2429912"),e(a)])])]),cn,dn,n("blockquote",null,[n("p",null,[s("MongoDB 的官网："),n("a",rn,[s("https://www.mongodb.com/"),e(a)])])]),un,n("blockquote",null,[n("p",null,[s("服务器地址："),n("a",mn,[s("https://gitee.com/dev-edu/mysite-server"),e(a)])])]),vn,n("ul",null,[n("li",null,[s("toast-ui 官网："),n("a",bn,[s("https://ui.toast.com/"),e(a)])]),n("li",null,[s("vue 版本："),n("a",kn,[s("https://www.npmjs.com/package/@toast-ui/vue-editor"),e(a)])])]),hn,n("blockquote",null,[n("p",null,[s("阿里云："),n("a",gn,[s("https://www.aliyun.com/"),e(a)])])]),_n,n("ul",null,[n("li",null,[s("安装 Node.js："),n("a",fn,[s("https://help.aliyun.com/document_detail/50775.html"),e(a)])])]),xn,n("div",yn,[qn,n("ul",null,[n("li",null,[wn,n("ul",null,[n("li",null,[n("a",jn,[s("https://blog.csdn.net/weixin_44320761/article/details/107671990"),e(a)])])])]),n("li",null,[Dn,n("ul",null,[Mn,n("li",null,[n("a",Sn,[s("https://blog.csdn.net/xcyja/article/details/115357818"),e(a)])])])])])]),Cn,Bn,n("blockquote",null,[n("p",null,[s("Windows 系统，参阅："),n("a",zn,[s("https://www.runoob.com/mongodb/mongodb-mongodump-mongorestore.html"),e(a)])])]),Nn,n("blockquote",null,[n("p",null,[s("具体参阅："),n("a",En,[s("https://help.aliyun.com/document_detail/347584.html?spm=5176.11346930configuration.0.0.284e5ca3pjg7iY"),e(a)])])]),Ln,In,n("blockquote",null,[n("p",null,[s("参阅："),n("a",An,[s("https://help.aliyun.com/document_detail/172788.html"),e(a)]),s(" 部署 Node.js 环境（Alibaba Cloud Linux 2）")])]),n("ul",null,[n("li",null,[On,n("ul",null,[Pn,n("li",null,[s("参阅："),n("a",Tn,[s("https://www.cnblogs.com/pangya/p/15735974.html"),e(a)])])])])]),Rn])}const Yn=l(en,[["render",Un],["__file","03.html.vue"]]);export{Yn as default};
