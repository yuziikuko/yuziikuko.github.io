const e=JSON.parse('{"key":"v-4cf5cc59","path":"/notes/DuYi/04Interview/07.html","title":"七、Promise相关面试题讲解","lang":"zh-CN","frontmatter":{"title":"七、Promise相关面试题讲解","copyright":false,"date":"2023-11-20T00:00:00.000Z","category":["笔记","渡一教育","笔面试题甄选"],"tag":["谢杰"]},"headers":[{"level":2,"title":"（一）Promise 基础","slug":"一-promise-基础","link":"#一-promise-基础","children":[{"level":3,"title":"1.Promise 规范","slug":"_1-promise-规范","link":"#_1-promise-规范","children":[]},{"level":3,"title":"2.Promise A+ 规定","slug":"_2-promise-a-规定","link":"#_2-promise-a-规定","children":[]},{"level":3,"title":"3.Promise API","slug":"_3-promise-api","link":"#_3-promise-api","children":[]}]},{"level":2,"title":"（二）Promise 的链式调用","slug":"二-promise-的链式调用","link":"#二-promise-的链式调用","children":[{"level":3,"title":"1.catch 方法","slug":"_1-catch-方法","link":"#_1-catch-方法","children":[]},{"level":3,"title":"2.链式调用","slug":"_2-链式调用","link":"#_2-链式调用","children":[]}]},{"level":2,"title":"（三）Promise 的静态方法","slug":"三-promise-的静态方法","link":"#三-promise-的静态方法","children":[]},{"level":2,"title":"（四）async & await","slug":"四-async-await","link":"#四-async-await","children":[{"level":3,"title":"1.消除回调","slug":"_1-消除回调","link":"#_1-消除回调","children":[]},{"level":3,"title":"2.async","slug":"_2-async","link":"#_2-async","children":[]},{"level":3,"title":"3.await","slug":"_3-await","link":"#_3-await","children":[]}]}],"git":{"createdTime":1700799372000,"updatedTime":1700799372000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":1}]},"readingTime":{"minutes":4.44,"words":1332},"filePathRelative":"notes/DuYi/04Interview/07.md","localizedDate":"2023年11月20日","excerpt":"<p></p>\\n<h2> （一）Promise 基础</h2>\\n<h3> 1.Promise 规范</h3>\\n<ul>\\n<li>Promise 是一套专门处理异步场景的规范</li>\\n<li>能有效的避免回调地狱的产生，使异步代码更加清晰、简洁、统一</li>\\n<li>这套规范最早诞生于前端社区，规范名称为 <a href=\\"https://promisesaplus.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Promise A+</a></li>\\n</ul>\\n<h3> 2.Promise A+ 规定</h3>\\n<h4> 1）所有的异步场景，都可以看作是一个异步任务</h4>"}');export{e as data};
