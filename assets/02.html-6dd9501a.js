import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,e as s}from"./app-bad45217.js";const i={},r=s('<h2 id="_1-理解" tabindex="-1"><a class="header-anchor" href="#_1-理解" aria-hidden="true">#</a> 1.理解</h2><ul><li><p>Vue3.0 中的一个新的配置项，值为一个函数。</p></li><li><p>setup 是所有 <strong>Composition API</strong> （组合 API）表演的舞台。</p></li><li><p>组件中所用到的数据、方法等等，均要配置在 setup 中。</p></li></ul><h2 id="_2-setup-函数的两种返回值" tabindex="-1"><a class="header-anchor" href="#_2-setup-函数的两种返回值" aria-hidden="true">#</a> 2.setup 函数的两种返回值</h2><ul><li><p><strong>若返回一个对象，则对象中的属性、方法，在模板中均可以直接使用</strong>。（重点）</p></li><li><p>若返回一个渲染函数【h()】，则可以自定义渲染内容。（了解）</p></li></ul><h2 id="_3-注意点" tabindex="-1"><a class="header-anchor" href="#_3-注意点" aria-hidden="true">#</a> 3.注意点</h2><h3 id="_1-尽量不要与-vue2-x-配置混用" tabindex="-1"><a class="header-anchor" href="#_1-尽量不要与-vue2-x-配置混用" aria-hidden="true">#</a> 1）尽量不要与 Vue2.x 配置混用</h3><ul><li><p>Vue2.x 配置（data、methods、computed......）中 <strong>可以访问到</strong> setup 中的属性、方法。</p></li><li><p>但在 setup 中 <strong>不能访问到</strong> Vue2.x 配置（data、methods、computed.....）。</p></li><li><p>如果有重名，setup 优先。</p></li></ul><h3 id="_2-setup-不能是一个-async-函数" tabindex="-1"><a class="header-anchor" href="#_2-setup-不能是一个-async-函数" aria-hidden="true">#</a> 2）setup 不能是一个 async 函数</h3><ul><li><p>因为 async 函数的返回值不再是 return 的对象，而是 Promise，模板看不到 return 对象中的属性。</p></li><li><p>后期也可以返回一个 Promise 实例，但需要 Suspense 组件和异步组件的配合。</p></li></ul>',9),n=[r];function l(o,p){return a(),t("div",null,n)}const h=e(i,[["render",l],["__file","02.html.vue"]]);export{h as default};
