import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,a as n,b as s,d as e,e as t}from"./app-1ca76096.js";const c="/assets/工程化相关面试题05-5dde3ae3.png",u="/assets/工程化相关面试题01-6ca18126.png",r="/assets/工程化相关面试题02-ecfd0d0b.png",d="/assets/工程化相关面试题03-790facfa.png",k="/assets/工程化相关面试题04-c0792c4c.png",v={},m=t('<p><img src="'+c+`" alt=""></p><h2 id="一-cmj-和-esm" tabindex="-1"><a class="header-anchor" href="#一-cmj-和-esm" aria-hidden="true">#</a> （一）CMJ 和 ESM</h2><h3 id="_1-commonjs" tabindex="-1"><a class="header-anchor" href="#_1-commonjs" aria-hidden="true">#</a> 1.CommonJS</h3><h4 id="_1-关键词" tabindex="-1"><a class="header-anchor" href="#_1-关键词" aria-hidden="true">#</a> 1）关键词</h4><ul><li>社区标准</li><li>使用函数实现</li><li>仅 node 环境支持</li><li>动态依赖（需要代码运行后才能确定依赖）</li><li>动态依赖是 <mark>同步执行</mark> 的</li></ul><h4 id="_2-原理" tabindex="-1"><a class="header-anchor" href="#_2-原理" aria-hidden="true">#</a> 2）原理</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// require函数的伪代码</span>
<span class="token keyword">function</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>该模块有缓存吗<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> 缓存结果<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">_run</span><span class="token punctuation">(</span><span class="token parameter">exports<span class="token punctuation">,</span> require<span class="token punctuation">,</span> module<span class="token punctuation">,</span> __filename<span class="token punctuation">,</span> __dirname</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 模块代码会放到这里</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> module <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">_run</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
    module<span class="token punctuation">.</span>exports<span class="token punctuation">,</span>
    module<span class="token punctuation">.</span>exports<span class="token punctuation">,</span>
    require<span class="token punctuation">,</span>
    module<span class="token punctuation">,</span>
    模块路径<span class="token punctuation">,</span>
    模块所在目录
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 把 module.exports 加入到缓存;</span>
  <span class="token keyword">return</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-es-module" tabindex="-1"><a class="header-anchor" href="#_2-es-module" aria-hidden="true">#</a> 2.ES Module</h3><h4 id="_1-关键词-1" tabindex="-1"><a class="header-anchor" href="#_1-关键词-1" aria-hidden="true">#</a> 1）关键词</h4><ul><li>官方标准</li><li>使用新语法实现</li><li>所有环境均支持</li><li>同时支持静态依赖和动态依赖 <ul><li>静态依赖：在代码运行前就要确定依赖关系</li></ul></li><li>动态依赖是 <mark>异步执行</mark> 的</li><li>符号绑定</li></ul><h4 id="_2-关于符号绑定" tabindex="-1"><a class="header-anchor" href="#_2-关于符号绑定" aria-hidden="true">#</a> 2）关于符号绑定</h4><ul><li>导入位置的符号和导出的符号并非赋值</li><li>完全是一个东西</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// module a.js</span>
<span class="token keyword">export</span> <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">changeA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> changeA <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./a.js&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token function">changeA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-面试题" tabindex="-1"><a class="header-anchor" href="#_3-面试题" aria-hidden="true">#</a> 3.面试题</h3><h4 id="_1-commonjs-和-es6-模块的区别是什么" tabindex="-1"><a class="header-anchor" href="#_1-commonjs-和-es6-模块的区别是什么" aria-hidden="true">#</a> 1）commonjs 和 es6 模块的区别是什么？</h4><blockquote><ol><li>CMJ 是社区标准，ESM 是官方标准</li><li>CMJ 是使用 API 实现的模块化，ESM 是使用新语法实现的模块化</li><li>CMJ 仅在 node 环境中支持，ESM 各种环境均支持</li><li>CMJ 是动态的依赖，同步执行。ESM 既支持动态，也支持静态，动态依赖是异步执行的</li><li>ESM 导入时有符号绑定，CMJ 只是普通函数调用和赋值</li></ol></blockquote><h4 id="_2-export-和-export-default-的区别是什么" tabindex="-1"><a class="header-anchor" href="#_2-export-和-export-default-的区别是什么" aria-hidden="true">#</a> 2）export 和 export default 的区别是什么？</h4><blockquote><ol><li>export 为普通导出，又叫做具名导出，顾名思义，它导出的数据必须带有命名，如：变量定义、函数定义这种带有命名的语句。在导出的模块对象中，命名即为模块对象的属性名。在一个模块中可以有多个具名导出</li><li>export default 为默认导出，在模块对象中名称固定为 default，因此无须命名，通常导出一个表达式或字面量。在一个模块中只能有一个默认导出</li></ol></blockquote><h4 id="_3-下面的模块导出了什么结果" tabindex="-1"><a class="header-anchor" href="#_3-下面的模块导出了什么结果" aria-hidden="true">#</a> 3）下面的模块导出了什么结果？</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>exports<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h4 id="_4-下面的代码输出什么结果" tabindex="-1"><a class="header-anchor" href="#_4-下面的代码输出什么结果" aria-hidden="true">#</a> 4）下面的代码输出什么结果？</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// module counter</span>
<span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// module main</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> increase <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./counter&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> counter <span class="token keyword">from</span> <span class="token string">&quot;./counter&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> c <span class="token punctuation">}</span> <span class="token operator">=</span> counter<span class="token punctuation">;</span>
<span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>2</p><p>1</p><p>1</p></blockquote><h2 id="二-npx" tabindex="-1"><a class="header-anchor" href="#二-npx" aria-hidden="true">#</a> （二）npx</h2><h3 id="_1-运行本地命令" tabindex="-1"><a class="header-anchor" href="#_1-运行本地命令" aria-hidden="true">#</a> 1.运行本地命令</h3><ul><li>使用 <code>npx 命令</code> 时</li><li>会首先从本地工程的 <code>node_modules/.bin</code> 目录中寻找是否有对应的命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx webpack
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>上面这条命令寻找本地工程的 <code>node_modules/.bin/webpack</code></p></blockquote><ul><li>如果将命令配置到 <code>package.json</code> 的 <code>scripts</code> 中</li><li>可以省略 <code>npx</code></li></ul><h3 id="_2-临时下载执行" tabindex="-1"><a class="header-anchor" href="#_2-临时下载执行" aria-hidden="true">#</a> 2.临时下载执行</h3><ul><li>当执行某个命令时，如果无法从本地工程中找到对应命令</li><li>会把命令对应的包下载到一个临时目录</li><li>下载完成后执行</li><li>临时目录中的命令会在适当的时候删除</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx prettyjson <span class="token number">1</span>.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>npx 会下载 <code>prettyjson</code> 包到临时目录，然后运行该命令</li><li>如果命令名称和需要下载的包名不一致时，可以手动指定包名</li><li>如：<code>@vue/cli</code> 是包名，<code>vue</code> 是命令名，两者不一致，可以使用下面的命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx <span class="token parameter variable">-p</span> @vue/cli vue create vue-app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-npm-init" tabindex="-1"><a class="header-anchor" href="#_3-npm-init" aria-hidden="true">#</a> 3.npm init</h3><ul><li><code>npm init</code> 通常用于初始化工程的 <code>package.json</code> 文件</li><li>有时也可以充当 <code>npx</code> 的作用</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 等效于 npx create-包名</span>
<span class="token function">npm</span> init 包名

<span class="token comment"># 等效于 npx @命名空间/create</span>
<span class="token function">npm</span> init @命名空间

<span class="token comment"># 等效于 npx @命名空间/create-包名</span>
<span class="token function">npm</span> init @命名空间/包名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-eslint" tabindex="-1"><a class="header-anchor" href="#三-eslint" aria-hidden="true">#</a> （三）ESLint</h2>`,39),b={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://eslint.bootcss.com/",target:"_blank",rel:"noopener noreferrer"},g=t('<h3 id="_1-eslint-的由来" tabindex="-1"><a class="header-anchor" href="#_1-eslint-的由来" aria-hidden="true">#</a> 1.ESLint 的由来</h3><ul><li>JavaScript 是一个过于灵活的语言，因此在企业开发中，往往会遇到下面两个问题 <ul><li>如何让所有员工书写高质量的代码？【代表代码的质量】 <ul><li>如：使用 <code>===</code> 替代 <code>==</code></li></ul></li><li>如何让所有员工书写的代码风格保持统一？【代表代码的风格】 <ul><li>如：字符串统一使用单引号</li></ul></li></ul></li><li>如果纯依靠人工进行检查，不仅费时费力，而且还容易出错。</li><li>ESLint 由此诞生，是一个工具</li><li><mark>预先配置好各种规则</mark>，通过这些规则来自动化的验证代码，甚至自动修复</li></ul><p><img src="'+u+`" alt=""></p><h3 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装" aria-hidden="true">#</a> 2.安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> eslint
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-验证" tabindex="-1"><a class="header-anchor" href="#_3-验证" aria-hidden="true">#</a> 3.验证</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 验证单个文件</span>
npx eslint 文件名

<span class="token comment"># 验证全部文件</span>
npx eslint src/**
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-配置规则" tabindex="-1"><a class="header-anchor" href="#_4-配置规则" aria-hidden="true">#</a> 4.配置规则</h3><ul><li>ESLint 会自动寻找根目录中的配置文件</li><li>支持三种配置文件 <ul><li><code>.eslintrc</code> JSON 格式</li><li><code>.eslintrc.js</code> JS 格式</li><li><code>.eslintrc.yml</code> YAML 格式</li></ul></li><li>以 <code>.eslintrc.js</code> 为例</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ESLint 配置</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 配置规则</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    规则名<span class="token number">1</span><span class="token operator">:</span> 级别<span class="token punctuation">,</span>
    规则名<span class="token number">2</span><span class="token operator">:</span> 级别<span class="token punctuation">,</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>每条规则由名称和级别组成 <ul><li>规则名称决定了 <mark>要检查什么</mark></li><li>规则级别决定了 <mark>检查没通过时的处理方式</mark></li></ul></li></ul><h4 id="_1-所有的规则名称" tabindex="-1"><a class="header-anchor" href="#_1-所有的规则名称" aria-hidden="true">#</a> 1）所有的规则名称</h4>`,12),y={href:"https://eslint.org/docs/rules/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://eslint.bootcss.com/docs/rules/",target:"_blank",rel:"noopener noreferrer"},f=t(`<h4 id="_2-所有的级别" tabindex="-1"><a class="header-anchor" href="#_2-所有的级别" aria-hidden="true">#</a> 2）所有的级别</h4><table><thead><tr><th>级别</th><th>含义</th></tr></thead><tbody><tr><td>0 或 &#39;off&#39;</td><td>关闭规则</td></tr><tr><td>1 或 &#39;warn&#39;</td><td>验证不通过提出警告</td></tr><tr><td>2 或 &#39;error&#39;</td><td>验证不通过报错，退出程序</td></tr></tbody></table><h4 id="_3-eslint-basic" tabindex="-1"><a class="header-anchor" href="#_3-eslint-basic" aria-hidden="true">#</a> 3）eslint-basic</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">eqeqeq</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-在-vscode-中及时发现问题" tabindex="-1"><a class="header-anchor" href="#_5-在-vscode-中及时发现问题" aria-hidden="true">#</a> 5.在 VSCode 中及时发现问题</h3><ul><li>每次都要输入命令发现问题非常麻烦</li><li>可以安装 VSCode 插件 <code>ESLint</code><ul><li>只要项目的 node_modules 中有 eslint</li><li>就会按照项目根目录下的规则自动检测</li></ul></li></ul><h3 id="_6-使用继承" tabindex="-1"><a class="header-anchor" href="#_6-使用继承" aria-hidden="true">#</a> 6.使用继承</h3><ul><li>ESLint 的规则非常庞大，全部自定义过于麻烦</li><li>一般继承其他企业开源的方案来简化配置</li></ul><blockquote><p>这方面做的比较好的是一家叫 Airbnb 的公司，他们在开发前端项目的时候自定义了一套开源规则，受到全世界的认可</p><p>只需要安装它即可</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 为了避免版本问题，不要直接安装eslint，直接安装下面的包，会自动安装相应版本的eslint</span>
<span class="token function">npm</span> i <span class="token parameter variable">-D</span> eslint-config-airbnb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>稍作配置</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 配置继承自 airbnb</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token string">&quot;airbnb&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-在框架中使用" tabindex="-1"><a class="header-anchor" href="#_7-在框架中使用" aria-hidden="true">#</a> 7.在框架中使用</h3><ul><li>一般我们使用脚手架搭建工程，在搭建工程时通常都可以直接设置 eslint</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;plugin:vue/essential&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@vue/airbnb&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&quot;babel-eslint&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;no-console&quot;</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;warn&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;no-debugger&quot;</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;warn&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-企业开发的实际情况" tabindex="-1"><a class="header-anchor" href="#_8-企业开发的实际情况" aria-hidden="true">#</a> 8.企业开发的实际情况</h3><p><img src="`+r+'" alt=""></p><ul><li>安装好 VSCode 的 ESLint 插件</li><li>学会查看 ESLint 错误提示</li></ul><h2 id="四-关于-webpack-的诸多问题" tabindex="-1"><a class="header-anchor" href="#四-关于-webpack-的诸多问题" aria-hidden="true">#</a> （四）关于 Webpack 的诸多问题</h2><h3 id="_1-为什么要学习-webpack" tabindex="-1"><a class="header-anchor" href="#_1-为什么要学习-webpack" aria-hidden="true">#</a> 1.为什么要学习 Webpack？</h3><ul><li>前端有很多打包工具，其中，Webpack 生态最完整、使用最广泛</li><li>学习 Webpack 的意义</li></ul><blockquote><ol><li>理解前端开发中出现的常见问题，以及对应的解决办法</li><li>帮助理解常见的脚手架，如 vue-cli、create-react-app、umi-js 等</li><li>可以脱离脚手架搭建工程，甚至自己完成脚手架开发</li><li>应对工程化方面的进阶面试题</li></ol></blockquote><h3 id="_2-webpack-学习哪个版本" tabindex="-1"><a class="header-anchor" href="#_2-webpack-学习哪个版本" aria-hidden="true">#</a> 2.Webpack 学习哪个版本？</h3><ul><li>截止到 2022-01-04，Webpack 的版本是 Webpack5，但目前使用的最广泛的是 Webpack4</li><li>Webpack 的版本会不断更新，但核心原理是不变的，因此，学习 Webpack4 成为了最好的选择</li></ul><h3 id="_3-如何学习-webpack" tabindex="-1"><a class="header-anchor" href="#_3-如何学习-webpack" aria-hidden="true">#</a> 3.如何学习 Webpack？</h3><blockquote><p>需要完整的学习课程「Webpack 详细版」</p><p>学习过程中，把重心放在第一章「Webpack 核心功能」和第五章「性能优化」</p></blockquote><h2 id="五-webpack-scope-hoisting" tabindex="-1"><a class="header-anchor" href="#五-webpack-scope-hoisting" aria-hidden="true">#</a> （五）Webpack Scope Hoisting</h2>',27),x={href:"https://webpack.docschina.org/plugins/module-concatenation-plugin/",target:"_blank",rel:"noopener noreferrer"},w=t(`<h3 id="_1-面试题" tabindex="-1"><a class="header-anchor" href="#_1-面试题" aria-hidden="true">#</a> 1.面试题</h3><h4 id="_1-介绍一下-webpack-scope-hoisting" tabindex="-1"><a class="header-anchor" href="#_1-介绍一下-webpack-scope-hoisting" aria-hidden="true">#</a> 1）介绍一下 webpack scope hoisting？</h4><blockquote><ol><li>scope hoisting 是 webpack 的内置优化，它是针对模块的优化，在生产环境打包时会自动开启</li><li>在未开启 scope hoisting 时，webpack 会将每个模块的代码放置在一个独立的函数环境中，这样是为了保证模块的作用域互不干扰</li><li>而 scope hoisting 的作用恰恰相反，是把多个模块的代码合并到一个函数环境中执行。在这一过程中，webpack 会按照顺序正确的合并模块代码，同时对涉及的标识符做适当处理以避免重名，这样做的好处是减少了函数调用，对运行效率有一定提升，同时也降低了打包体积</li><li>但 scope hoisting 的启用是有前提的，如果遇到某些模块多次被其他模块引用，或者使用了动态导入的模块，或者是非 ESM 的模块，都不会有 scope hoisting</li></ol></blockquote><h2 id="六-webpack5-更新" tabindex="-1"><a class="header-anchor" href="#六-webpack5-更新" aria-hidden="true">#</a> （六）Webpack5 更新</h2><h3 id="_1-清除输出目录" tabindex="-1"><a class="header-anchor" href="#_1-清除输出目录" aria-hidden="true">#</a> 1.清除输出目录</h3><ul><li>Webpack5 清除输出目录开箱可用</li><li>无须安装 <code>clean-webpack-plugin</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-top-level-await" tabindex="-1"><a class="header-anchor" href="#_2-top-level-await" aria-hidden="true">#</a> 2.top-level-await</h3><ul><li>Webpack5 现在允许在模块的 <mark>顶级代码</mark> 中直接使用 <code>await</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/index.js</span>
<span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> jsonBody <span class="token operator">=</span> <span class="token keyword">await</span> resp<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> jsonBody<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>目前，<code>top-level-await</code> 还未成为正式标准</li><li>因此，对于 Webpack5 而言，该功能是作为 <code>experiments</code> 发布的</li><li>需要在 <code>webpack.config.js</code> 中配置开启</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;source-map&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">experiments</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">topLevelAwait</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-打包体积优化" tabindex="-1"><a class="header-anchor" href="#_3-打包体积优化" aria-hidden="true">#</a> 3.打包体积优化</h3><ul><li>Webpack5 对模块的合并、作用域提升、<code>tree shaking</code> 等处理更加智能</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;source-map&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">index1</span><span class="token operator">:</span> <span class="token string">&quot;./src/index1.js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">index2</span><span class="token operator">:</span> <span class="token string">&quot;./src/index2.js&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-打包缓存开箱即用" tabindex="-1"><a class="header-anchor" href="#_4-打包缓存开箱即用" aria-hidden="true">#</a> 4.打包缓存开箱即用</h3><ul><li>在 Webpack4 中，需要使用 <code>cache-loader</code> 缓存打包结果以优化之后的打包性能</li><li>在 Webpack5 中，默认就已经开启了打包缓存，无须再安装 <code>cache-loader</code></li><li>默认情况下，Webpack5 是将模块的打包结果 <mark>缓存到内存</mark> 中 <ul><li>可以通过 <code>cache</code> 配置进行更改</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 缓存类型，支持：memory、filesystem</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;filesystem&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 缓存目录，仅类型为 filesystem 有效</span>
    <span class="token literal-property property">cacheDirectory</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;node_modules/.cache/webpack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),_={href:"https://webpack.docschina.org/configuration/other-options/#cache",target:"_blank",rel:"noopener noreferrer"},j=n("h3",{id:"_5-资源模块",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-资源模块","aria-hidden":"true"},"#"),s(" 5.资源模块")],-1),S=n("li",null,[s("在 Webpack4 中，针对资源型文件通常使用 "),n("code",null,"file-loader"),s("、"),n("code",null,"url-loader"),s("、"),n("code",null,"raw-loader"),s(" 进行处理")],-1),M=n("li",null,"由于大部分前端项目都会用到资源型文件，因此 Webpack5 原生支持了资源型模块",-1),W={href:"https://webpack.docschina.org/guides/asset-modules/",target:"_blank",rel:"noopener noreferrer"},E=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;html-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;source-map&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;main.js&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">assetModuleFilename</span><span class="token operator">:</span> <span class="token string">&quot;assets/[hash:5][ext]&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 在这里自定义资源文件保存的文件名</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.png</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset/resource&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 作用类似于 file-loader</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jpg</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset/inline&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 作用类似于 url-loader 文件大小不足的场景</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.txt</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset/source&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 作用类似于 raw-loader</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.gif</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;asset&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 作用类似于 url-loader。在导出一个 data uri 和发送一个单独的文件之间自动选择</span>
        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;gif/[hash:5][ext]&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 这里的配置会覆盖 assetModuleFilename</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">dataUrlCondition</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">maxSize</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token comment">// 4kb以下使用 data uri</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七-npm-模块安装机制" tabindex="-1"><a class="header-anchor" href="#七-npm-模块安装机制" aria-hidden="true">#</a> （七）npm 模块安装机制</h2><h3 id="_1-npm-缓存相关命令" tabindex="-1"><a class="header-anchor" href="#_1-npm-缓存相关命令" aria-hidden="true">#</a> 1.npm 缓存相关命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 清除缓存</span>
<span class="token function">npm</span> cache clean <span class="token parameter variable">-f</span>

<span class="token comment"># 获取缓存位置</span>
<span class="token function">npm</span> config get cache

<span class="token comment"># 设置缓存位置</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;新的缓存路径&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-面试题" tabindex="-1"><a class="header-anchor" href="#_2-面试题" aria-hidden="true">#</a> 2.面试题</h3><h4 id="_1-解释一下-npm-模块安装机制是什么" tabindex="-1"><a class="header-anchor" href="#_1-解释一下-npm-模块安装机制是什么" aria-hidden="true">#</a> 1）解释一下 npm 模块安装机制是什么？</h4><blockquote><ol><li>npm 会检查本地的 node_modules 目录中是否已经安装过该模块，如果已经安装，则不再重新安装</li><li>npm 检查缓存中是否有相同的模块，如果有，直接从缓存中读取安装</li><li>如果本地和缓存中均不存在，npm 会从 registry 指定的地址下载安装包，然后将其写入到本地的 node_modules 目录中，同时缓存起来</li></ol><br><p>npm 缓存相关命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 清除缓存</span>
<span class="token function">npm</span> cache clean <span class="token parameter variable">-f</span>

<span class="token comment"># 获取缓存位置</span>
<span class="token function">npm</span> config get cache

<span class="token comment"># 设置缓存位置</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;新的缓存路径&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h2 id="八-模块联邦" tabindex="-1"><a class="header-anchor" href="#八-模块联邦" aria-hidden="true">#</a> （八）模块联邦</h2><h3 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1.背景</h3><ul><li>在大型项目中，往往会把项目中的某个区域或功能模块作为单独的项目开发，最终形成 <mark>微前端</mark> 架构</li><li>在微前端架构中，不同的工程可能出现下面的场景</li></ul><p><img src="`+d+'" alt=""></p><ul><li>这涉及到很多非常棘手的问题 <ul><li>如何避免公共模块重复打包</li><li>如何将某个项目中一部分模块分享出去，同时还要避免重复打包</li><li>如何管理依赖的不同版本</li><li>如何更新模块</li><li>......</li></ul></li><li>Webpack5 尝试着通过 <mark>模块联邦</mark> 来解决此类问题</li></ul><blockquote><p>示例</p><p>现有两个微前端工程，它们各自独立开发、测试、部署，但有一些相同的公共模块，并有一些自己的模块需要分享给其他工程使用，同时又要引入其他工程的模块</p><p><img src="'+k+`" alt=""></p></blockquote><h3 id="_2-初始化工程" tabindex="-1"><a class="header-anchor" href="#_2-初始化工程" aria-hidden="true">#</a> 2. 初始化工程</h3><h4 id="_1-home-项目" tabindex="-1"><a class="header-anchor" href="#_1-home-项目" aria-hidden="true">#</a> 1）home 项目</h4><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 初始化 package.json</span>
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>

<span class="token comment"># 安装依赖</span>
<span class="token function">npm</span> i <span class="token parameter variable">-D</span> webpack webpack-cli webpack-dev-server html-webpack-plugin
<span class="token function">npm</span> i jquery
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改 package.json</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
   <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve&quot;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置 webpack.config.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;html-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;source-map&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>代码</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/now.js</span>
<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&quot;jquery&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    p<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// src/bootstrap.js</span>
<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&quot;jquery&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> now <span class="token keyword">from</span> <span class="token string">&quot;./now&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 生成首页标题</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;首页&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 首页中有一个显示当前时间的区域</span>
<span class="token function">now</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// src/index.js</span>
<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./bootstrap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-active-项目" tabindex="-1"><a class="header-anchor" href="#_2-active-项目" aria-hidden="true">#</a> 2）active 项目</h4><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 初始化 package.json</span>
<span class="token function">npm</span> init <span class="token parameter variable">-y</span>

<span class="token comment"># 安装依赖</span>
<span class="token function">npm</span> i <span class="token parameter variable">-D</span> webpack webpack-cli webpack-dev-server html-webpack-plugin
<span class="token function">npm</span> i jquery
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改 package.json</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
   <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve&quot;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置 webpack.config.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;html-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&quot;./src/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&quot;source-map&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">clean</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>代码</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/news.js</span>
<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&quot;jquery&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">container</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ul <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;ul&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    html <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;li&gt;新闻</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/li&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  ul<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// src/bootstrap.js</span>
<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">&quot;jquery&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> news <span class="token keyword">from</span> <span class="token string">&quot;./news&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 生成活动页标题</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;活动页&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 活动页中有一个新闻列表</span>
<span class="token function">news</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// src/index.js</span>
<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./bootstrap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-暴露和引用模块" tabindex="-1"><a class="header-anchor" href="#_3-暴露和引用模块" aria-hidden="true">#</a> 3.暴露和引用模块</h3><h4 id="_1-active-项目需要使用-home-项目的-now-模块" tabindex="-1"><a class="header-anchor" href="#_1-active-项目需要使用-home-项目的-now-模块" aria-hidden="true">#</a> 1）active 项目需要使用 home 项目的 now 模块</h4><ul><li>home 项目暴露 now 模块</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> ModuleFederationPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack/lib/container/ModuleFederationPlugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 模块联邦的名称</span>
      <span class="token comment">// 该名称将成为一个全部变量，通过该变量将可获取当前联邦的所有暴露模块</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 模块联邦生成的文件名，全部变量将置入到该文件中</span>
      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;home-entry.js&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 模块联邦暴露的所有模块</span>
      <span class="token literal-property property">exposes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// key：相对于模块联邦的路径</span>
        <span class="token comment">// 这里的 ./now 将决定该模块的访问路径为 home/now</span>
        <span class="token comment">// value: 模块的具体路径</span>
        <span class="token string-property property">&quot;./now&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src/now.js&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>active 项目引入 now 模块</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> ModuleFederationPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack/lib/container/ModuleFederationPlugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 远程使用其他项目暴露的模块</span>
      <span class="token literal-property property">remotes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// key: 自定义远程暴露的联邦名</span>
        <span class="token comment">// 比如为 abc， 则之后引用该联邦的模块则使用 import &quot;abc/模块名&quot;</span>
        <span class="token comment">// value: 模块联邦名@模块联邦访问地址</span>
        <span class="token comment">// 远程访问时，将从下面的地址加载</span>
        <span class="token literal-property property">home</span><span class="token operator">:</span> <span class="token string">&quot;home@http://localhost:8080/home-entry.js&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// src/bootstrap.js</span>
<span class="token comment">// 远程引入时间模块</span>
<span class="token keyword">import</span> now <span class="token keyword">from</span> <span class="token string">&quot;home/now&quot;</span><span class="token punctuation">;</span>
<span class="token function">now</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-home-项目需要使用-active-项目的-news-模块" tabindex="-1"><a class="header-anchor" href="#_2-home-项目需要使用-active-项目的-news-模块" aria-hidden="true">#</a> 2）home 项目需要使用 active 项目的 news 模块</h4><ul><li>active 项目暴露 news 模块</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> ModuleFederationPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack/lib/container/ModuleFederationPlugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 模块联邦的名称</span>
      <span class="token comment">// 该名称将成为一个全部变量，通过该变量将可获取当前联邦的所有暴露模块</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;active&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 模块联邦生成的文件名，全部变量将置入到该文件中</span>
      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&quot;active-entry.js&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// 模块联邦暴露的所有模块</span>
      <span class="token literal-property property">exposes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// key：相对于模块联邦的路径</span>
        <span class="token comment">// 这里的 ./news 将决定该模块的访问路径为 active/news</span>
        <span class="token comment">// value: 模块的具体路径</span>
        <span class="token string-property property">&quot;./news&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src/news.js&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>home 项目引入 news 模块</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> ModuleFederationPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack/lib/container/ModuleFederationPlugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 远程使用其他项目暴露的模块</span>
      <span class="token literal-property property">remotes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// key: 自定义远程暴露的联邦名</span>
        <span class="token comment">// 比如为 abc， 则之后引用该联邦的模块则使用 import &quot;abc/模块名&quot;</span>
        <span class="token comment">// value: 模块联邦名@模块联邦访问地址</span>
        <span class="token comment">// 远程访问时，将从下面的地址加载</span>
        <span class="token literal-property property">active</span><span class="token operator">:</span> <span class="token string">&quot;active@http://localhost:3000/active-entry.js&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// src/bootstrap.js</span>
<span class="token comment">// 远程引入新闻模块</span>
<span class="token keyword">import</span> news <span class="token keyword">from</span> <span class="token string">&quot;active/news&quot;</span><span class="token punctuation">;</span>
<span class="token function">news</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-处理共享模块" tabindex="-1"><a class="header-anchor" href="#_4-处理共享模块" aria-hidden="true">#</a> 4.处理共享模块</h3><ul><li>两个项目均使用了 jquery</li><li>为了避免重复，可以同时为双方使用 <code>shared</code> 配置共享模块</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ModuleFederationPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack/lib/container/ModuleFederationPlugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 配置共享模块</span>
      <span class="token literal-property property">shared</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// jquery为共享模块</span>
        <span class="token literal-property property">jquery</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">singleton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 全局唯一</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46);function P(F,L){const a=o("ExternalLinkIcon");return l(),i("div",null,[m,n("blockquote",null,[n("p",null,[n("a",b,[s("ESLint 官网"),e(a)])]),n("p",null,[n("a",h,[s("ESLint 民间中文网"),e(a)])])]),g,n("ul",null,[n("li",null,[s("官方："),n("a",y,[s("https://eslint.org/docs/rules/"),e(a)])]),n("li",null,[s("中文："),n("a",q,[s("https://eslint.bootcss.com/docs/rules/"),e(a)])])]),f,n("blockquote",null,[n("p",null,[n("a",x,[s("详细介绍"),e(a)])])]),w,n("blockquote",null,[n("p",null,[s("关于 cache 的更多配置参考 "),n("a",_,[s("https://webpack.docschina.org/configuration/other-options/#cache"),e(a)])])]),j,n("ul",null,[S,M,n("li",null,[s("详见："),n("a",W,[s("https://webpack.docschina.org/guides/asset-modules/"),e(a)])])]),E])}const J=p(v,[["render",P],["__file","13.html.vue"]]);export{J as default};
