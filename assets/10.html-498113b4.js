import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e}from"./app-1240ea23.js";const t={},i=e(`<h2 id="一-歌词滚动" tabindex="-1"><a class="header-anchor" href="#一-歌词滚动" aria-hidden="true">#</a> （一）歌词滚动</h2><h3 id="_1-页面功能组成" tabindex="-1"><a class="header-anchor" href="#_1-页面功能组成" aria-hidden="true">#</a> 1.页面功能组成</h3><ul><li>页面初始化</li><li>交互事件 <ul><li>监听什么事件</li><li>如何处理</li></ul></li></ul><h2 id="二-王者荣耀官网英雄查询" tabindex="-1"><a class="header-anchor" href="#二-王者荣耀官网英雄查询" aria-hidden="true">#</a> （二）王者荣耀官网英雄查询</h2><h3 id="_1-英雄对象属性" tabindex="-1"><a class="header-anchor" href="#_1-英雄对象属性" aria-hidden="true">#</a> 1.英雄对象属性</h3><h4 id="_1-pay-type" tabindex="-1"><a class="header-anchor" href="#_1-pay-type" aria-hidden="true">#</a> 1）pay_type</h4><ul><li>该值为 <code>10</code> 时，表示本周免费</li><li>该值为 <code>11</code> 时，表示新手推荐</li></ul><h4 id="_2-hero-type-hero-type2" tabindex="-1"><a class="header-anchor" href="#_2-hero-type-hero-type2" aria-hidden="true">#</a> 2）hero_type, hero_type2</h4><ul><li>有些英雄同时具有两种英雄类型</li><li>例如 <code>{ hero_type: 6, hero_type2: 2}</code> 表示该英雄既是一个辅助，也是一个法师 <ul><li>1-战士</li><li>2-法师</li><li>3-坦克</li><li>4-刺客</li><li>5-射手</li><li>6-辅助</li></ul></li></ul><h3 id="_2-自定义属性" tabindex="-1"><a class="header-anchor" href="#_2-自定义属性" aria-hidden="true">#</a> 2.自定义属性</h3><h4 id="_1-设置自定义属性" tabindex="-1"><a class="header-anchor" href="#_1-设置自定义属性" aria-hidden="true">#</a> 1）设置自定义属性</h4><ul><li>HTML5 规范：自定义属性必须以 <code>data-</code> 开头</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-获取自定义属性值" tabindex="-1"><a class="header-anchor" href="#_2-获取自定义属性值" aria-hidden="true">#</a> 2）获取自定义属性值</h4><ul><li>HTML5 API：<code>dataset</code></li><li>当且仅当属性名以 <code>data-</code> 开头时有效</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> type <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 或者</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-美团省市级联" tabindex="-1"><a class="header-anchor" href="#三-美团省市级联" aria-hidden="true">#</a> （三）美团省市级联</h2><h3 id="_1-grid-布局" tabindex="-1"><a class="header-anchor" href="#_1-grid-布局" aria-hidden="true">#</a> 1.grid 布局</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-auto-flow</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>auto-fit<span class="token punctuation">,</span> 20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">row-gap</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
  <span class="token property">column-gap</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span>
  <span class="token property">justify-items</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-dry-原则" tabindex="-1"><a class="header-anchor" href="#_2-dry-原则" aria-hidden="true">#</a> 2.DRY 原则</h3><ul><li>Don&#39;t repeat yourself</li><li>优先注册多元素的公共处理事件</li></ul>`,21),p=[i];function l(o,c){return n(),s("div",null,p)}const r=a(t,[["render",l],["__file","10.html.vue"]]);export{r as default};
