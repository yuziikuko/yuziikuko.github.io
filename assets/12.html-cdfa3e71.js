import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,a as n,b as a,d as t,e}from"./app-1240ea23.js";const i={},u=n("h2",{id:"一-composition-api-的优势",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一-composition-api-的优势","aria-hidden":"true"},"#"),a(" （一）Composition API 的优势")],-1),r=n("h3",{id:"_1-options-api-选项式-api-存在的问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-options-api-选项式-api-存在的问题","aria-hidden":"true"},"#"),a(" 1.Options API（选项式 API）存在的问题")],-1),d=n("li",null,"使用传统 Options API 时，新增或者修改一个需求，就需要分别在 data、methods、computed 里面修改",-1),k={href:"https://cn.vuejs.org/guide/introduction.html#api-styles",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"_2-composition-api-组合式-api-的优势",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-composition-api-组合式-api-的优势","aria-hidden":"true"},"#"),a(" 2.Composition API（组合式 API）的优势")],-1),h=n("li",null,"可以更加优雅地组织代码、函数，让相关功能的代码更加有地组织在一起",-1),m={href:"https://www.vuemastery.com/courses/vue-3-essentials/why-the-composition-api/",target:"_blank",rel:"noopener noreferrer"},g=e(`<h2 id="二-vue3-中新的组件" tabindex="-1"><a class="header-anchor" href="#二-vue3-中新的组件" aria-hidden="true">#</a> （二）Vue3 中新的组件</h2><h3 id="_1-fragment-组件" tabindex="-1"><a class="header-anchor" href="#_1-fragment-组件" aria-hidden="true">#</a> 1.Fragment 组件</h3><h4 id="_1-在-vue2-中" tabindex="-1"><a class="header-anchor" href="#_1-在-vue2-中" aria-hidden="true">#</a> 1）在 Vue2 中</h4><ul><li>组件必须有一个根标签</li></ul><h4 id="_2-在-vue3-中" tabindex="-1"><a class="header-anchor" href="#_2-在-vue3-中" aria-hidden="true">#</a> 2）在 Vue3 中</h4><ul><li>组件可以没有根标签</li><li>内部会将多个标签包裹在一个 Fragment 虚拟元素中</li></ul><h4 id="_3-好处" tabindex="-1"><a class="header-anchor" href="#_3-好处" aria-hidden="true">#</a> 3）好处</h4><ul><li>减少标签层级</li><li>减小内存占用</li></ul><h3 id="_2-teleport-组件" tabindex="-1"><a class="header-anchor" href="#_2-teleport-组件" aria-hidden="true">#</a> 2.Teleport 组件</h3><h4 id="_1-定义" tabindex="-1"><a class="header-anchor" href="#_1-定义" aria-hidden="true">#</a> 1）定义</h4><ul><li><code>Teleport</code> 是一种能够将 <strong>组件 HTML 结构</strong> 移动到指定位置的技术</li></ul><h4 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用" aria-hidden="true">#</a> 2）使用</h4><ul><li>移动位置： <ul><li>表示要把包裹的 HTML 结构插入到哪里</li></ul></li><li>可选值： <ul><li>HTML 元素：如：<code>body</code>、<code>html</code></li><li>id 选择器：如：<code>#test</code>等</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>teleport</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>移动位置<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShow<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mask<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialog<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我是一个弹窗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShow = false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>关闭弹窗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>teleport</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-suspense-组件" tabindex="-1"><a class="header-anchor" href="#_3-suspense-组件" aria-hidden="true">#</a> 3.Suspense 组件</h3><h4 id="_1-定义-1" tabindex="-1"><a class="header-anchor" href="#_1-定义-1" aria-hidden="true">#</a> 1）定义</h4><ul><li>等待异步组件时渲染一些额外的内容，让应用有更好的用户体验</li></ul><h4 id="_2-使用-1" tabindex="-1"><a class="header-anchor" href="#_2-使用-1" aria-hidden="true">#</a> 2）使用</h4><ul><li>异步引入组件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineAsyncComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Child <span class="token operator">=</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./components/Child.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 <code>Suspense</code> 包裹组件，并配置好 <code>default</code> 与 <code>fallback</code></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我是App组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Suspense</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>default</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>fallback</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>稍等，加载中......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Suspense</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-让组件加载缓慢的原因" tabindex="-1"><a class="header-anchor" href="#_3-让组件加载缓慢的原因" aria-hidden="true">#</a> 3）让组件加载缓慢的原因</h4><ul><li>网速缓慢</li><li>异步组件 setup 返回的是 Promise 对象</li></ul><h2 id="三-vue3-中一些其他改变——全局-api-的转移" tabindex="-1"><a class="header-anchor" href="#三-vue3-中一些其他改变——全局-api-的转移" aria-hidden="true">#</a> （三）Vue3 中一些其他改变——全局 API 的转移</h2><h3 id="_1-vue2-x-有许多全局-api-和配置" tabindex="-1"><a class="header-anchor" href="#_1-vue2-x-有许多全局-api-和配置" aria-hidden="true">#</a> 1.Vue2.x 有许多全局 API 和配置</h3><ul><li>如：注册全局组件、注册全局指令等</li></ul><h4 id="_1-注册全局组件" tabindex="-1"><a class="header-anchor" href="#_1-注册全局组件" aria-hidden="true">#</a> 1）注册全局组件</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;MyButton&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;button @click=&quot;count++&quot;&gt;Clicked {{ count }} times.&lt;/button&gt;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-注册全局指令" tabindex="-1"><a class="header-anchor" href="#_2-注册全局指令" aria-hidden="true">#</a> 2）注册全局指令</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&quot;focus&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">inserted</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-vue3-0-中对这些-api-做出了调整" tabindex="-1"><a class="header-anchor" href="#_2-vue3-0-中对这些-api-做出了调整" aria-hidden="true">#</a> 2.Vue3.0 中对这些 API 做出了调整</h3>`,32),b={href:"https://cn.vuejs.org/api/application.html",target:"_blank",rel:"noopener noreferrer"},_=e(`<h4 id="_1-将全局-api-vue-xxx-调整到应用实例-app-上" tabindex="-1"><a class="header-anchor" href="#_1-将全局-api-vue-xxx-调整到应用实例-app-上" aria-hidden="true">#</a> 1）将全局 API（<code>Vue.xxx</code>）调整到应用实例（<code>app</code>）上</h4><table><thead><tr><th>2.x 全局 API（Vue）</th><th>3.x 实例 API（app）</th></tr></thead><tbody><tr><td>Vue.config.xxx</td><td>app.config.xxx</td></tr><tr><td>Vue.config.productionTip</td><td><strong>移除</strong></td></tr><tr><td>Vue.component</td><td>app.component</td></tr><tr><td>Vue.directive</td><td>app.directive</td></tr><tr><td>Vue.mixin</td><td>app.mixin</td></tr><tr><td>Vue.use</td><td>app.use</td></tr><tr><td>Vue.prototype</td><td>app.config.globalProperties</td></tr></tbody></table><h4 id="_2-其它改变" tabindex="-1"><a class="header-anchor" href="#_2-其它改变" aria-hidden="true">#</a> 2）其它改变</h4><ul><li>data 选项应始终被声明为一个函数</li><li>过渡类名的更改：</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* Vue2.x 写法 */</span>
<span class="token selector">.v-enter,
.v-leave-to</span> <span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.v-leave,
.v-enter-to</span> <span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Vue3.x 写法 */</span>
<span class="token selector">.v-enter-from,
.v-leave-to</span> <span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.v-leave-from,
.v-enter-to</span> <span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>移除</strong> keyCode 作为 v-on 的修饰符，同时也不再支持 <code>Vue.config.keyCodes</code></li><li><strong>移除</strong> <code>v-on.native</code> 修饰符</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- Vue2.x 写法 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addNum<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- Vue3.x 写法【根据子组件声明决定是否绑定原生事件】 --&gt;</span>
<span class="token comment">&lt;!-- 父组件中绑定事件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span>
  <span class="token attr-name"><span class="token namespace">v-on:</span>close</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleComponentEvent<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleNativeClickEvent<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!-- 子组件中声明自定义事件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">emits</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>移除</strong> 过滤器（filter）</li></ul><blockquote><p>过滤器虽然看起来很方便，但它需要一个自定义语法</p><p>打破大括号内表达式是“只是 JavaScript”的假设</p><p>这不仅有学习成本，而且有实现成本</p><p>建议用方法调用或计算属性去替换过滤器</p></blockquote>`,9);function f(x,q){const s=o("ExternalLinkIcon");return l(),c("div",null,[u,r,n("ul",null,[d,n("li",null,[n("a",k,[a("https://cn.vuejs.org/guide/introduction.html#api-styles"),t(s)])])]),v,n("ul",null,[h,n("li",null,[n("a",m,[a("https://www.vuemastery.com/courses/vue-3-essentials/why-the-composition-api/"),t(s)])])]),g,n("ul",null,[n("li",null,[n("a",b,[a("https://cn.vuejs.org/api/application.html"),t(s)])])]),_])}const w=p(i,[["render",f],["__file","12.html.vue"]]);export{w as default};
