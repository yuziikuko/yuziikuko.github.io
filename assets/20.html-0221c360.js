import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as i,e as l}from"./app-1240ea23.js";const h={},r=l('<h2 id="一-模块与组件、模块化与组件化" tabindex="-1"><a class="header-anchor" href="#一-模块与组件、模块化与组件化" aria-hidden="true">#</a> （一）模块与组件、模块化与组件化</h2><h3 id="_1-模块" tabindex="-1"><a class="header-anchor" href="#_1-模块" aria-hidden="true">#</a> 1.模块</h3><ul><li>理解：向外提供特定功能的 js 程序，一般就是一个 js 文件</li><li>为什么：js 文件很多很复杂</li><li>作用：复用 js，简化 js 的编写，提高 js 运行效率</li></ul><h3 id="_2-组件" tabindex="-1"><a class="header-anchor" href="#_2-组件" aria-hidden="true">#</a> 2.组件</h3><ul><li>理解：用来实现局部（特定）功能效果的代码集合（html/css/js/image/...）</li><li>为什么：一个界面的功能很复杂</li><li>作用：复用编码，简化项目编码，提高项目运行效率</li></ul><h3 id="_3-模块化" tabindex="-1"><a class="header-anchor" href="#_3-模块化" aria-hidden="true">#</a> 3.模块化</h3><ul><li>当应用中的 js 都以模块来编写时，那这个应用就是一个模块化的应用</li></ul><h3 id="_4-组件化" tabindex="-1"><a class="header-anchor" href="#_4-组件化" aria-hidden="true">#</a> 4.组件化</h3><ul><li>当应用中的功能都以多组件的方式来编写时，那这个应用就是一个组件化的应用</li></ul><h2 id="二-非单文件组件-a-html" tabindex="-1"><a class="header-anchor" href="#二-非单文件组件-a-html" aria-hidden="true">#</a> （二）非单文件组件（a.html）</h2><ul><li>一个文件中包含 n 个组件</li></ul><h2 id="三-单文件组件-a-vue" tabindex="-1"><a class="header-anchor" href="#三-单文件组件-a-vue" aria-hidden="true">#</a> （三）单文件组件（a.vue）</h2><ul><li>一个文件中只包含有 1 个组件</li></ul>',13),d=[r];function t(s,n){return e(),i("div",null,d)}const o=a(h,[["render",t],["__file","20.html.vue"]]);export{o as default};
