const e=JSON.parse('{"key":"v-235c47df","path":"/notes/React16/08.html","title":"八、React 扩展","lang":"zh-CN","frontmatter":{"title":"八、React 扩展","copyright":false,"date":"2022-12-04T00:00:00.000Z","category":["笔记","React16.8"],"tag":["尚硅谷","张天禹"]},"headers":[{"level":2,"title":"（一）setState 更新状态的两种写法","slug":"一-setstate-更新状态的两种写法","link":"#一-setstate-更新状态的两种写法","children":[{"level":3,"title":"1.对象式的 setState","slug":"_1-对象式的-setstate","link":"#_1-对象式的-setstate","children":[]},{"level":3,"title":"2.函数式的 setState","slug":"_2-函数式的-setstate","link":"#_2-函数式的-setstate","children":[]},{"level":3,"title":"3.总结","slug":"_3-总结","link":"#_3-总结","children":[]}]},{"level":2,"title":"（二）lazyLoad —— 路由组件的懒加载","slug":"二-lazyload-——-路由组件的懒加载","link":"#二-lazyload-——-路由组件的懒加载","children":[{"level":3,"title":"1.lazy()","slug":"_1-lazy","link":"#_1-lazy","children":[]},{"level":3,"title":"2.<Suspense>","slug":"_2-suspense","link":"#_2-suspense","children":[]}]},{"level":2,"title":"（三）Hooks","slug":"三-hooks","link":"#三-hooks","children":[{"level":3,"title":"1.React Hook/Hooks 是什么？","slug":"_1-react-hook-hooks-是什么","link":"#_1-react-hook-hooks-是什么","children":[]},{"level":3,"title":"2.三个常用的 Hook","slug":"_2-三个常用的-hook","link":"#_2-三个常用的-hook","children":[]},{"level":3,"title":"3.State Hook","slug":"_3-state-hook","link":"#_3-state-hook","children":[]},{"level":3,"title":"4.Effect Hook","slug":"_4-effect-hook","link":"#_4-effect-hook","children":[]},{"level":3,"title":"5.Ref Hook","slug":"_5-ref-hook","link":"#_5-ref-hook","children":[]}]},{"level":2,"title":"（四）Fragment","slug":"四-fragment","link":"#四-fragment","children":[{"level":3,"title":"1.语法","slug":"_1-语法","link":"#_1-语法","children":[]},{"level":3,"title":"2.作用","slug":"_2-作用","link":"#_2-作用","children":[]}]},{"level":2,"title":"（五）Context","slug":"五-context","link":"#五-context","children":[{"level":3,"title":"1.理解","slug":"_1-理解","link":"#_1-理解","children":[]},{"level":3,"title":"2.使用","slug":"_2-使用","link":"#_2-使用","children":[]},{"level":3,"title":"3.注意","slug":"_3-注意","link":"#_3-注意","children":[]}]},{"level":2,"title":"（六）组件优化","slug":"六-组件优化","link":"#六-组件优化","children":[{"level":3,"title":"1.Component 的 2 个问题","slug":"_1-component-的-2-个问题","link":"#_1-component-的-2-个问题","children":[]},{"level":3,"title":"2.说明","slug":"_2-说明","link":"#_2-说明","children":[]},{"level":3,"title":"3.解决","slug":"_3-解决","link":"#_3-解决","children":[]}]},{"level":2,"title":"（七）render props","slug":"七-render-props","link":"#七-render-props","children":[{"level":3,"title":"1.如何向组件内部动态传入带内容的结构（标签）？","slug":"_1-如何向组件内部动态传入带内容的结构-标签","link":"#_1-如何向组件内部动态传入带内容的结构-标签","children":[]},{"level":3,"title":"2.children props","slug":"_2-children-props","link":"#_2-children-props","children":[]},{"level":3,"title":"3.render props","slug":"_3-render-props","link":"#_3-render-props","children":[]}]},{"level":2,"title":"（八）错误边界","slug":"八-错误边界","link":"#八-错误边界","children":[{"level":3,"title":"1.理解","slug":"_1-理解-1","link":"#_1-理解-1","children":[]},{"level":3,"title":"2.特点","slug":"_2-特点","link":"#_2-特点","children":[]},{"level":3,"title":"3.使用方式","slug":"_3-使用方式","link":"#_3-使用方式","children":[]}]},{"level":2,"title":"（九）组件间通信方式总结","slug":"九-组件间通信方式总结","link":"#九-组件间通信方式总结","children":[{"level":3,"title":"1.组件间的关系","slug":"_1-组件间的关系","link":"#_1-组件间的关系","children":[]},{"level":3,"title":"2.几种通信方式","slug":"_2-几种通信方式","link":"#_2-几种通信方式","children":[]},{"level":3,"title":"3.比较好的搭配方式","slug":"_3-比较好的搭配方式","link":"#_3-比较好的搭配方式","children":[]}]}],"git":{"createdTime":1670162313000,"updatedTime":1689506602000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":6.22,"words":1865},"filePathRelative":"notes/React16/08.md","localizedDate":"2022年12月4日","excerpt":"<h2> （一）setState 更新状态的两种写法</h2>\\n<h3> 1.对象式的 <code>setState</code></h3>\\n<ul>\\n<li><code>setState(stateChange, [callback])</code></li>\\n<li><code>stateChange</code> 为状态改变对象，该对象可以体现出状态的更改</li>\\n<li><code>callback</code> 是可选的回调函数，它在状态更新完毕、界面也更新后（render 调用后）才被调用</li>\\n</ul>\\n<div class=\\"language-jsx line-numbers-mode\\" data-ext=\\"jsx\\"><pre class=\\"language-jsx\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> count <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>state<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// this.setState({ count: count + 1 });</span>\\n<span class=\\"token comment\\">// setState的调用是同步的，但是后续引起React更新的动作是异步的</span>\\n<span class=\\"token comment\\">// console.log(\\"13行的输出\\", this.state.count); // 0</span>\\n\\n<span class=\\"token comment\\">// callback是React更新状态后被调用</span>\\n<span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setState</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">count</span><span class=\\"token operator\\">:</span> count <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>state<span class=\\"token punctuation\\">.</span>count<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 1</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
