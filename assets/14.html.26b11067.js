import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as e}from"./app.b9fb66d9.js";const t={},p=e(`<h2 id="\u4E00-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u4E00-\u7B80\u4ECB" aria-hidden="true">#</a> \uFF08\u4E00\uFF09\u7B80\u4ECB</h2><ul><li><p><code>ES6</code> \u63D0\u4F9B\u4E86\u65B0\u7684\u6570\u636E\u7ED3\u6784 <code>Set</code> \uFF08\u96C6\u5408\uFF09\u3002</p></li><li><p>\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u4F46\u6210\u5458\u7684\u503C\u90FD\u662F\u552F\u4E00\u7684\u3010\u81EA\u52A8\u53BB\u91CD\u3011\u3002</p></li><li><p>\u5B9E\u73B0\u4E86 <code>iterator</code> \u63A5\u53E3\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26 <code>...</code> \u548C <code>for...of</code> \u904D\u5386\u3002</p></li></ul><h3 id="_1-\u5C5E\u6027\u548C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u5C5E\u6027\u548C\u65B9\u6CD5" aria-hidden="true">#</a> 1.\u5C5E\u6027\u548C\u65B9\u6CD5</h3><ul><li><p><code>size</code> \uFF1A\u8FD4\u56DE\u96C6\u5408\u7684\u5143\u7D20\u4E2A\u6570\u3002</p></li><li><p><code>add</code> \uFF1A\u589E\u52A0\u4E00\u4E2A\u65B0\u5143\u7D20\uFF0C\u8FD4\u56DE\u5F53\u524D\u96C6\u5408\u3002</p></li><li><p><code>delete</code> \uFF1A\u5220\u9664\u5143\u7D20\uFF0C\u8FD4\u56DE <code>boolean</code> \u503C\u3002</p></li><li><p><code>has</code> \uFF1A\u68C0\u6D4B\u96C6\u5408\u4E2D\u662F\u5426\u5305\u542B\u67D0\u4E2A\u5143\u7D20\uFF0C\u8FD4\u56DE <code>boolean</code> \u503C\u3002</p></li></ul><h3 id="_2-\u58F0\u660E\u4E00\u4E2A-set" tabindex="-1"><a class="header-anchor" href="#_2-\u58F0\u660E\u4E00\u4E2A-set" aria-hidden="true">#</a> 2.\u58F0\u660E\u4E00\u4E2A Set</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token keyword">typeof</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set(0) {size: 0} &#39;object&#39;</span>

<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;D&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set(4) {&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5143\u7D20\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#_3-\u5143\u7D20\u4E2A\u6570" aria-hidden="true">#</a> 3.\u5143\u7D20\u4E2A\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u6DFB\u52A0\u65B0\u7684\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_4-\u6DFB\u52A0\u65B0\u7684\u5143\u7D20" aria-hidden="true">#</a> 4.\u6DFB\u52A0\u65B0\u7684\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set(5) {&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u5220\u9664\u65E7\u7684\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_5-\u5220\u9664\u65E7\u7684\u5143\u7D20" aria-hidden="true">#</a> 5.\u5220\u9664\u65E7\u7684\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s2<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set(4) {&#39;A&#39;, &#39;B&#39;, &#39;D&#39;, &#39;E&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-\u68C0\u6D4B\u73B0\u6709\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_6-\u68C0\u6D4B\u73B0\u6709\u5143\u7D20" aria-hidden="true">#</a> 6.\u68C0\u6D4B\u73B0\u6709\u5143\u7D20</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_7-\u904D\u5386" aria-hidden="true">#</a> 7.\u904D\u5386</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> s2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// A</span>
<span class="token comment">// B</span>
<span class="token comment">// D</span>
<span class="token comment">// E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-\u6E05\u7A7A" tabindex="-1"><a class="header-anchor" href="#_8-\u6E05\u7A7A" aria-hidden="true">#</a> 8.\u6E05\u7A7A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s2<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set(0) {size: 0}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C-\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#\u4E8C-\u5B9E\u8DF5" aria-hidden="true">#</a> \uFF08\u4E8C\uFF09\u5B9E\u8DF5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> 1.\u6570\u7EC4\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#_2-\u4EA4\u96C6" aria-hidden="true">#</a> 2.\u4EA4\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// let res2 = [...new Set(arr1)].filter((item) =&gt; {</span>
<span class="token comment">//   let s2 = new Set(arr2); // 4 5 6</span>
<span class="token comment">//   if (s2.has(item)) return true;</span>
<span class="token comment">//   else return false;</span>
<span class="token comment">// });</span>

<span class="token keyword">let</span> res2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5E76\u96C6" tabindex="-1"><a class="header-anchor" href="#_3-\u5E76\u96C6" aria-hidden="true">#</a> 3.\u5E76\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> res3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-\u5DEE\u96C6" tabindex="-1"><a class="header-anchor" href="#_4-\u5DEE\u96C6" aria-hidden="true">#</a> 4.\u5DEE\u96C6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> res4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res4<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,28),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","14.html.vue"]]);export{d as default};
