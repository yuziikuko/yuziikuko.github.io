import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as i,c as p,a,b as n,d as c,e as s}from"./app-1ca76096.js";const o={},u=s(`<h2 id="一-主流浏览器" tabindex="-1"><a class="header-anchor" href="#一-主流浏览器" aria-hidden="true">#</a> （一）主流浏览器</h2><p>指有自主研发的内核的浏览器</p><h3 id="_1-组成" tabindex="-1"><a class="header-anchor" href="#_1-组成" aria-hidden="true">#</a> 1.组成</h3><ul><li>shell：外壳</li><li>core：内核（JS 执行引擎、渲染引擎）</li></ul><h3 id="_2-各浏览器内核" tabindex="-1"><a class="header-anchor" href="#_2-各浏览器内核" aria-hidden="true">#</a> 2.各浏览器内核</h3><table><thead><tr><th>浏览器</th><th>内核</th></tr></thead><tbody><tr><td>IE</td><td>Trident -&gt; Edge</td></tr><tr><td>Firefox</td><td>Gecko</td></tr><tr><td>Chrome</td><td>Webkit -&gt; Blink</td></tr><tr><td>Safari</td><td>Webkit</td></tr><tr><td>Opera</td><td>Presto -&gt; Blink</td></tr></tbody></table><h2 id="二-文档语言-lang" tabindex="-1"><a class="header-anchor" href="#二-文档语言-lang" aria-hidden="true">#</a> （二）文档语言 lang</h2><ul><li>默认英文：<code>en</code></li><li>中文 <ul><li>旧式写法：<code>zh-CN</code></li><li>新版写法：<code>cmn-hans</code>（中国大陆通用语言——普通话）</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cmn-hans<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三-语义化" tabindex="-1"><a class="header-anchor" href="#三-语义化" aria-hidden="true">#</a> （三）语义化</h2><h3 id="_1-每一个-html-元素都有具体的含义" tabindex="-1"><a class="header-anchor" href="#_1-每一个-html-元素都有具体的含义" aria-hidden="true">#</a> 1.每一个 HTML 元素都有具体的含义</h3><ul><li>a 元素：超链接</li><li>p 元素：段落</li><li>h1 元素：一级标题</li></ul><h3 id="_2-所有元素与展示效果无关" tabindex="-1"><a class="header-anchor" href="#_2-所有元素与展示效果无关" aria-hidden="true">#</a> 2.所有元素与展示效果无关</h3><ul><li>元素展示到页面中的效果，应该由 CSS 决定</li><li>因为浏览器带有默认的 CSS 样式，所以每个元素都有默认样式</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>选择什么元素，取决于内容的含义，而不是显示出的效果</p></div><h3 id="_3-为什么需要语义化" tabindex="-1"><a class="header-anchor" href="#_3-为什么需要语义化" aria-hidden="true">#</a> 3.为什么需要语义化</h3><ul><li>为了搜索引擎优化（SEO） <ul><li>搜索引擎：百度、搜搜、Bing、Google</li><li>每隔一段时间，搜索引擎会从整个互联网中抓取页面源代码</li></ul></li><li>为了让浏览器理解网页 <ul><li>阅读模式</li><li>语音模式</li></ul></li></ul><h2 id="四-行级-块级元素" tabindex="-1"><a class="header-anchor" href="#四-行级-块级元素" aria-hidden="true">#</a> （四）行级/块级元素</h2><ul><li>以前： <ul><li>块级元素：某些元素在显示时会独占一行</li><li>行级元素：某些元素在显示时不会独占一行</li></ul></li><li>HTML5 已经弃用该说法，因为行/块是效果的概念，不应当用于描述 HTML 元素（语义化）</li><li>现在用 CSS 中的行盒块盒（行容器块容器）替代</li></ul><h2 id="五-页面展示代码标签" tabindex="-1"><a class="header-anchor" href="#五-页面展示代码标签" aria-hidden="true">#</a> （五）页面展示代码标签</h2><ul><li>pre 标签：预格式化文本元素</li><li>空白折叠：在源代码中的连续空白字符（空格、换行、制表），在页面显示时，会被折叠为一个空格</li><li>在 pre 标签内部出现的内容，会按照源代码格式显示到页面上，不会出现空白折叠</li><li>该元素通常用于在网页中显示一些代码，一般包裹在 <code>code</code> 标签内部，code 表示代码区域</li><li>pre 元素功能的本质：有一个默认的 CSS 属性 <code>white-space: pre;</code></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>
    L          TE
      A       A
        C    V
          RA
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span>
  <span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 或者 --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">white-space</span><span class="token punctuation">:</span> pre</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> L TE A A C V RA <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六-html-entity-实体" tabindex="-1"><a class="header-anchor" href="#六-html-entity-实体" aria-hidden="true">#</a> （六）HTML Entity（实体）</h2><p>实体字符：通常用于在页面中显示一些特殊符号</p><ul><li><code>&amp;单词;</code></li><li><code>&amp;#数字;</code></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>在页面中，表示段落使用：<span class="token entity named-entity" title="&lt;">&amp;lt;</span>p<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>小于符号：<code>&amp;lt;</code> 【letter than】</li><li>大于符号：<code>&amp;gt;</code> 【greater than】</li><li>多个空格：<code>&amp;nbsp;</code> 【non-breaking space】</li><li>版权符号：<code>&amp;copy;</code></li><li>&amp;符号：<code>&amp;amp;</code></li></ul><h2 id="七-a-标签的-href-属性" tabindex="-1"><a class="header-anchor" href="#七-a-标签的-href-属性" aria-hidden="true">#</a> （七）a 标签的 href 属性</h2><p>href（hyper reference）：通常表示跳转地址</p><ul><li>普通链接</li><li>锚链接 <ul><li>id 属性：全局属性，表示元素在文档中的唯一编号</li></ul></li><li>功能链接：点击后触发某个功能 <ul><li>执行 JS 代码：<code>javascript:</code></li><li>发送邮件：<code>mailto:</code> 【本地有邮箱软件时可用】</li><li>拨号：<code>tel:</code> 【本地有拨号软件、移动端访问时可用】</li></ul></li></ul><h2 id="八-路径" tabindex="-1"><a class="header-anchor" href="#八-路径" aria-hidden="true">#</a> （八）路径</h2><h3 id="_1-站内资源" tabindex="-1"><a class="header-anchor" href="#_1-站内资源" aria-hidden="true">#</a> 1.站内资源</h3><p>当前网站的资源</p><h3 id="_2-站外资源" tabindex="-1"><a class="header-anchor" href="#_2-站外资源" aria-hidden="true">#</a> 2.站外资源</h3><p>非当前网站的资源</p><h3 id="_3-绝对路径-url-地址" tabindex="-1"><a class="header-anchor" href="#_3-绝对路径-url-地址" aria-hidden="true">#</a> 3.绝对路径（url 地址）</h3><ul><li>访问站外资源，使用绝对路径</li><li>协议名： <code>http</code> 、 <code>https</code> 、 <code>file</code></li><li>主机名：域名、IP 地址</li><li>端口号： <mark>http 默认 80，https 默认 443</mark></li><li>路径：资源文件在网站根目录中的位置</li><li>当跳转目标和当前页面的协议相同时，可以省略协议：<code>//host:port/path</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 协议名://主机名:端口号/路径</span>
schema://host:port/path
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-相对路径" tabindex="-1"><a class="header-anchor" href="#_4-相对路径" aria-hidden="true">#</a> 4.相对路径</h3><ul><li>访问站内资源，使用相对路径</li><li>以 <code>./</code> 开头，表示当前资源所在的目录，可以省略</li><li><code>../</code> 表示返回当前目录的上一级目录</li></ul><h2 id="九-img-多标签联用" tabindex="-1"><a class="header-anchor" href="#九-img-多标签联用" aria-hidden="true">#</a> （九）img 多标签联用</h2><h3 id="_1-map" tabindex="-1"><a class="header-anchor" href="#_1-map" aria-hidden="true">#</a> 1.map</h3><ul><li>map 标签的 name 值必须唯一，作用同锚点</li><li>map 仅有一个子元素 <code>area</code> ，用于划分区域（空元素，没有结束标记） <ul><li>shape 属性：形状 <ul><li>圆形（circle）</li><li>矩形（rect）</li><li>多边形（poly）</li></ul></li><li>coords 属性：坐标 <ul><li>坐标系原点在地图左上角</li><li>shape 为 circle 时，三个值为圆心横坐标、圆心纵坐标、半径</li><li>shape 为 rect 时，四个值为左上角横坐标、左上角纵坐标、右下角横坐标、右下角纵坐标</li><li>shape 为 poly 时，多个点的横纵坐标依次排开</li></ul></li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">,</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">usemap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#solarMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./img/solar.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>这是一张太阳系的图片<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>solarMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>area</span> <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>circle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">coords</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>360,204,48<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>area</span> <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rect<span class="token punctuation">&quot;</span></span> <span class="token attr-name">coords</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>323,282,395,320<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>area</span>
    <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>poly<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">coords</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>601,371,645,312,678,338,645,392<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-figure" tabindex="-1"><a class="header-anchor" href="#_2-figure" aria-hidden="true">#</a> 2.figure</h3><ul><li>指代、定义，通常用于把图片、图标标题、描述包裹起来</li><li>子元素： <code>figcaption</code> ，当前子元素的标题</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>XXX<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>XXXxsdwdfsfkjhsjahfewgfdjsdfs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十-定义列表" tabindex="-1"><a class="header-anchor" href="#十-定义列表" aria-hidden="true">#</a> （十）定义列表</h2><p>通常用于一些术语的定义</p><ul><li><code>dl</code> ：definition list</li><li><code>dt</code> ：definition title</li><li><code>dd</code> ：definition description</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>HTML中的术语解释：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>超文本标记语言，XXXx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十一-容器元素" tabindex="-1"><a class="header-anchor" href="#十一-容器元素" aria-hidden="true">#</a> （十一）容器元素</h2><p>该类元素代表一块区域，内部用于放置其他元素</p><h3 id="_1-div-元素" tabindex="-1"><a class="header-anchor" href="#_1-div-元素" aria-hidden="true">#</a> 1.div 元素</h3><ul><li>优：没有额外样式，单纯划分区域</li><li>缺：没有语义，浏览器无法识别当前区域的作用</li></ul><h3 id="_2-html5-其他语义化元素" tabindex="-1"><a class="header-anchor" href="#_2-html5-其他语义化元素" aria-hidden="true">#</a> 2.HTML5 其他语义化元素</h3><ul><li><code>header</code><ul><li>通常用于表示页头，也可以用于表示文章的头部</li></ul></li><li><code>footer</code><ul><li>通常用于表示页脚，也可以用于表示文章的尾部</li></ul></li><li><code>article</code><ul><li>通常用于表示整篇文章</li></ul></li><li><code>section</code><ul><li>通常用于表示文章的章节</li></ul></li><li><code>aside</code><ul><li>通常用于表示侧边栏（附加信息）</li></ul></li><li><code>nav</code><ul><li>导航栏两种布局</li><li><code>nav</code> + <code>a</code></li><li><code>ul</code> + <code>li</code> + <code>a</code></li></ul></li></ul><h3 id="_3-元素包含关系" tabindex="-1"><a class="header-anchor" href="#_3-元素包含关系" aria-hidden="true">#</a> 3.元素包含关系</h3><h4 id="_1-以前" tabindex="-1"><a class="header-anchor" href="#_1-以前" aria-hidden="true">#</a> 1）以前</h4><p>块级元素可以包含行级元素，行级元素不可以包含块级元素，a 元素除外</p><h4 id="_2-现在" tabindex="-1"><a class="header-anchor" href="#_2-现在" aria-hidden="true">#</a> 2）现在</h4><p>元素的包含关系由元素的内容类别决定，取决于 <mark>元素的语义化</mark> ，MDN 文档可查（Technical summary - Permitted content）</p><ul><li>容器元素中可以包含任何元素</li><li>a 元素中几乎可以包含任何元素</li><li>某些元素有固定的子元素（ul&gt;li、ol&gt;li、dl&gt;dt+dd）</li><li>标题元素和段落元素不能相互嵌套，并且不能包含容器元素</li></ul><h2 id="十二-font-size" tabindex="-1"><a class="header-anchor" href="#十二-font-size" aria-hidden="true">#</a> （十二）font-size</h2><p>定义元素内部文字的尺寸大小（高度）</p><h3 id="_1-px-像素" tabindex="-1"><a class="header-anchor" href="#_1-px-像素" aria-hidden="true">#</a> 1.px 像素</h3><p>绝对单位，即文字的 <mark>高度</mark> 占多少个像素</p><h3 id="_2-em" tabindex="-1"><a class="header-anchor" href="#_2-em" aria-hidden="true">#</a> 2.em</h3><ul><li>相对单位，相对于父元素的字体大小</li><li>每个元素必须有字体大小 <ul><li>如果当前元素没有声明，则使用父元素的字体大小</li><li>如果逐级寻找父元素至 html 元素都没有定义字体大小，则使用基准字号（浏览器设置的默认字号）</li></ul></li></ul><h2 id="十三-层叠" tabindex="-1"><a class="header-anchor" href="#十三-层叠" aria-hidden="true">#</a> （十三）层叠</h2><ul><li>声明冲突：同一个样式，多次应用到同一个元素</li><li>层叠：解决声明冲突的过程，浏览器自动处理 —— 权重计算</li></ul><h3 id="_1-比较重要性" tabindex="-1"><a class="header-anchor" href="#_1-比较重要性" aria-hidden="true">#</a> 1.比较重要性</h3><p>重要性从高到低：</p><ul><li>作者样式表（开发者书写的样式）中的 <code>!important</code> 样式【不推荐】 <ul><li>非必要不加 <code>!important</code> ，一定要加时应使其影响范围尽可能小</li></ul></li><li>作者样式表中的普通样式</li><li>浏览器默认样式表中的样式（user agent stylesheet =&gt; 用户代理样式表 =&gt; 浏览器样式表）</li></ul><h3 id="_2-比较特殊性" tabindex="-1"><a class="header-anchor" href="#_2-比较特殊性" aria-hidden="true">#</a> 2.比较特殊性</h3><p>重要性比较后仍有冲突，看选择器</p><ul><li>总体规则：选择器选中的范围越窄，越特殊</li><li>具体规则：通过选择器，计算出一个 4 位数 <ul><li>千位：如果是 <mark>内联样式</mark> ，记 1，否则为 0【1xxx、0xxx】</li><li>百位：等于选择器中所有 <mark>id 选择器</mark> 的数量</li><li>十位：等于选择器中所有 <mark>类选择器、属性选择器、伪类选择器</mark> 的数量</li><li>个位：等于选择器中所有 <mark>元素选择器、伪元素选择器</mark> 的数量</li><li>四个位数依次分别比较，256 进制</li></ul></li></ul><h3 id="_3-比较源次序" tabindex="-1"><a class="header-anchor" href="#_3-比较源次序" aria-hidden="true">#</a> 3.比较源次序</h3><p>特殊性比较后仍有冲突，代码书写靠后的胜出</p><h3 id="_4-应用" tabindex="-1"><a class="header-anchor" href="#_4-应用" aria-hidden="true">#</a> 4.应用</h3><ul><li>重置样式表：书写一些作者样式，覆盖浏览器的默认样式 <ul><li>常见的重叠样式表：normalize.css、reset.css、meyer.css</li></ul></li><li>a 元素爱恨法则：link &gt; visited &gt; hover &gt; active</li></ul><h2 id="十四-继承" tabindex="-1"><a class="header-anchor" href="#十四-继承" aria-hidden="true">#</a> （十四）继承</h2><ul><li>子元素会继承来自父元素的某些 CSS 属性</li><li>通常 <mark>和文字内容相关</mark> 的属性都能被继承</li></ul><h2 id="十五-属性值的计算过程" tabindex="-1"><a class="header-anchor" href="#十五-属性值的计算过程" aria-hidden="true">#</a> （十五）属性值的计算过程</h2><ul><li>一个元素一个元素依次渲染，顺序按照树形目录结构进行（CSSOM）</li><li>渲染每个元素的前提条件：该元素的所有 CSS 属性都必须有值</li><li>一个元素，从所有属性都没有值，到所有的属性都有值，这个计算过程就叫属性值的计算过程</li></ul><h3 id="_1-确定声明值" tabindex="-1"><a class="header-anchor" href="#_1-确定声明值" aria-hidden="true">#</a> 1.确定声明值</h3><ul><li>参考样式表中没有冲突的声明，作为 CSS 属性值</li><li>包括作者样式表和浏览器默认样式表</li></ul><h3 id="_2-层叠冲突" tabindex="-1"><a class="header-anchor" href="#_2-层叠冲突" aria-hidden="true">#</a> 2.层叠冲突</h3><ul><li>对样式表有冲突的声明使用层叠规则，确定 CSS 属性值</li></ul><h3 id="_3-使用继承" tabindex="-1"><a class="header-anchor" href="#_3-使用继承" aria-hidden="true">#</a> 3.使用继承</h3><ul><li>对仍然没有值的属性，若可以继承，则继承父元素的值</li></ul><h3 id="_4-使用默认值" tabindex="-1"><a class="header-anchor" href="#_4-使用默认值" aria-hidden="true">#</a> 4.使用默认值</h3><ul><li>对仍然没有值的属性，使用默认值</li></ul><h3 id="_5-两个特殊取值" tabindex="-1"><a class="header-anchor" href="#_5-两个特殊取值" aria-hidden="true">#</a> 5.两个特殊取值</h3><ul><li><code>inherit</code> ：手动（强制）继承，将父元素的值取出应用到该元素</li><li><code>initial</code> ：初始值，将该属性设置为默认值</li></ul><h2 id="十六-盒模型" tabindex="-1"><a class="header-anchor" href="#十六-盒模型" aria-hidden="true">#</a> （十六）盒模型</h2><p>box：盒子，每个元素在页面中都会生成的一个矩形区域</p><h3 id="_1-盒子类型" tabindex="-1"><a class="header-anchor" href="#_1-盒子类型" aria-hidden="true">#</a> 1.盒子类型</h3><ul><li>行盒：display 值为 inline 的元素（默认值）</li><li>块盒：display 值为 block 的元素</li><li>行盒在页面中不换行，块盒独占一行</li><li>浏览器默认样式表设置的块盒： <ul><li>容器元素</li><li>h1-h6</li><li>p</li></ul></li><li>常见的行盒： <ul><li>span</li><li>a</li><li>img</li><li>video</li><li>audio</li></ul></li></ul><h3 id="_2-盒子的组成部分" tabindex="-1"><a class="header-anchor" href="#_2-盒子的组成部分" aria-hidden="true">#</a> 2.盒子的组成部分</h3><ul><li>无论是行盒还是块盒，都由下面几个部分组成，从内到外分别是： <ul><li>内容 <code>content</code></li><li>填充 <code>padding</code></li><li>边框 <code>border</code></li><li>外边距 <code>margin</code></li></ul></li></ul><h4 id="_1-内容" tabindex="-1"><a class="header-anchor" href="#_1-内容" aria-hidden="true">#</a> 1）内容</h4><ul><li>width、height 设置的是盒子内容的宽高</li><li>内容部分通常叫作整个盒子的 <mark>内容盒 content-box</mark></li></ul><h4 id="_2-填充-内边距" tabindex="-1"><a class="header-anchor" href="#_2-填充-内边距" aria-hidden="true">#</a> 2）填充（内边距）</h4><ul><li>盒子边框到盒子内容的距离</li><li>填充区 + 内容区 = <mark>填充盒 padding-box</mark></li></ul><h4 id="_3-边框" tabindex="-1"><a class="header-anchor" href="#_3-边框" aria-hidden="true">#</a> 3）边框</h4><ul><li>边框 = 边框样式 + 边框宽度 + 边框颜色</li><li>边框 + 填充区 + 内容区 = <mark>边框盒 border-box</mark></li></ul><h4 id="_4-外边距" tabindex="-1"><a class="header-anchor" href="#_4-外边距" aria-hidden="true">#</a> 4）外边距</h4><ul><li>边框到其他盒子的距离</li></ul><h3 id="_3-盒模型应用" tabindex="-1"><a class="header-anchor" href="#_3-盒模型应用" aria-hidden="true">#</a> 3.盒模型应用</h3><h4 id="_1-改变宽高范围" tabindex="-1"><a class="header-anchor" href="#_1-改变宽高范围" aria-hidden="true">#</a> 1）改变宽高范围</h4><ul><li>默认情况下，width 和 height 设置的是内容盒宽高</li><li>衡量设计稿尺寸时往往使用的是边框盒，但设置 width 和 height 时是内容盒 <ul><li>解决方法一：精确计算</li><li>解决方法二：CSS3：<code>box-sizing: border-box;</code> 改变宽高的影响范围</li></ul></li></ul><h4 id="_2-改变背景覆盖范围" tabindex="-1"><a class="header-anchor" href="#_2-改变背景覆盖范围" aria-hidden="true">#</a> 2）改变背景覆盖范围</h4><ul><li>默认情况下，背景覆盖边框盒</li><li>可以通过 <code>background-clip</code> 属性值修改</li></ul><h4 id="_3-溢出处理" tabindex="-1"><a class="header-anchor" href="#_3-溢出处理" aria-hidden="true">#</a> 3）溢出处理</h4><ul><li>可以通过 <code>overflow</code> 控制内容溢出边框盒后的处理方式</li></ul><h4 id="_4-断词规则" tabindex="-1"><a class="header-anchor" href="#_4-断词规则" aria-hidden="true">#</a> 4）断词规则</h4><ul><li>可以通过 <code>word-break</code> 控制文字在什么位置被截断换行</li><li><code>normal</code> ：普通方式 <ul><li>CJK 字符在文字位置截断（中日韩）</li><li>非 CJK 字符在单词位置截断</li></ul></li><li><code>break-all</code> ：截断所有 <ul><li>所有文字都在文字处截断</li></ul></li><li><code>keep-all</code> ：保持所有 <ul><li>所有文字都在单词间截断</li></ul></li></ul><h4 id="_5-空白处理-单行文本" tabindex="-1"><a class="header-anchor" href="#_5-空白处理-单行文本" aria-hidden="true">#</a> 5）空白处理（单行文本）</h4><ul><li><code>white-space: nowrap;</code> 溢出不换行</li><li><code>overflow: hidden;</code> 隐藏溢出</li><li><code>text-overflow: ellipsis;</code> 打点显示溢出</li></ul><h3 id="_4-行盒的盒模型" tabindex="-1"><a class="header-anchor" href="#_4-行盒的盒模型" aria-hidden="true">#</a> 4.行盒的盒模型</h3><ul><li>常见的行盒：包含具体内容的元素 <ul><li>span、strong、em、i、img、video、audio</li></ul></li><li>盒子沿着内容延伸</li><li>行盒不能设置宽高，仅根据内容决定 <ul><li>要调整行盒宽高，应使用 <mark>字体大小、行高、字体类型</mark> 间接调整</li></ul></li><li>内边距（填充区） <ul><li>水平方向有效</li><li>垂直方向仅会影响背景，实际不会占据空间</li></ul></li><li>边框 <ul><li>水平方向有效</li><li>垂直方向仅会影响背景，实际不会占据空间</li></ul></li><li>外边距 <ul><li>水平方向有效</li><li>垂直方向仅会影响背景，实际不会占据空间</li></ul></li></ul><h3 id="_5-行块盒" tabindex="-1"><a class="header-anchor" href="#_5-行块盒" aria-hidden="true">#</a> 5.行块盒</h3><ul><li>属性值为 <code>display: inline-block;</code> 的盒子</li><li>不独占一行</li><li>盒模型中所有尺寸都有效</li></ul><h3 id="_6-空白折叠" tabindex="-1"><a class="header-anchor" href="#_6-空白折叠" aria-hidden="true">#</a> 6.空白折叠</h3><ul><li>发生在 <mark>行盒（行块盒）内部</mark> 或 <mark>行盒（行块盒）之间</mark></li></ul><h3 id="_7-可替换元素和非可替换元素" tabindex="-1"><a class="header-anchor" href="#_7-可替换元素和非可替换元素" aria-hidden="true">#</a> 7.可替换元素和非可替换元素</h3><ul><li>非可替换元素：大部分元素，页面上的显示结果取决于元素内容</li><li>可替换元素：少部分元素，页面上的显示结果取决于元素属性 <ul><li>img、video、audio</li><li>绝大部分是行盒</li><li>但是性质类似于行块盒，内部可以设置宽高</li></ul></li></ul><h2 id="十七-视觉格式化模型" tabindex="-1"><a class="header-anchor" href="#十七-视觉格式化模型" aria-hidden="true">#</a> （十七）视觉格式化模型</h2><ul><li>盒模型：规定单个盒子的规则</li><li>视觉格式化模型：页面中的多个盒子的排列规则（布局规则） <ul><li>大体上将页面中的盒子排列方式分为三种： <ul><li>常规流</li><li>浮动流</li><li>定位流</li></ul></li></ul></li></ul><h3 id="_1-常规流布局" tabindex="-1"><a class="header-anchor" href="#_1-常规流布局" aria-hidden="true">#</a> 1.常规流布局</h3><ul><li>又叫文档流、普通文档流、常规文档流</li><li>所有元素默认情况下都属于常规流布局</li><li>总体规则： <ul><li>块盒独占一行</li><li>行盒水平依次排列</li></ul></li></ul><h4 id="_1-包含块-containing-block" tabindex="-1"><a class="header-anchor" href="#_1-包含块-containing-block" aria-hidden="true">#</a> 1）包含块（containing block）</h4><ul><li>每个盒子都有它的包含块，包含块决定了盒子的排列区域</li><li>绝大部分情况下，盒子的包含块，为其父元素的内容盒</li></ul><h4 id="_2-块盒" tabindex="-1"><a class="header-anchor" href="#_2-块盒" aria-hidden="true">#</a> 2）块盒</h4><ul><li>每个块盒的总宽度必须刚好等于包含块的宽度 <ul><li>宽度的默认值是 auto，表示将剩余空间吸收掉</li><li>margin 默认值是 0，定为 auto 时表示将剩余空间吸收掉</li><li>优先级： <mark>width &gt; margin</mark></li><li>若宽度、边框、内边距、外边距计算后，仍然有剩余空间，则被 <code>margin-right</code> 全部吸收 <ul><li>如果改为从右往左排列，则是 <code>margin-left</code> 全部吸收</li></ul></li><li>在常规流中，块盒在其包含块中居中，可以定宽，然后让左右外边距吸收剩余空间 <ul><li><code>margin: 0 auto;</code></li></ul></li></ul></li><li>每个块盒垂直方向上的 auto 值 <ul><li><code>height: auto;</code> 适应内容的高度</li><li><code>margin: auto;</code> 表示 0</li></ul></li><li>百分比取值 <ul><li>padding、宽、margin 可以取值为百分比</li><li>以上所有百分比都是 <mark>相对于包含块的宽度</mark></li><li>高度的百分比 <ul><li>包含块的高度取决于子元素的高度 =&gt; 设置百分比 <mark>无效</mark></li><li>包含块的高度不取决于子元素的高度 =&gt; 百分比 <mark>相对于父元素的高度</mark></li></ul></li></ul></li><li>上下外边距的合并 <ul><li>两个常规流块盒，上下外边距若相邻，则会合并，取最大值</li><li>兄弟元素和父子元素，只要外边距相邻就会合并 =&gt; 印刷术的规则</li></ul></li></ul><h3 id="_2-浮动流布局" tabindex="-1"><a class="header-anchor" href="#_2-浮动流布局" aria-hidden="true">#</a> 2.浮动流布局</h3><ul><li>应用场景： <ul><li>文字环绕</li><li>横向排列</li></ul></li></ul><h4 id="_1-基本特点" tabindex="-1"><a class="header-anchor" href="#_1-基本特点" aria-hidden="true">#</a> 1）基本特点</h4><ul><li>left：左浮动，元素靠左靠上</li><li>right：右浮动，元素靠上靠右</li><li>none：默认值，即常规流</li><li>当一个值浮动后，元素必定为块盒（更改 display 属性为 block）</li><li>浮动元素的包含块，和常规流一样，是父元素的内容盒</li></ul><h4 id="_2-盒子尺寸" tabindex="-1"><a class="header-anchor" href="#_2-盒子尺寸" aria-hidden="true">#</a> 2）盒子尺寸</h4><ul><li>宽度为 auto 时，表示适应内容宽度</li><li>高度为 auto 时，与常规流一致，适应内容高度</li><li>margin 为 auto 时，相当于 0</li><li>边框、内边距、百分比设置与常规流一致</li></ul><h4 id="_3-盒子排列" tabindex="-1"><a class="header-anchor" href="#_3-盒子排列" aria-hidden="true">#</a> 3）盒子排列</h4><ul><li>左浮动的盒子靠上靠左排列</li><li>右浮动的盒子靠上靠右排列</li><li>浮动盒子在包含块中排列时，会避开常规流块盒 <ul><li>常规流块盒排列时，无视浮动流盒子</li></ul></li><li>行盒在排列时，会避开浮动盒子【图文混排】 <ul><li>如果文字没有在行盒内，则浏览器会自动生成一个行盒包裹文字，称匿名行盒</li></ul></li></ul><h4 id="_4-高度坍塌" tabindex="-1"><a class="header-anchor" href="#_4-高度坍塌" aria-hidden="true">#</a> 4）高度坍塌</h4><ul><li>根源：常规流盒子的 <mark>自动高度</mark> ，在计算时不会考虑浮动流盒子，所以子元素浮动时，父元素自动高度仍为 0</li><li>解决：使用 <code>clear</code> 清除浮动 <ul><li>默认值：none</li><li>left：清除左浮动，表示该元素必须出现在前面所有左浮动的盒子的下方</li><li>right：清除右浮动，表示该元素必须出现在前面所有右浮动的盒子的下方</li><li>both：清除所有浮动，表示该元素必须出现在前面所有浮动的盒子的下方【直接用】</li></ul></li></ul><h3 id="_3-定位流布局" tabindex="-1"><a class="header-anchor" href="#_3-定位流布局" aria-hidden="true">#</a> 3.定位流布局</h3><ul><li>定位：手动控制元素在包含块中的精准位置</li><li>一个元素只要 position 属性值不为 static，就认为其是一个定位元素</li><li>定位元素会脱离文档流（相对定位除外） <ul><li>文档流中的元素摆放时，会忽略脱离文档流的元素</li><li>文档流中的元素计算自动高度时，会忽略脱离文档流的元素</li></ul></li></ul><h4 id="_1-position-属性" tabindex="-1"><a class="header-anchor" href="#_1-position-属性" aria-hidden="true">#</a> 1）position 属性</h4><ul><li>默认值：static，静态定位（不定位）</li><li>relative：相对定位</li><li>absolute：绝对定位</li><li>fixed：固定定位</li></ul><h4 id="_2-相对定位" tabindex="-1"><a class="header-anchor" href="#_2-相对定位" aria-hidden="true">#</a> 2）相对定位</h4><ul><li>不会导致元素脱离文档流，只是让元素在原来位置上进行偏移</li><li>盒子的偏移不会对其他盒子造成影响</li><li><mark>通常用于为绝对定位元素提供包含块</mark></li></ul><h4 id="_3-绝对定位" tabindex="-1"><a class="header-anchor" href="#_3-绝对定位" aria-hidden="true">#</a> 3）绝对定位</h4><ul><li>宽高为 auto，盒子尺寸适应内容</li><li><mark>包含块变化：</mark><ul><li><mark>先找祖先元素中第一个定位元素，该元素的填充盒为其包含块</mark></li><li><mark>若找不到，则它的包含块为整个网页（初始包含块）</mark></li></ul></li></ul><h4 id="_4-固定定位" tabindex="-1"><a class="header-anchor" href="#_4-固定定位" aria-hidden="true">#</a> 4）固定定位</h4><ul><li>其他情况和绝对定位完全一样</li><li>唯一的区别：包含块不同 <ul><li><mark>固定定位的包含块是视口</mark></li></ul></li></ul><h4 id="_5-定位下的居中" tabindex="-1"><a class="header-anchor" href="#_5-定位下的居中" aria-hidden="true">#</a> 5）定位下的居中</h4><ul><li>某个方向居中： <ul><li>定宽（高）</li><li>将左右（上下）距离设置为 0</li><li>将左右（上下）margin 设置为 auto</li><li>绝对定位和固定定位中，margin 为 auto 时，会自动吸收剩余空间</li></ul></li></ul><h4 id="_6-多个定位元素重叠" tabindex="-1"><a class="header-anchor" href="#_6-多个定位元素重叠" aria-hidden="true">#</a> 6）多个定位元素重叠</h4><ul><li>涉及堆叠上下文，设置 z-index</li><li>通常情况下，该值越大，越靠近用户，看到的元素越完整</li><li>只有定位元素设置 z-index 才有效</li><li>z-index 可以是负数，此时遇到常规流、浮动元素时会被其覆盖</li></ul><h4 id="_7-补充" tabindex="-1"><a class="header-anchor" href="#_7-补充" aria-hidden="true">#</a> 7）补充</h4><ul><li>绝对定位、固定定位元素一定 <mark>是块盒</mark></li><li>绝对定位、固定定位元素一定 <mark>不是浮动</mark></li><li><mark>没有外边距合并</mark></li></ul><h3 id="_4-块级格式化上下文" tabindex="-1"><a class="header-anchor" href="#_4-块级格式化上下文" aria-hidden="true">#</a> 4.块级格式化上下文</h3><ul><li>BFC，Block Formatting Context</li><li>是一块独立的渲染区域，规定了在该区域中，常规流块盒的布局</li><li><mark>视觉格式化模型包含块级格式化上下文，块级格式化上下文包含常规流布局的渲染规则</mark></li></ul><h4 id="_1-bfc-渲染区域" tabindex="-1"><a class="header-anchor" href="#_1-bfc-渲染区域" aria-hidden="true">#</a> 1）BFC 渲染区域</h4><ul><li>这个区域由某个 HTML 元素创建，以下元素会在其内部创建 BFC 区域 <ul><li>根元素，即 <code>&lt;html&gt;</code> 元素创建的 BFC 区域，覆盖了网页中所有的元素</li><li>浮动和绝对定位的元素</li><li><code>overflow</code> 不等于 <code>visible</code> 的块盒</li></ul></li></ul><h4 id="_2-bfc-区域规则" tabindex="-1"><a class="header-anchor" href="#_2-bfc-区域规则" aria-hidden="true">#</a> 2）BFC 区域规则</h4><ul><li>不同的 BFC 区域，进行渲染时互不干扰【独立区域】</li><li>创建 BFC 的元素，隔绝了其内部和外部的联系，内部的渲染不会影响到外部 <ul><li>该元素的自动高度需要计算浮动元素【没有高度坍塌问题】，绝对定位元素高度直接无视</li><li>该元素的边框盒不会与浮动元素重叠</li><li>该元素不会和它的子元素发生 margin 合并</li></ul></li><li>可以强制让父元素创建 BFC 以解决高度塌陷的问题，但是会改变父盒子的布局方式——有副作用 <ul><li><mark>如果只是单纯为了解决高度塌陷问题，副作用最小的方式是清除浮动三件套</mark></li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.clearfix::after</span> <span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十八-更多选择器和样式" tabindex="-1"><a class="header-anchor" href="#十八-更多选择器和样式" aria-hidden="true">#</a> （十八）更多选择器和样式</h2><h3 id="_1-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_1-伪类选择器" aria-hidden="true">#</a> 1.伪类选择器</h3><ul><li>first-child <ul><li>选中第一个子元素（该元素在所有子元素中必定是第一个）</li><li>first-of-type：选中子元素中第一个指定类型的元素（ <mark>该元素在所有子元素中不一定第一个</mark> ）</li></ul></li><li>last-child <ul><li>选中最后一个子元素</li><li>last-of-type：选中子元素中最后一个指定类型的元素</li></ul></li><li>nth-child <ul><li>选中指定的第几个子元素</li><li>参数可以是数字，也可以是 n 的倍数，表示第几个</li><li>参数还可以是关键词：even（=2n）偶数、odd（=2n+1）奇数</li><li>nth-of-type：选中子元素中第几个指定类型的元素</li></ul></li></ul><h3 id="_2-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_2-伪元素选择器" aria-hidden="true">#</a> 2.伪元素选择器</h3><ul><li>first-letter <ul><li>选中元素中的第一个字母/文字</li></ul></li><li>first-line <ul><li>选中元素中第一行的文字</li></ul></li><li>selection <ul><li>选中被用户框选的文字，通常设置背景颜色、文字颜色</li></ul></li></ul><h3 id="_3-透明度" tabindex="-1"><a class="header-anchor" href="#_3-透明度" aria-hidden="true">#</a> 3.透明度</h3><ul><li>opacity <ul><li>设置的是整个元素的透明度</li><li>取值是 [0, 1]</li></ul></li><li>在颜色值设置 alpha 通道（rgba）【常用】</li></ul><h3 id="_4-鼠标" tabindex="-1"><a class="header-anchor" href="#_4-鼠标" aria-hidden="true">#</a> 4.鼠标</h3><ul><li>cursor <ul><li>可以设置为图片，格式必须为 <code>.ico</code> 或 <code>.cur</code></li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;imgs/target.ico&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> auto<span class="token punctuation">;</span> <span class="token comment">/* 图片出现问题时使用第二个样式 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-盒子隐藏" tabindex="-1"><a class="header-anchor" href="#_5-盒子隐藏" aria-hidden="true">#</a> 5.盒子隐藏</h3><ul><li><code>display: none;</code><ul><li>不生成盒子</li></ul></li><li><code>visibility: hidden;</code><ul><li>生成盒子，只是从视觉上移除盒子，盒子仍然占据空间</li></ul></li></ul><h3 id="_6-背景图" tabindex="-1"><a class="header-anchor" href="#_6-背景图" aria-hidden="true">#</a> 6.背景图</h3><ul><li>img 元素属于 HTML 的概念</li><li>背景图属于 CSS 的概念</li></ul><h4 id="_1-区别" tabindex="-1"><a class="header-anchor" href="#_1-区别" aria-hidden="true">#</a> 1）区别</h4><ul><li>当图片属于网页内容时，必须使用 img 元素</li><li>当图片仅用于美化页面时，必须使用背景图</li></ul><h4 id="_2-css-属性" tabindex="-1"><a class="header-anchor" href="#_2-css-属性" aria-hidden="true">#</a> 2）CSS 属性</h4><ul><li>background-image <ul><li>url()：路径相对于当前 css 文件位置</li></ul></li><li>background-repeat <ul><li>是否重复</li><li>默认情况下会在横纵坐标中重复</li></ul></li><li>background-size <ul><li>尺寸大小</li><li>预设值：cover、contain，类似于 object-fit</li><li>数值或百分比</li></ul></li><li>background-position <ul><li>位置</li><li>预设值：left、bottom、right、top、center</li><li>数值或百分比</li><li>应用：雪碧图（精灵图 spirit） <ul><li>页面图片集中在一张图，在特定图标区域使用该属性取出图片中的某个图标</li><li>网络请求只需请求一次图片，降低服务器压力</li></ul></li></ul></li><li>background-attachment <ul><li>是否固定于视口</li></ul></li><li>速写（简写） <ul><li>先写位置（position），再写 <code>/</code> ，后写尺寸（size）</li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> no-repeat 50% 50%/100% fixed #000<span class="token punctuation">;</span>
<span class="token property">background</span><span class="token punctuation">:</span> #f40 <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> no-repeat left top/contain<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十九-html-进阶" tabindex="-1"><a class="header-anchor" href="#十九-html-进阶" aria-hidden="true">#</a> （十九）HTML 进阶</h2><h3 id="_1-iframe-元素-框架页" tabindex="-1"><a class="header-anchor" href="#_1-iframe-元素-框架页" aria-hidden="true">#</a> 1.iframe 元素（框架页）</h3><ul><li>通常用于在网页中嵌入另一个页面</li><li>是可替换元素 <ul><li>通常是行盒</li><li>显示的内容取决于元素的属性</li><li>CSS 不能完全控制其中的样式</li><li>具有行块盒的特点</li></ul></li><li>配合 a 元素的 target 属性使用</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.baidu.com<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myframe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myframe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.baidu.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-mime-类型" tabindex="-1"><a class="header-anchor" href="#_2-mime-类型" aria-hidden="true">#</a> 2.MIME 类型</h3><ul><li>Multipurpose Internet Mail Extensions</li><li>多用途互联网邮件类型</li><li>如：资源是一个 jpg 图片，MIME: <code>image/jpeg</code></li></ul><h2 id="二十-body-背景" tabindex="-1"><a class="header-anchor" href="#二十-body-背景" aria-hidden="true">#</a> （二十）body 背景</h2><h3 id="_1-画布-canvas" tabindex="-1"><a class="header-anchor" href="#_1-画布-canvas" aria-hidden="true">#</a> 1.画布 canvas</h3><ul><li>一块区域</li><li>最小宽度为视口宽度</li><li>最小高度为视口高度</li></ul><h3 id="_2-html-元素的背景" tabindex="-1"><a class="header-anchor" href="#_2-html-元素的背景" aria-hidden="true">#</a> 2.HTML 元素的背景</h3><ul><li>覆盖画布</li></ul><h3 id="_3-body-元素的背景" tabindex="-1"><a class="header-anchor" href="#_3-body-元素的背景" aria-hidden="true">#</a> 3.body 元素的背景</h3><ul><li>如果 HTML 元素有背景，则 body 元素正常渲染（覆盖边框盒）</li><li>如果 HTML 元素没有背景，则 body 元素覆盖画布</li></ul><h3 id="_4-关于画布背景图" tabindex="-1"><a class="header-anchor" href="#_4-关于画布背景图" aria-hidden="true">#</a> 4.关于画布背景图</h3><h4 id="_1-background-size" tabindex="-1"><a class="header-anchor" href="#_1-background-size" aria-hidden="true">#</a> 1）background-size</h4><ul><li>背景图的宽度百分比 <ul><li>画布宽度未超出视口时，相对于 <mark>视口宽度</mark></li><li>画布宽度超出视口时， <mark>背景颜色</mark> 可覆盖画布宽度， <mark>背景图</mark> 只覆盖视口宽度</li></ul></li><li>背景图的高度百分比，相对于 <mark>HTML 元素高度</mark></li></ul><h4 id="_2-background-position" tabindex="-1"><a class="header-anchor" href="#_2-background-position" aria-hidden="true">#</a> 2）background-position</h4><ul><li>背景图的横向位置（百分比、预设值），相对于 <mark>视口宽度</mark></li><li>背景图的纵向位置（百分比、预设值），相对于 <mark>HTML 元素高度</mark></li></ul><h2 id="二十一-对齐" tabindex="-1"><a class="header-anchor" href="#二十一-对齐" aria-hidden="true">#</a> （二十一）对齐</h2><h3 id="_1-行盒的垂直对齐" tabindex="-1"><a class="header-anchor" href="#_1-行盒的垂直对齐" aria-hidden="true">#</a> 1.行盒的垂直对齐</h3><h4 id="_1-多个行盒" tabindex="-1"><a class="header-anchor" href="#_1-多个行盒" aria-hidden="true">#</a> 1）多个行盒</h4><ul><li>给没有对齐的元素设置 <code>vertical-align</code></li><li>可设置预设值、数值</li></ul><h4 id="_2-图片的底部白边" tabindex="-1"><a class="header-anchor" href="#_2-图片的底部白边" aria-hidden="true">#</a> 2）图片的底部白边</h4><ul><li>图片的父元素是块盒，且高度自动，则图片底部和父元素底边之间往往会出现空白，且白边高度随文字增大而增大</li><li>解决： <ul><li>设置父元素的字体大小为 0</li><li><mark>将图片设置为块盒</mark>【推荐】</li></ul></li></ul><h3 id="_2-参考线-深入理解字体" tabindex="-1"><a class="header-anchor" href="#_2-参考线-深入理解字体" aria-hidden="true">#</a> 2.参考线-深入理解字体</h3><h4 id="_1-文字" tabindex="-1"><a class="header-anchor" href="#_1-文字" aria-hidden="true">#</a> 1）文字</h4><ul><li>文字是通过一些文字制作软件制作而成的，如 FontForge</li><li>制作文字时，会有几根参考线 <ul><li>不同的文字类型，参考线不一样</li><li>同一种文字类型，参考线一样</li></ul></li><li>一般有五根参考线+上下延伸的 line gap <ul><li>top</li><li>text top / ascent：顶线</li><li>super：上基线</li><li>baseline：基线</li><li>sub：下基线</li><li>text bottom / descent：底线</li><li>bottom</li></ul></li></ul><h4 id="_2-font-size" tabindex="-1"><a class="header-anchor" href="#_2-font-size" aria-hidden="true">#</a> 2）font-size</h4><ul><li>字体大小，设置的是文字的相对大小</li><li>文字的相对大小：1000、2048、1024</li><li>文字的实际大小：文字顶线到底线的距离（content-area，内容区）</li><li>行盒的背景，覆盖 content-area</li></ul><h4 id="_3-行高" tabindex="-1"><a class="header-anchor" href="#_3-行高" aria-hidden="true">#</a> 3）行高</h4><ul><li>顶线向上延伸的空间，和底线向下延伸的空间，两个空间相等，该空间叫作 line gap（空隙）</li><li>gap 大小默认情况下由字体设计师决定，负数、0、正数均有</li><li>行高，就是 top 到 bottom 的距离，virtual-area，虚拟区</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">line-height</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
<span class="token comment">/* 默认值，使用文字默认的gap */</span>

<span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
<span class="token comment">/* 
  不建议
  此时gap是负数，由于文字实际大小超过其相对大小
  行高为1即行高为相对大小，高度不够
  所以多行文本时会有部分重叠区域
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文字一定出现在一行的正中间 ❎（取决于设计师）</li><li>content-area 一定出现在 virtual-area 的正中间 ✅</li></ul><h4 id="_4-vertical-align" tabindex="-1"><a class="header-anchor" href="#_4-vertical-align" aria-hidden="true">#</a> 4）vertical-align</h4><ul><li><code>baseline</code> ：该元素的基线会与父元素的基线对齐</li><li><code>super</code> ：该元素的基线会与父元素的上基线对齐</li><li><code>sub</code> ：该元素的基线会与父元素的下基线对齐</li><li><code>text-top</code> ：该元素的 virtual-area 的顶边，会与父元素的顶线对齐</li><li><code>text-bottom</code> ：该元素的 virtual-area 的底边，会与父元素的底线对齐</li><li><code>top</code> ：该元素的 virtual-area 的顶边，会与 line-box 的顶边（该行中的最高顶边）对齐</li><li><code>bottom</code> ：该元素的 virtual-area 的底边，会与 line-box 的底边（该行中的最低底边）对齐</li><li><code>middle</code> ：该元素的中线（content-area 的一半），会与父元素的 <mark>X</mark> 字母高度一半的位置对齐</li><li><code>[数值]</code> ：相对于基线的偏移量，向上为正，向下为负</li><li><code>[百分比]</code> ：相对于基线的偏移量，但是是相对于自身 virtual-area 的高度</li><li>决定参考线：font-size、font-family、line-height</li><li>一个元素如果子元素出现行盒，该元素内部也会产生参考线</li><li>行盒（inline-box）组合起来，可以形成多行，每一行的区域叫作行框（line-box） <ul><li>line-box 的顶边是该行内所有行盒的最高顶边，底边是该行内所有行盒的最低底边</li></ul></li><li>实际上，一个高度自动元素的实际占用高度，计算高度时通过 line-box 计算</li><li>line-box 是承载文字内容的必要条件，以下情况不生成行框 <ul><li>某元素内部没有任何行盒</li><li>某元素字体大小为 0</li></ul></li></ul><h4 id="_5-可替换元素和行块盒的基线" tabindex="-1"><a class="header-anchor" href="#_5-可替换元素和行块盒的基线" aria-hidden="true">#</a> 5）可替换元素和行块盒的基线</h4><ul><li>图片：基线位置位于图片的下外边距</li><li>表单元素：基线位置在内容区的底边</li><li>行块盒： <ul><li>最后一行有 line-box，用最后一行的基线作为整个行框的基线</li><li>如果行块盒内部没有行盒，则使用下外边距作为基线</li></ul></li></ul><h2 id="二十二-堆叠上下文" tabindex="-1"><a class="header-anchor" href="#二十二-堆叠上下文" aria-hidden="true">#</a> （二十二）堆叠上下文</h2><ul><li>stack context：堆叠上下文，一块区域，由某个元素创建</li><li>规定了该区域中的内容在 Z 轴上排列的先后顺序</li></ul><h3 id="_1-创建堆叠上下文的元素" tabindex="-1"><a class="header-anchor" href="#_1-创建堆叠上下文的元素" aria-hidden="true">#</a> 1.创建堆叠上下文的元素</h3><ul><li>HTML 元素（根元素）</li><li>设置了 z-index 数值的定位元素（非 auto，auto 是默认值）</li></ul><h3 id="_2-同一个堆叠上下文中元素在-z-轴上的排列" tabindex="-1"><a class="header-anchor" href="#_2-同一个堆叠上下文中元素在-z-轴上的排列" aria-hidden="true">#</a> 2.同一个堆叠上下文中元素在 Z 轴上的排列</h3><ul><li>从后往前顺序： <ul><li>创建堆叠上下文的元素的背景和边框</li><li>堆叠级别（z-index，stack level）为负值的堆叠上下文</li><li>常规流非定位的块盒</li><li>非定位的浮动盒子</li><li>常规流非定位的行盒</li><li>任何 z-index 为 auto 的定位子元素，以及 z-index 为 0 的堆叠上下文</li><li>堆叠级别为正值的堆叠上下文</li></ul></li><li>每个堆叠上下文，独立于其他堆叠上下文，它们之间不能相互穿插</li></ul><h2 id="二十三-svg" tabindex="-1"><a class="header-anchor" href="#二十三-svg" aria-hidden="true">#</a> （二十三）svg</h2><ul><li>scalable vector graphics，可缩放的矢量图</li><li>该图片使用代码书写而成</li><li>缩放不会失真</li><li>内容轻量，文件大小很小</li></ul><h3 id="_1-使用" tabindex="-1"><a class="header-anchor" href="#_1-使用" aria-hidden="true">#</a> 1.使用</h3><ul><li>svg 可以嵌入浏览器，也可以单独作为一个文件</li><li>svg 使用 xml 语言定义</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgs/weixin.svg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgs/weixin.svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image/svg+xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>img/weixin.svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image/svg+xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgs/weixin.svg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>imgs/weixin.svg<span class="token punctuation">)</span></span> norepeat center/cover<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-书写代码" tabindex="-1"><a class="header-anchor" href="#_2-书写代码" aria-hidden="true">#</a> 2.书写代码</h3><ul><li><code>svg</code> ：根标签 <ul><li>默认宽高：300*150</li><li><code>xmlns</code> ：xml 命名空间</li></ul></li><li><code>rect</code> ：矩形</li><li><code>circle</code> ：圆形</li><li><code>ellipse</code> ：椭圆形</li><li><code>line</code> ：直线</li><li><code>polyline</code> ：折线</li><li><code>polygon</code> ：多边形</li><li><code>path</code> ：路径 <ul><li><code>M</code> ：moveto，把坐标移动到指定坐标点</li><li><code>L</code> ：lineto</li><li><code>H</code> ：horizontal lineto</li><li><code>V</code> ：vertical lineto</li><li><code>C</code> ：curveto</li><li><code>S</code> ：smooth curveto</li><li><code>Q</code> ：quadratic Belzier curve</li><li><code>T</code> ：smooth quadratic Belzier curveto</li><li><code>A</code> ：elliptical Arc，弧线，<code>A半径1 半径2 顺时针旋转角度 小弧(0)或大弧(1) 顺时针(1)或逆时针(0)</code></li><li><code>Z</code> ：closepath</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>background: #ccc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transparent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#008c8c<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>30<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>30<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polyline</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300,100,350,100,350,150,400,150,400,200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300,300,400,400,300,500<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M150 600 L300 600 L300 800 L150 800 Z<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stroke: #000; stroke-width: 5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M0 150 A150 150 0 0 1 150 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stroke: #000; stroke-width: 5<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二十四-数据链接-data-url" tabindex="-1"><a class="header-anchor" href="#二十四-数据链接-data-url" aria-hidden="true">#</a> （二十四）数据链接 Data URL</h2><h3 id="_1-书写" tabindex="-1"><a class="header-anchor" href="#_1-书写" aria-hidden="true">#</a> 1.书写</h3><ul><li>将目标文件的数据直接书写到路径位置（src）</li><li>语法：<code>data:[MIME];base64,[数据]</code></li></ul><h3 id="_2-意义" tabindex="-1"><a class="header-anchor" href="#_2-意义" aria-hidden="true">#</a> 2.意义</h3><ul><li>优点： <ul><li>减少了浏览器中的请求</li><li>有利于动态生成数据</li></ul></li><li>缺点： <ul><li>增加了资源的体积，导致传输内容增加，从而增加了单个资源的传输时间</li><li>不利于浏览器的缓存（图片文件、CSS 文件、JS 文件）</li><li>使用 base64 会使资源的体积增加到原体积的 4/3</li></ul></li></ul><h3 id="_3-应用场景" tabindex="-1"><a class="header-anchor" href="#_3-应用场景" aria-hidden="true">#</a> 3.应用场景</h3><ul><li>请求图片体积较小，且该图片因为各种原因不适合于制作雪碧图，可以使用数据链接</li><li>图片由其他代码动态生成，且图片较小，可以使用数据链接</li></ul><h3 id="_4-base64" tabindex="-1"><a class="header-anchor" href="#_4-base64" aria-hidden="true">#</a> 4.base64</h3><ul><li>一种编码方式，通常用于将一些二进制数据，用一个可书写的字符串表示</li></ul><h2 id="二十五-浏览器兼容性" tabindex="-1"><a class="header-anchor" href="#二十五-浏览器兼容性" aria-hidden="true">#</a> （二十五）浏览器兼容性</h2><h3 id="_1-问题产生原因" tabindex="-1"><a class="header-anchor" href="#_1-问题产生原因" aria-hidden="true">#</a> 1.问题产生原因</h3><ul><li>市场竞争</li><li>W3C 标准版本的变化</li></ul><h3 id="_2-厂商前缀" tabindex="-1"><a class="header-anchor" href="#_2-厂商前缀" aria-hidden="true">#</a> 2.厂商前缀</h3><ul><li>原因： <ul><li>市场竞争，标准没有发布</li><li>标准仍在讨论中（草案），浏览器厂商希望先支持</li></ul></li><li><code>-webkit-</code> ：Chrome（谷歌旧版本浏览器）、Safari</li><li><code>-ms-</code> ：IE</li><li><code>-o-</code> ：Opera</li><li><code>-moz-</code> ：Firefox（Mozilla）</li></ul><h3 id="_3-css-hack" tabindex="-1"><a class="header-anchor" href="#_3-css-hack" aria-hidden="true">#</a> 3.CSS Hack</h3><ul><li>根据不同的浏览器（主要针对 IE），设置不同的样式和元素</li><li>IE 中，CSS 的特殊符号： <ul><li><code>*属性</code>：兼容 IE5~IE7</li><li><code>_属性</code>：兼容 IE5、IE6</li><li><code>属性值\\9</code>：兼容 IE5~IE11</li><li><code>属性值\\0</code>：兼容 IE8~IE11</li><li><code>属性值\\9\\0</code>：兼容 IE9~IE10</li><li>条件判断：</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- [if IE]&gt;
&lt;p&gt;
	这是只有IE浏览器能识别的代码
&lt;/p&gt;
&lt;![endif] --&gt;</span>

<span class="token comment">&lt;!-- [if !(IE)]&gt;&lt;--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是非IE浏览器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--&lt;![endif] --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-渐进增强和优雅降级" tabindex="-1"><a class="header-anchor" href="#_4-渐进增强和优雅降级" aria-hidden="true">#</a> 4.渐进增强和优雅降级</h3><ul><li>两种解决兼容性问题的思路，会影响代码的书写风格</li><li><mark>渐进增强</mark>：先适应大部分浏览器，然后针对新版本浏览器加入新的样式 <ul><li>书写代码时，先尽量避免书写有兼容性问题的代码，完成之后再逐步加入新标准中的代码</li></ul></li><li><mark>优雅降级</mark>：先制作完整的功能，然后针对低版本浏览器进行特殊处理 <ul><li>书写代码时，先不用特别在意兼容性，完成整个功能之后，再针对低版本浏览器处理样式</li></ul></li></ul><h3 id="_5-caniuse-网站" tabindex="-1"><a class="header-anchor" href="#_5-caniuse-网站" aria-hidden="true">#</a> 5.caniuse 网站</h3>`,260),r={href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"},d=s(`<h2 id="二十六-居中总结" tabindex="-1"><a class="header-anchor" href="#二十六-居中总结" aria-hidden="true">#</a> （二十六）居中总结</h2><ul><li>居中：盒子在其包含块中居中</li></ul><h3 id="_1-行盒-行块盒-水平居中" tabindex="-1"><a class="header-anchor" href="#_1-行盒-行块盒-水平居中" aria-hidden="true">#</a> 1.行盒（行块盒）水平居中</h3><ul><li>直接设置行盒（行块盒）的父元素文本居中</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-常规流块盒水平居中" tabindex="-1"><a class="header-anchor" href="#_2-常规流块盒水平居中" aria-hidden="true">#</a> 2.常规流块盒水平居中</h3><ul><li>定宽</li><li>设置左右 margin 为 auto（吸收剩余空间）</li></ul><h3 id="_3-绝对-固定定位元素的水平居中" tabindex="-1"><a class="header-anchor" href="#_3-绝对-固定定位元素的水平居中" aria-hidden="true">#</a> 3.绝对/固定定位元素的水平居中</h3><ul><li>定宽</li><li>设置左右的坐标为 0（left: 0; right: 0）</li><li>将左右 margin 设置为 auto</li></ul><p>固定定位（fixed）元素可以看做绝对定位（absolute）元素的特殊情况，区别在于包含块不同而已</p><h3 id="_4-单行文本的垂直居中" tabindex="-1"><a class="header-anchor" href="#_4-单行文本的垂直居中" aria-hidden="true">#</a> 4.单行文本的垂直居中</h3><ul><li>设置文本所在元素的行高，为整个区域的高度</li></ul><h3 id="_5-行块盒或块盒内多行文本的垂直居中" tabindex="-1"><a class="header-anchor" href="#_5-行块盒或块盒内多行文本的垂直居中" aria-hidden="true">#</a> 5.行块盒或块盒内多行文本的垂直居中</h3><ul><li>没有完美方案</li><li>设置盒子上下内边距相同，达到类似垂直居中的效果</li></ul><h3 id="_6-绝对-固定定位的垂直居中" tabindex="-1"><a class="header-anchor" href="#_6-绝对-固定定位的垂直居中" aria-hidden="true">#</a> 6.绝对/固定定位的垂直居中</h3><ul><li>定高</li><li>设置上下的坐标为 0（top: 0; bottom: 0）</li><li>将上下 margin 设置为 auto</li></ul><h2 id="二十七-css-进阶" tabindex="-1"><a class="header-anchor" href="#二十七-css-进阶" aria-hidden="true">#</a> （二十七）CSS 进阶</h2><h3 id="_1-display-list-item" tabindex="-1"><a class="header-anchor" href="#_1-display-list-item" aria-hidden="true">#</a> 1.display: list-item</h3><ul><li>设置为该属性值的盒子，本质上仍然是一个块盒（主盒子），但同时该盒子会附带另一个盒子（次盒子）</li><li>次盒子和主盒子水平排列</li><li>li 前面的序号即次盒子，后面内容为主盒子</li></ul><h4 id="_1-涉及的-css" tabindex="-1"><a class="header-anchor" href="#_1-涉及的-css" aria-hidden="true">#</a> 1）涉及的 CSS</h4><ul><li>list-style-type <ul><li>设置次盒子的类型</li></ul></li><li>list-style-position <ul><li>设置次盒子相对于主盒子的位置</li><li>inside / outside</li></ul></li><li>list-style <ul><li>上述两个属性的简写（合）</li><li>清空次盒子：<code>list-style: none;</code></li></ul></li></ul><h3 id="_2-图片失效时的宽高问题" tabindex="-1"><a class="header-anchor" href="#_2-图片失效时的宽高问题" aria-hidden="true">#</a> 2.图片失效时的宽高问题</h3><ul><li>如果 img 元素的图片链接无效，此时 img 特性和普通行盒一样，无法设置宽高</li></ul><h3 id="_3-行盒中包含行块盒或可替换元素" tabindex="-1"><a class="header-anchor" href="#_3-行盒中包含行块盒或可替换元素" aria-hidden="true">#</a> 3.行盒中包含行块盒或可替换元素</h3><ul><li>行盒的高度与它内部的行块盒或可替换元素的高度无关【a 标签包含 img 元素】</li><li>需要设置宽高时可以设为块盒</li></ul><h3 id="_4-text-align" tabindex="-1"><a class="header-anchor" href="#_4-text-align" aria-hidden="true">#</a> 4.text-align</h3><ul><li>start：起始位置对齐，默认值</li><li>left：左对齐</li><li>right：右对齐</li><li>center：居中对齐</li><li>justify：除最后一行外，分散对齐（两端对齐，平均分布空格） <ul><li>如果最后一行也需分散对齐，则可使用 <code>::after</code> 伪元素， <mark>设为行块盒且宽度 100%</mark></li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> justify<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">div::after</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-制作一个三角形" tabindex="-1"><a class="header-anchor" href="#_5-制作一个三角形" aria-hidden="true">#</a> 5.制作一个三角形</h3><p>本质是一个宽高为 0 的元素，且设置边框</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 10px solid transparent<span class="token punctuation">;</span>
  <span class="token property">border-left-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-direction-和-writing-mode" tabindex="-1"><a class="header-anchor" href="#_6-direction-和-writing-mode" aria-hidden="true">#</a> 6.direction 和 writing-mode</h3><ul><li>开始 start - 结束 end</li><li>左 left - 右 right</li><li>开始和结束是相对的，不同国家有不同的习惯，但是左右是绝对的</li><li>direction：设置开始到结束的方向</li><li>writing-mode：设置文字的书写方向</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">direction</span><span class="token punctuation">:</span> rtl<span class="token punctuation">;</span> <span class="token comment">/* right to left */</span>
<span class="token property">writing-mode</span><span class="token punctuation">:</span> vertical-rl<span class="token punctuation">;</span> <span class="token comment">/* 垂直方向从右到左（古诗词） */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-utf-8-字符" tabindex="-1"><a class="header-anchor" href="#_7-utf-8-字符" aria-hidden="true">#</a> 7.utf-8 字符</h3><ul><li>可用于伪元素的 <code>content</code><ul><li><code>\\[HHHH]</code>：后跟 4 位 16 进制的编码</li></ul></li><li>可以直接在网页中显示 <ul><li><code>$#x[HHHH];</code></li></ul></li></ul>`,36);function h(k,m){const t=e("ExternalLinkIcon");return i(),p("div",null,[u,a("ul",null,[a("li",null,[n("查找 CSS 兼容性："),a("a",r,[n("caniuse.com"),c(t)])])]),d])}const b=l(o,[["render",h],["__file","01.html.vue"]]);export{b as default};
