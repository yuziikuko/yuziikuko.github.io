const n=JSON.parse('{"key":"v-b949bec2","path":"/notes/ECMAScript6-11/17.html","title":"十七、数值扩展","lang":"zh-CN","frontmatter":{"title":"十七、数值扩展","copyright":false,"date":"2023-01-01T00:00:00.000Z","category":["笔记","ECMAScript"],"tag":["尚硅谷","李强"]},"headers":[{"level":2,"title":"（一）Number.EPSILON","slug":"一-number-epsilon","link":"#一-number-epsilon","children":[]},{"level":2,"title":"（二）二进制和八进制","slug":"二-二进制和八进制","link":"#二-二进制和八进制","children":[]},{"level":2,"title":"（三）Number.isFinite","slug":"三-number-isfinite","link":"#三-number-isfinite","children":[]},{"level":2,"title":"（四）Number.isNaN","slug":"四-number-isnan","link":"#四-number-isnan","children":[]},{"level":2,"title":"（五）Number.parseInt && Number.parseFloat","slug":"五-number-parseint-number-parsefloat","link":"#五-number-parseint-number-parsefloat","children":[]},{"level":2,"title":"（六）Number.isInteger","slug":"六-number-isinteger","link":"#六-number-isinteger","children":[]},{"level":2,"title":"（七）Math.trunc","slug":"七-math-trunc","link":"#七-math-trunc","children":[]},{"level":2,"title":"（八）Math.sign","slug":"八-math-sign","link":"#八-math-sign","children":[]}],"git":{"createdTime":1672650149000,"updatedTime":1689308920000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"notes/ECMAScript6-11/17.md","localizedDate":"2023年1月1日","excerpt":"<h2> （一）Number.EPSILON</h2>\\n<ul>\\n<li>是 <code>JavaScript</code> 表示的最小精度</li>\\n<li><code>EPSILON</code> 属性值接近于 <code>2.2204460492503130808472633361816E-16</code></li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>Number<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">EPSILON</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 2.220446049250313e-16</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0.1</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">0.2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 0.30000000000000004</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0.1</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">0.2</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0.3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// false</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">equal</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a<span class=\\"token punctuation\\">,</span> b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">abs</span><span class=\\"token punctuation\\">(</span>a <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> Number<span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">EPSILON</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">equal</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0.1</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">0.2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// true</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
