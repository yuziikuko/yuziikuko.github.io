import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as t,c,a as e,b as a,d as o,e as n}from"./app-e877fca4.js";const d="/assets/CSS301-8b89455f.png",r={},p=n('<h2 id="一-introduction" tabindex="-1"><a class="header-anchor" href="#一-introduction" aria-hidden="true">#</a> （一）Introduction</h2><h3 id="_1-预处理器-pre-processor" tabindex="-1"><a class="header-anchor" href="#_1-预处理器-pre-processor" aria-hidden="true">#</a> 1.预处理器(pre-processor)</h3><ul><li>按照特定的规则编写样式，预处理器会将该样式文件编译成正常规则编写的 CSS 文件</li><li>如：less/sass、cssNext 插件 <ul><li>cssNext 插件是用来实现一些未来标准的样式，暂未完全在各大浏览器中实现</li></ul></li></ul><h3 id="_2-后处理器-post-processor" tabindex="-1"><a class="header-anchor" href="#_2-后处理器-post-processor" aria-hidden="true">#</a> 2.后处理器(post-processor)</h3>',4),u={href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"},h=e("ul",null,[e("li",null,[e("code",null,"-webkit-"),a("、"),e("code",null,"-moz-"),a("、"),e("code",null,"-o-"),a("、"),e("code",null,"-ms-")])],-1),b=e("li",null,"如：autoprefixer 插件",-1),k=n(`<h3 id="_3-postcss-工具" tabindex="-1"><a class="header-anchor" href="#_3-postcss-工具" aria-hidden="true">#</a> 3.postCss 工具</h3><ul><li>一种用 JS 实现的 CSS 的抽象语法树(AST, Abstract Syntax Tree)</li><li>功能：postCss + 插件（充分体现扩展性）</li><li>cssNext 插件和 autoprefixer 插件都是基于 postCss 的 AST 开发的</li></ul><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>假若兼容性不再是问题时，后处理器比预处理的可维护性更好</p></div><h2 id="二-selectors" tabindex="-1"><a class="header-anchor" href="#二-selectors" aria-hidden="true">#</a> （二）Selectors</h2><h3 id="_1-关系模式" tabindex="-1"><a class="header-anchor" href="#_1-关系模式" aria-hidden="true">#</a> 1.关系模式</h3><ul><li><code>E + F</code> ：下一个满足条件的兄弟元素节点</li><li><code>E ~ F</code> ：满足条件的所有兄弟（同级）元素节点</li></ul><h3 id="_2-属性选择器" tabindex="-1"><a class="header-anchor" href="#_2-属性选择器" aria-hidden="true">#</a> 2.属性选择器</h3><ul><li><code>E[attr~=&#39;val&#39;]</code> ：元素 E 有属性 attr 且该属性仅有独立属性值 val 的元素节点（将 attr 类比 class 属性理解） <ul><li>&#39;val&#39;、&#39;val val1&#39;</li></ul></li><li><code>E[attr|=&#39;val&#39;]</code> ：元素 E 有属性 attr 且该属性包含属性值以 val 开头或 val-开头 <ul><li>&#39;val&#39;、&#39;val-test&#39;</li></ul></li><li><code>E[attr^=&#39;val&#39;]</code> ：元素 E 有属性 attr 且该属性包含属性值以 val 开头 <ul><li>&#39;val&#39;、&#39;valtest&#39;、&#39;val-test&#39;</li></ul></li><li><code>E[attr$=&#39;val&#39;]</code> ：元素 E 有属性 attr 且该属性包含属性值以 val 结尾 <ul><li>&#39;testval&#39;</li></ul></li><li><code>E[attr*=&#39;val&#39;]</code> ：元素 E 有属性 attr 且该属性包含属性值含有 val 字符串（无论数量和位置） <ul><li>&#39;testvaltest&#39;、&#39;val&#39;、&#39;valtest&#39;、&#39;testval&#39;、&#39;valvaltest&#39;</li></ul></li></ul><h3 id="_3-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_3-伪元素选择器" aria-hidden="true">#</a> 3.伪元素选择器</h3><ul><li><code>E::placeholder</code> ：只能改变 input 框占位文本的颜色</li><li><code>E::selection</code> ：改变文本选中后的文字颜色、背景颜色、文字阴影</li></ul><h3 id="_4-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_4-伪类选择器" aria-hidden="true">#</a> 4.伪类选择器</h3><p>被选中的元素的一种状态</p><ul><li><code>E:not(s)</code> ：选中不符合条件的所有元素节点 <ul><li>列表项除了最后一个元素都加上底边框：<code>li:not(:last-of-type)</code></li></ul></li><li><code>:root</code> ：选中根标签，在 html 文件中等同于 <code>html</code> 选择器 <ul><li>在 xml 等其他文件就不一定是 <code>html</code></li></ul></li><li><code>E:target</code> ：选中 a 标签绑定的锚点值 <ul><li>选中 id 值等同于 <code>location.hash</code> 值的元素节点</li></ul></li><li><code>E:first-child</code> ：选中第一个元素 E，计数时考虑其他同级元素</li><li><code>E:last-child</code> ：选中最后一个元素 E，计数时考虑其他同级元素</li><li><code>E:only-child</code> ：选中独生子元素 E，计数时考虑其他同级元素</li><li><code>E:nth-child(n)</code> ：选中第 n(n&gt;=1) 个子元素 E，计数时考虑其他同级元素</li><li><code>E:nth-last-child(n)</code> ：选中第 n(n&gt;=1) 个且是最后一个的子元素 E，计数时考虑其他同级元素</li><li><code>E:first-of-type</code> ：选中第一个和元素 E 同类型的子元素，计数时不考虑其他同级元素</li><li><code>E:last-of-type</code> ：选中最后一个和元素 E 同类型的子元素，计数时不考虑其他同级元素</li><li><code>E:only-of-type</code> ：选中仅有一个和元素 E 同类型的子元素，计数时不考虑其他同级元素 <ul><li>可以有其他类型的，但是元素 E 同类型的只能有一个</li></ul></li><li><code>E:nth-of-type(n)</code> ：选中第 n(n&gt;=1) 个和元素 E 同类型的子元素，计数时不考虑其他同级元素</li><li><code>E:nth-of-last-type(n)</code> ：选中第 n(n&gt;=1) 个且是最后一个的和元素 E 同类型的子元素，计数时不考虑其他同级元素</li><li><code>E:empty</code> ：选中<strong>没有内容</strong>或<strong>只有注释</strong>的元素 E</li><li><code>E:checked</code> ：选中处于勾选状态的表单元素 E</li><li><code>E:enabled</code> ：选中非禁用的元素 E</li><li><code>E:disabled</code> ：选中禁用状态的元素 E</li><li><code>E:read-only</code> ：选中只读状态的元素 E</li><li><code>E:read-write</code> ：选中非只读状态的元素 E</li></ul><h2 id="三-border-background" tabindex="-1"><a class="header-anchor" href="#三-border-background" aria-hidden="true">#</a> （三）Border &amp; Background</h2><h3 id="_1-边框圆角-border-radius" tabindex="-1"><a class="header-anchor" href="#_1-边框圆角-border-radius" aria-hidden="true">#</a> 1.边框圆角 <code>border-radius</code></h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50px<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 简写1:四个角等幅度 */</span>

  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span> <span class="token comment">/* 左上右下 右上左下 */</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px 20px 30px<span class="token punctuation">;</span> <span class="token comment">/* 左上 右上左下 右下 */</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px 20px 30px 40px<span class="token punctuation">;</span> <span class="token comment">/* 左上 右上 右下 左下 */</span>

  <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 左上 */</span>
  <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 右上 */</span>
  <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span> <span class="token comment">/* 右下 */</span>
  <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span> <span class="token comment">/* 左下 */</span>

  <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 10px 10px<span class="token punctuation">;</span> <span class="token comment">/* 左上（椭圆长半径/水平方向 椭圆短半径/垂直方向） */</span>
  <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 20px 20px<span class="token punctuation">;</span> <span class="token comment">/* 右上（椭圆长半径/水平方向 椭圆短半径/垂直方向） */</span>
  <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 30px 30px<span class="token punctuation">;</span> <span class="token comment">/* 右下（椭圆长半径/水平方向 椭圆短半径/垂直方向） */</span>
  <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> 40px 40px<span class="token punctuation">;</span> <span class="token comment">/* 左下（椭圆长半径/水平方向 椭圆短半径/垂直方向） */</span>

  <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px 20px 30px 40px / 10px 20px 30px 40px<span class="token punctuation">;</span> <span class="token comment">/* 水平/垂直 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-边框阴影-box-shadow" tabindex="-1"><a class="header-anchor" href="#_2-边框阴影-box-shadow" aria-hidden="true">#</a> 2.边框阴影 <code>box-shadow</code></h3><ul><li>外阴影：<code>box-shadow: 水平偏移量 垂直偏移量 边框模糊度 边框扩散度 阴影颜色值;</code><ul><li>边框模糊度：基于边框线往其两侧模糊</li></ul></li><li>内阴影：<code>box-shadow: inset 水平偏移量 垂直偏移量 边框模糊度 边框扩散度 阴影颜色值;</code></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 多阴影 */</span>
<span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0px 0px 10px #fff<span class="token punctuation">,</span> 3px 0px 10px #f0f<span class="token punctuation">,</span> 0px -3px 10px #0ff<span class="token punctuation">,</span> -3px
    0px 10px #00f<span class="token punctuation">,</span> 0px 3px 10px #ff0<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-边框图片-border-image" tabindex="-1"><a class="header-anchor" href="#_3-边框图片-border-image" aria-hidden="true">#</a> 3.边框图片 <code>border-image</code></h3><ul><li>支持图片填充和渐变填充</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-image-source</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> yellow<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token property">border-image-slice</span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span>
<span class="token property">border-image-repeat</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span>
<span class="token property">border-image-outset</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token property">border-image-width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-border-image-slice-截取" tabindex="-1"><a class="header-anchor" href="#_1-border-image-slice-截取" aria-hidden="true">#</a> 1）<code>border-image-slice</code> 截取</h4><ul><li>属性值为数字或百分比 <code>border-image-slice: 100</code></li><li>四个值对应 top、right、bottom、left 分割线</li><li>将边框分割为九宫格，图片/渐变将平均分配到 1-8 格，中心第 9 格不填充</li><li>默认值为 <code>100%</code>【病态填充】 <ul><li>此时 top 在边框底部，right 在边框左侧，bottom 在边框顶部，left 在边框右侧</li><li>即边框右上角对应 top、right 的夹角，此时变为全图，以此类推</li><li>所以 5、6、7、8 四个格子没有对应的填充区域，自动填充空白，仅有四个角有边框填充</li></ul></li><li>属性值加上 <code>fill</code> 表示将内容区也填充 <code>border-image-slice: 100 100 fill;</code><ul><li>一般不设置，效果和直接设置背景图片是一样的</li></ul></li></ul><p><img src="`+d+`" alt=""></p><h4 id="_2-border-image-outset-延伸" tabindex="-1"><a class="header-anchor" href="#_2-border-image-outset-延伸" aria-hidden="true">#</a> 2）<code>border-image-outset</code> 延伸</h4><ul><li>不能填负值</li><li>表示填充区域自边框线往外延伸的值</li></ul><h4 id="_3-border-image-width-填充宽度" tabindex="-1"><a class="header-anchor" href="#_3-border-image-width-填充宽度" aria-hidden="true">#</a> 3）<code>border-image-width</code> 填充宽度</h4><ul><li>表示图片/渐变占边框区域的宽度</li><li>默认值 <code>1</code>，占填充区域的 1 倍宽 =&gt; <code>1 * 100px（宽度）</code></li><li>值为 <code>auto</code> 时，取 slice 属性值再加上 100px</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-image-slice</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>
<span class="token property">border-image-width</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>

=&gt; <span class="token property">border-image-width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-border-image-repeat-重复" tabindex="-1"><a class="header-anchor" href="#_4-border-image-repeat-重复" aria-hidden="true">#</a> 4）<code>border-image-repeat</code> 重复</h4><ul><li>设置的是 5、6、7、8 四个格子如何填充 <ul><li><code>stretch</code> ：默认值，填充内容不够时拉伸</li><li><code>repeat</code> ：填充内容不够时重复平铺，平铺的内容平均填充在格子的<strong>左右两边</strong></li><li><code>round</code> ：填充内容不够时重复平铺，当格子宽度不足平铺填充元素的宽度时<strong>内容拉伸</strong>，格子宽度成平铺填充元素倍数时内容平铺</li><li><code>space</code> ：填充内容不够时重复平铺，当格子宽度不足平铺填充元素的宽度时用<strong>间隙填充</strong>，格子宽度成平铺填充元素倍数时内容平铺</li></ul></li><li>可以填两个属性值，表示水平和垂直方向上的重复状态 <code>border-image-repeat: round stretch;</code></li></ul><h3 id="_4-背景图片-background-image" tabindex="-1"><a class="header-anchor" href="#_4-背景图片-background-image" aria-hidden="true">#</a> 4.背景图片 <code>background-image</code></h3><ul><li>可以引入多张背景图片 <ul><li><code>background-image: url(), url();</code></li><li>一般用于第一个 url 较大的图片（请求）未加载出来时，显示第二个 url 较小的图片（本地）</li></ul></li><li>可以填充渐变 <ul><li><code>background-image: linear-gradient(red, yellow);</code></li><li><code>background-image: radial-gradient(red, yellow);</code></li></ul></li></ul><h3 id="_5-背景起始填充位置-background-origin" tabindex="-1"><a class="header-anchor" href="#_5-背景起始填充位置-background-origin" aria-hidden="true">#</a> 5.背景起始填充位置 <code>background-origin</code></h3><ul><li><code>border-box</code> ：从 border 左上角开始向内往右下角填充</li><li><code>padding-box</code> ：从 padding 左上角开始向内往右下角填充（默认值）</li><li><code>content-box</code> ：从 content 左上角开始向内往右下角填充</li></ul><h3 id="_6-背景填充区域-background-position" tabindex="-1"><a class="header-anchor" href="#_6-背景填充区域-background-position" aria-hidden="true">#</a> 6.背景填充区域 <code>background-position</code></h3><ul><li>相对 origin</li><li>origin 左上角即 position 的原点 (0, 0)</li></ul><h3 id="_7-背景填充剪切-background-clip" tabindex="-1"><a class="header-anchor" href="#_7-背景填充剪切-background-clip" aria-hidden="true">#</a> 7.背景填充剪切 <code>background-clip</code></h3><ul><li>设置背景填充区域到哪里截止</li><li><code>border-box</code> ：填充到 border 右下角（默认值）</li><li><code>padding-box</code> ：填充到 padding 右下角</li><li><code>content-box</code> ：填充到 content 右下角</li><li><code>text</code> ：用文字区域反切背景图片 <ul><li>webkit 特有属性，需加前缀 <code>-webkit-background-clip: text;</code></li><li>搭配 <code>-webkit-text-fill-color: transparent;</code> 使用</li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
  <span class="token property">background-clip</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>
  <span class="token property">-webkit-background-clip</span><span class="token punctuation">:</span> text<span class="token punctuation">;</span>
  <span class="token property">text-fill-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
  <span class="token property">-webkit-text-fill-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-背景填充重复-background-repeat" tabindex="-1"><a class="header-anchor" href="#_8-背景填充重复-background-repeat" aria-hidden="true">#</a> 8.背景填充重复 <code>background-repeat</code></h3><ul><li><code>repeat</code> ：填充内容不够时重复平铺</li><li><code>no-repeat</code> ：填充内容不够时留白</li><li><code>repeat-x</code> ：横向填充内容不够时重复平铺，纵向留白（相当于纵向 no-repeat）</li><li><code>repeat-y</code> ：纵向填充内容不够时重复平铺，横向留白（相当于横向 no-repeat）</li><li><code>round</code> ：填充内容不够时重复平铺，当容器宽度不足平铺填充元素的宽度时<strong>内容拉伸</strong>，容器宽度成平铺填充元素倍数时内容平铺</li><li><code>space</code> ：填充内容不够时重复平铺，当容器宽度不足平铺填充元素的宽度时用<strong>间隙填充</strong>，容器宽度成平铺填充元素倍数时内容平铺</li><li>可以填两个属性值，表示水平和垂直方向上的重复状态 <code>background-repeat: round space;</code><ul><li>只能在 round 和 space 两个值之间组合</li></ul></li></ul><h3 id="_9-背景填充定位-background-attachment" tabindex="-1"><a class="header-anchor" href="#_9-背景填充定位-background-attachment" aria-hidden="true">#</a> 9.背景填充定位 <code>background-attachment</code></h3><ul><li>设置当内容溢出容器形成滚动时背景图片相对什么元素定位</li><li><code>scroll</code> ：默认值，相对容器定位，即内容滚动时，背景图片不动；容器滚动时，背景图片随之滚动</li><li><code>local</code> ：相对内容定位，即内容滚动时，背景图片随之滚动</li><li><code>fixed</code> ：相对视口定位，可视区域始终不动，背景图片也不动，但当前容器离开视口时，背景图片超出部分隐藏</li></ul><h3 id="_10-背景填充尺寸-background-size" tabindex="-1"><a class="header-anchor" href="#_10-背景填充尺寸-background-size" aria-hidden="true">#</a> 10.背景填充尺寸 <code>background-size</code></h3><ul><li><code>cover</code> ：仅用一个元素填充背景，保持填充元素比例，放大以充满背景，溢出部分隐藏</li><li><code>contain</code> ：仅用一个元素填充背景，保持填充元素比例，放大使元素最长边充满背景，未充满区域有可能出现平铺或留白</li></ul><h3 id="_11-渐变" tabindex="-1"><a class="header-anchor" href="#_11-渐变" aria-hidden="true">#</a> 11.渐变</h3>`,48),m={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/radial-gradient",target:"_blank",rel:"noopener noreferrer"},v=n("<ul><li><code>linear-gradient([方向], 颜色值1 [边界1], 颜色值2 [边界2], 颜色值3 [边界3], ...)</code> ：线性渐变 <ul><li>方向，可缺省，默认 <code>to bottom</code>，也可以设置为角度 <code>0deg</code></li><li>如有设置边界 1，则从开始到边界 1 填充颜色值 1，剩余区域填充颜色值 2，以此类推</li><li>如有设置边界 2，则从开始到边界 1 填充颜色值 1，到边界 2 填充颜色值 2，以此类推</li></ul></li><li><code>radial-gradient([方向], 颜色值1 [边界1], 颜色值2 [边界2], 颜色值3 [边界3], ...)</code> ：径向渐变/放射性渐变 <ul><li>方向，可缺省，设置径向开始的圆心，默认 <code>circle at center</code>，也可以设置为椭圆 <code>ellipse at 200px 10px</code><ul><li><code>[ellipse] closet-side at 50px 50px</code> ：放射到最短边截止</li><li><code>[ellipse] closet-corner at 50px 50px</code> ：放射到最短边的边角截止</li><li><code>[ellipse] farthest-side at 50px 50px</code> ：放射到最长边截止</li><li><code>[ellipse] farthest-corner at 50px 50px</code> ：放射到最长边的边角截止</li></ul></li><li>如有设置边界 1，则从开始到边界 1 填充颜色值 1，剩余区域填充颜色值 2，以此类推</li><li>如有设置边界 2，则从开始到边界 1 填充颜色值 1，到边界 2 填充颜色值 2，以此类推</li><li>边界值可以是百分比</li></ul></li></ul>",1);function g(x,f){const s=l("ExternalLinkIcon");return t(),c("div",null,[p,e("ul",null,[e("li",null,[a("按照正常规则编写 CSS 文件，后处理器会将该样式文件按照"),e("a",u,[a("caniuse"),o(s)]),a("网站的浏览器兼容情况，自动补齐相应的带前缀样式 "),h]),b]),k,e("blockquote",null,[e("p",null,[e("a",m,[a("MDN 详细文档"),o(s)])])]),v])}const y=i(r,[["render",g],["__file","06.html.vue"]]);export{y as default};
