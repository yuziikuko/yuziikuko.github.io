import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-1ca76096.js";const e={},p=t(`<h2 id="一-基本使用" tabindex="-1"><a class="header-anchor" href="#一-基本使用" aria-hidden="true">#</a> （一）基本使用</h2><h3 id="_1-初始化配置文件" tabindex="-1"><a class="header-anchor" href="#_1-初始化配置文件" aria-hidden="true">#</a> 1.初始化配置文件</h3><ul><li>初始数据</li><li>配置 actions</li><li>配置 mutations</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// store.js</span>
<span class="token comment">// 引入Vue</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 引入Vuex</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&quot;vuex&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 使用Vuex</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 响应组件中加的动作</span>
  <span class="token function">jia</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// context ==&gt; miniStore</span>
    <span class="token comment">// console.log(&quot;Actions中的jia被调用了&quot;, miniStore, value);</span>
    context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&quot;JIA&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 执行加</span>
  <span class="token constant">JIA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(&quot;Mutations中的JIA被调用了&quot;, state, value);</span>
    state<span class="token punctuation">.</span>sum <span class="token operator">+=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 初始化数据</span>
<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">sum</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 创建并暴露Store</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  actions<span class="token punctuation">,</span>
  mutations<span class="token punctuation">,</span>
  state<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-组件中读取-vuex-中的数据" tabindex="-1"><a class="header-anchor" href="#_2-组件中读取-vuex-中的数据" aria-hidden="true">#</a> 2.组件中读取 Vuex 中的数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-组件中修改-vuex-中的数据" tabindex="-1"><a class="header-anchor" href="#_3-组件中修改-vuex-中的数据" aria-hidden="true">#</a> 3.组件中修改 Vuex 中的数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&quot;actions中的方法名&quot;</span><span class="token punctuation">,</span> 数据<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 或</span>
$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&quot;mutations中的方法名&quot;</span><span class="token punctuation">,</span> 数据<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-备注" tabindex="-1"><a class="header-anchor" href="#_4-备注" aria-hidden="true">#</a> 4.备注</h3><ul><li>若没有网络请求或其它业务逻辑，组件中也可以越过 actions</li><li>即不写 <code>dispatch</code> 直接编写 <code>commit</code></li></ul><h2 id="二-getters-的使用" tabindex="-1"><a class="header-anchor" href="#二-getters-的使用" aria-hidden="true">#</a> （二）getters 的使用</h2><h3 id="_1-作用" tabindex="-1"><a class="header-anchor" href="#_1-作用" aria-hidden="true">#</a> 1.作用</h3><ul><li>当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工</li></ul><h3 id="_2-追加-getters-配置" tabindex="-1"><a class="header-anchor" href="#_2-追加-getters-配置" aria-hidden="true">#</a> 2.追加 getters 配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// store.js</span>
<span class="token operator">...</span><span class="token operator">...</span>

<span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 创建并暴露store</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">,</span>
  getters
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-组件中读取数据" tabindex="-1"><a class="header-anchor" href="#_3-组件中读取数据" aria-hidden="true">#</a> 3.组件中读取数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>bigSum<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三-四个-map-方法的使用" tabindex="-1"><a class="header-anchor" href="#三-四个-map-方法的使用" aria-hidden="true">#</a> （三）四个 map 方法的使用</h2><h3 id="_1-mapstate-方法" tabindex="-1"><a class="header-anchor" href="#_1-mapstate-方法" aria-hidden="true">#</a> 1.mapState 方法</h3><ul><li>用于将 state 中的数据映射为计算属性数据</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// 借助mapState生成计算属性，从state中读取数据。（对象写法）</span>
  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">sum</span><span class="token operator">:</span> <span class="token string">&quot;sum&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">school</span><span class="token operator">:</span> <span class="token string">&quot;school&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&quot;subject&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// 借助mapState生成计算属性，从state中读取数据。（数组写法）</span>
  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;sum&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;school&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;subject&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-mapgetters-方法" tabindex="-1"><a class="header-anchor" href="#_2-mapgetters-方法" aria-hidden="true">#</a> 2.mapGetters 方法</h3><ul><li>用于将 getters 中的数据映射为计算属性数据</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// 借助mapGetters生成计算属性，从getters中读取数据。（对象写法）</span>
  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">bigSum</span><span class="token operator">:</span> <span class="token string">&quot;bigSum&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// 借助mapGetters生成计算属性，从getters中读取数据。（数组写法）</span>
  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;bigSum&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-mapactions-方法" tabindex="-1"><a class="header-anchor" href="#_3-mapactions-方法" aria-hidden="true">#</a> 3.mapActions 方法</h3><ul><li>用于生成与 actions 对话的方法</li><li>即：包含 <code>$store.dispatch(xxx)</code> 的函数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// 借助mapActions生成对应的方法，方法中会调用dispatch去联系actions。（对象写法）</span>
  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">incrementOdd</span><span class="token operator">:</span> <span class="token string">&quot;jiaOdd&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">incrementWait</span><span class="token operator">:</span> <span class="token string">&quot;jiaWait&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// 借助mapActions生成对应的方法，方法中会调用dispatch去联系actions。（数组写法）</span>
  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;incrementOdd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;incrementWait&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-mapmutations-方法" tabindex="-1"><a class="header-anchor" href="#_4-mapmutations-方法" aria-hidden="true">#</a> 4.mapMutations 方法</h3><ul><li>用于生成与 mutations 对话的方法</li><li>即：包含 <code>$store.commit(xxx)</code> 的函数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// 借助mapMutations生成对应的方法，方法中会调用commit去联系mutations。（对象写法）</span>
  <span class="token comment">// 绑定事件时要自己带参数</span>
  <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token string">&quot;JIA&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">decrement</span><span class="token operator">:</span> <span class="token string">&quot;JIAN&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token comment">// 借助mapMutations生成对应的方法，方法中会调用commit去联系mutations。（数组写法）</span>
  <span class="token comment">// mutations中的函数名要相同</span>
  <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;increment&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;decrement&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-备注" tabindex="-1"><a class="header-anchor" href="#_5-备注" aria-hidden="true">#</a> 5.备注</h3><ul><li>mapActions 与 mapMutations 使用时，若需要传递参数</li><li>则：在模板中绑定事件时需要传递好参数，否则参数是事件对象</li></ul><h2 id="四-模块化-命名空间" tabindex="-1"><a class="header-anchor" href="#四-模块化-命名空间" aria-hidden="true">#</a> （四）模块化+命名空间</h2><h3 id="_1-目的" tabindex="-1"><a class="header-anchor" href="#_1-目的" aria-hidden="true">#</a> 1.目的</h3><ul><li>让代码更好维护</li><li>让多种数据分类更加明确</li></ul><h3 id="_2-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_2-修改配置文件" aria-hidden="true">#</a> 2.修改配置文件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// store.js</span>
<span class="token keyword">const</span> countAbout <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">namespaced</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启命名空间</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> personAbout <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">namespaced</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启命名空间</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    countAbout<span class="token punctuation">,</span>
    personAbout
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-开启命名空间后-组件中读取-state-数据" tabindex="-1"><a class="header-anchor" href="#_3-开启命名空间后-组件中读取-state-数据" aria-hidden="true">#</a> 3.开启命名空间后，组件中读取 state 数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 方式一：自己直接读取</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personAbout<span class="token punctuation">.</span>list<span class="token punctuation">;</span>

<span class="token comment">// 方式二：借助mapState读取</span>
<span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">&quot;countAbout&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;sum&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;school&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;subject&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-开启命名空间后-组件中读取-getters-数据" tabindex="-1"><a class="header-anchor" href="#_4-开启命名空间后-组件中读取-getters-数据" aria-hidden="true">#</a> 4.开启命名空间后，组件中读取 getters 数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 方式一：自己直接读取</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span><span class="token string">&quot;personAbout/firstPersonName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// 方式二：借助mapGetters读取</span>
<span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token string">&quot;countAbout&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;bigSum&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-开启命名空间后-组件中调用-dispatch" tabindex="-1"><a class="header-anchor" href="#_5-开启命名空间后-组件中调用-dispatch" aria-hidden="true">#</a> 5.开启命名空间后，组件中调用 dispatch</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 方式一：自己直接dispatch</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&quot;personAbout/addPersonWang&quot;</span><span class="token punctuation">,</span> person<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 方式二：借助mapActions</span>
<span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">&quot;countAbout&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">incrementOdd</span><span class="token operator">:</span> <span class="token string">&#39;jiaOdd&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">incrementWait</span><span class="token operator">:</span> <span class="token string">&#39;jiaWait&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-开启命名空间后-组件中调用-commit" tabindex="-1"><a class="header-anchor" href="#_6-开启命名空间后-组件中调用-commit" aria-hidden="true">#</a> 6.开启命名空间后，组件中调用 commit</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 方式一：自己直接commit</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&quot;personAbout/ADD_PERSON&quot;</span><span class="token punctuation">,</span> person<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 方式二：借助mapMutations</span>
<span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token string">&quot;countAbout&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">increment</span><span class="token operator">:</span> <span class="token string">&#39;JIA&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">decrement</span><span class="token operator">:</span> <span class="token string">&#39;JIAN&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","39.html.vue"]]);export{d as default};
