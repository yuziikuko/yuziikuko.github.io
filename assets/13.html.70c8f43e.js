import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as n,b as c,d as a,e as s,r as i}from"./app.cf242476.js";const l={},u=a(`<h2 id="\u4E00-\u57FA\u672C\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E00-\u57FA\u672C\u8BED\u6CD5" aria-hidden="true">#</a> \uFF08\u4E00\uFF09\u57FA\u672C\u8BED\u6CD5</h2><ul><li><p><code>Promise</code> \u662F <code>ES6</code> \u5F15\u5165\u7684\u5F02\u6B65\u7F16\u7A0B\u7684\u65B0\u89E3\u51B3\u65B9\u6848\uFF0C\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u5C01\u88C5\u5F02\u6B65\u64CD\u4F5C\u5E76\u53EF\u4EE5\u83B7\u53D6\u5176\u6210\u529F\u6216\u5931\u8D25\u7684\u7ED3\u679C\u3002</p></li><li><p>Promise \u6784\u9020\u51FD\u6570\uFF1A <code>Promise (excutor) {}</code> \u3002</p></li><li><p><code>Promise.prototype.then</code> \u65B9\u6CD5\u3002</p></li><li><p><code>Promise.prototype.catch</code> \u65B9\u6CD5\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9E\u4F8B\u5316Promise\u5BF9\u8C61</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u5F97\u4E00\u4E2A\u6570\u636E</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">&quot;\u6570\u636E\u5E93\u4E2D\u7684\u7528\u6237\u6570\u636E&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// // \u8C03\u7528resolve\u540Ep\u5BF9\u8C61\u72B6\u6001\u53D8\u4E3A\u201C\u6210\u529F\u201D</span>
    <span class="token comment">// resolve(data);</span>

    <span class="token comment">// \u8C03\u7528reject\u540Ep\u5BF9\u8C61\u72B6\u6001\u53D8\u4E3A\u201C\u5931\u8D25\u201D</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8C03\u7528Promise\u5BF9\u8C61\u7684then\u65B9\u6CD5</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// p\u4E3A\u6210\u529F\u65F6\u6267\u884C</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// p\u4E3A\u5931\u8D25\u65F6\u6307\u5411</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C-\u8BFB\u53D6\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E8C-\u8BFB\u53D6\u6587\u4EF6" aria-hidden="true">#</a> \uFF08\u4E8C\uFF09\u8BFB\u53D6\u6587\u4EF6</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>    \u4E3A\u5B66

\u5929\u4E0B\u4E8B\u6709\u96BE\u6613\u4E4E\uFF1F
\u4E3A\u6B62\uFF0C\u5219\u96BE\u8005\u4EA6\u6613\u77E3\uFF1B
\u4E0D\u4E3A\uFF0C\u5219\u6613\u8005\u4EA6\u96BE\u77E3\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.\u5F15\u5165nodejs\u4E2D\u7684fs\u6A21\u5757</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 2.\u8C03\u7528\u65B9\u6CD5\u8BFB\u53D6\u6587\u4EF6</span>
<span class="token comment">// fs.readFile(&quot;./resources/\u4E3A\u5B66.md&quot;, (err, data) =&gt; {</span>
<span class="token comment">//   // \u5982\u679C\u5931\u8D25\u5219\u629B\u51FA\u9519\u8BEF</span>
<span class="token comment">//   if (err) throw err;</span>
<span class="token comment">//   // \u5982\u679C\u6210\u529F\u5219\u8F93\u51FA\u5185\u5BB9</span>
<span class="token comment">//   console.log(data.toString());</span>
<span class="token comment">//   /**</span>
<span class="token comment">//    * cd &#39;.\\ECMAScript6-11\\&#39;</span>
<span class="token comment">//    * node .\\21.Promise\u8BFB\u53D6\u6587\u4EF6.js</span>
<span class="token comment">//    */</span>
<span class="token comment">// });</span>

<span class="token comment">// 3.\u4F7F\u7528Promise\u5C01\u88C5</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u4E3A\u5B66.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5931\u8D25</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u6210\u529F</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u5931\u8D25!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09-\u53D1\u9001-ajax-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u4E09-\u53D1\u9001-ajax-\u8BF7\u6C42" aria-hidden="true">#</a> \uFF08\u4E09\uFF09\u53D1\u9001 Ajax \u8BF7\u6C42</h2>`,7),r=s("\u63A5\u53E3\u5730\u5740\uFF1A"),k={href:"https://api.apiopen.top/getJoke",target:"_blank",rel:"noopener noreferrer"},d=s("https://api.apiopen.top/getJoke"),v=s(" \u3002"),m=a(`<h3 id="_1-\u4F20\u7EDF-xhr" tabindex="-1"><a class="header-anchor" href="#_1-\u4F20\u7EDF-xhr" aria-hidden="true">#</a> 1.\u4F20\u7EDF xhr</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.\u521B\u5EFA\u5BF9\u8C61</span>
<span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2.\u521D\u59CB\u5316</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://api.apiopen.top/getJoke&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3.\u53D1\u9001</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 4.\u7ED1\u5B9A\u4E8B\u4EF6\uFF0C\u5904\u7406\u54CD\u5E94\u7ED3\u679C</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD\u54CD\u5E94\u72B6\u6001\u7801\uFF1A200-299\u5373\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8868\u793A\u6210\u529F</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5931\u8D25</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4F7F\u7528-promise-\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528-promise-\u5C01\u88C5" aria-hidden="true">#</a> 2.\u4F7F\u7528 Promise \u5C01\u88C5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1.\u521B\u5EFA\u5BF9\u8C61</span>
  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2.\u521D\u59CB\u5316</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://api.apiopen.top/getJoke&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 3.\u53D1\u9001</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 4.\u7ED1\u5B9A\u4E8B\u4EF6\uFF0C\u5904\u7406\u54CD\u5E94\u7ED3\u679C</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5224\u65AD\u54CD\u5E94\u72B6\u6001\u7801\uFF1A200-299\u5373\u6210\u529F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8868\u793A\u6210\u529F</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5931\u8D25</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6307\u5B9A\u56DE\u8C03</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DB-promise-prototype-then" tabindex="-1"><a class="header-anchor" href="#\u56DB-promise-prototype-then" aria-hidden="true">#</a> \uFF08\u56DB\uFF09Promise.prototype.then</h2><h3 id="_1-\u8C03\u7528-then-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u8C03\u7528-then-\u65B9\u6CD5" aria-hidden="true">#</a> 1.\u8C03\u7528 then \u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFAPromise\u5BF9\u8C61</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u7528\u6237\u6570\u636E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// reject(&#39;\u51FA\u9519\u5566&#39;);</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-then-\u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#_2-then-\u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C" aria-hidden="true">#</a> 2.then \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C</h3><ul><li><p><code>then</code> \u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\u662F <code>Promise</code> \u5BF9\u8C61\uFF0C\u5BF9\u8C61\u72B6\u6001\u7531\u56DE\u8C03\u51FD\u6570\u7684\u6267\u884C\u7ED3\u679C\u6765\u51B3\u5B9A\u3002</p></li><li><p>\u56DE\u8C03\u51FD\u6570\u4E2D\u8FD4\u56DE\u7684\u7ED3\u679C\u662F<strong>\u975E Promise \u7C7B\u578B</strong>\u7684\u6570\u636E =&gt; <code>resolve</code> \uFF08\u72B6\u6001\u6210\u529F\uFF0C\u8FD4\u56DE\u503C\u4E3A\u5BF9\u8C61\u7684\u6210\u529F\u7684\u503C\uFF09\u3002</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 0.\u6CA1\u6709\u8FD4\u56DE\u503C</span>
    <span class="token comment">// [[PromiseState]]: &quot;fulfilled&quot;</span>
    <span class="token comment">// [[PromiseResult]]: undefined</span>

    <span class="token comment">// 1.\u975EPromise\u7C7B\u578B</span>
    <span class="token comment">// return 123;</span>
    <span class="token comment">// // [[PromiseState]]: &quot;fulfilled&quot;</span>
    <span class="token comment">// // [[PromiseResult]]: 123</span>

    <span class="token comment">// 2.\u662FPromise\u5BF9\u8C61</span>
    <span class="token comment">// return new Promise((resolve, reject) =&gt; {</span>
    <span class="token comment">//   // Promise\u5185\u90E8\u4EFB\u52A1\u591A\u6570\u662F\u5F02\u6B65\u7684\uFF0C\u4F46\u662F\u4E5F\u53EF\u4EE5\u662F\u540C\u6B65\u4EFB\u52A1</span>
    <span class="token comment">//   // resolve(&#39;ok&#39;);</span>
    <span class="token comment">//   // // [[PromiseState]]: &quot;fulfilled&quot;</span>
    <span class="token comment">//   // // [[PromiseResult]]: &quot;ok&quot;</span>

    <span class="token comment">//   reject(&quot;error&quot;);</span>
    <span class="token comment">//   // [[PromiseState]]: &quot;rejected&quot;</span>
    <span class="token comment">//   // [[PromiseResult]]: &quot;error&quot;</span>
    <span class="token comment">// });</span>

    <span class="token comment">// 3.\u629B\u51FA\u9519\u8BEF</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u5566!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// [[PromiseState]]: &quot;rejected&quot;</span>
    <span class="token comment">// [[PromiseResult]]: Error: \u51FA\u9519\u5566!</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-then-\u65B9\u6CD5\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_3-then-\u65B9\u6CD5\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a> 3.then \u65B9\u6CD5\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528</h3><ul><li>\u6307\u5B9A\u56DE\u8C03\u53EF\u4EE5\u53EA\u6307\u5B9A\u4E00\u4E2A\u6210\u529F\u6216\u8005\u4E00\u4E2A\u5931\u8D25\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94-\u8BFB\u53D6\u591A\u4E2A\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E94-\u8BFB\u53D6\u591A\u4E2A\u6587\u4EF6" aria-hidden="true">#</a> \uFF08\u4E94\uFF09\u8BFB\u53D6\u591A\u4E2A\u6587\u4EF6</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>    \u63D2\u79E7\u8BD7
    \u5E03\u888B\u548C\u5C1A

\u624B\u628A\u9752\u79E7\u63D2\u6EE1\u7530\uFF0C
\u4F4E\u5934\u4FBF\u89C1\u6C34\u4E2D\u5929\u3002
\u5FC3\u5730\u6E05\u51C0\u65B9\u4E3A\u9053\uFF0C
\u9000\u6B65\u539F\u6765\u662F\u5411\u524D\u3002

<span class="token code keyword">    \u89C2\u4E66\u6709\u611F
    \u4F5C\u8005\uFF1A\u6731\u71B9</span>

\u534A\u4EA9\u65B9\u5858\u4E00\u9274\u5F00\uFF0C
\u5929\u5149\u4E91\u5F71\u5171\u5F98\u5F8A\u3002
\u95EE\u6E20\u90A3\u5F97\u6E05\u5982\u8BB8\uFF1F
\u4E3A\u6709\u6E90\u5934\u6D3B\u6C34\u6765\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u56DE\u8C03\u5730\u72F1\u8BFB\u53D6\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#_1-\u56DE\u8C03\u5730\u72F1\u8BFB\u53D6\u6587\u4EF6" aria-hidden="true">#</a> 1.\u56DE\u8C03\u5730\u72F1\u8BFB\u53D6\u6587\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165fs\u6A21\u5757</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u56DE\u8C03\u5730\u72F1\u8BFB\u53D6\u6587\u4EF6</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u4E3A\u5B66.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err1<span class="token punctuation">,</span> data1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u63D2\u79E7\u8BD7.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err2<span class="token punctuation">,</span> data2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u89C2\u4E66\u6709\u611F.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err3<span class="token punctuation">,</span> data3</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\r\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\r\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data3<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u4F7F\u7528-promise-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528-promise-\u5B9E\u73B0" aria-hidden="true">#</a> 2.\u4F7F\u7528 Promise \u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165fs\u6A21\u5757</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u4E3A\u5B66.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// data\u662Fbuffer\u7C7B\u578B\uFF0C\u4F7F\u7528toString\u8F6C\u4E3A\u53EF\u8BFB\u5B57\u7B26\u4E32</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// console.log(value.toString());</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u63D2\u79E7\u8BD7.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">[</span>value<span class="token punctuation">,</span> data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(value); // \u4E3A\u5B66+\u63D2\u79E7\u8BD7</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;./resources/\u89C2\u4E66\u6709\u611F.md&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u538B\u5165</span>
        value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u516D-promise-prototype-catch" tabindex="-1"><a class="header-anchor" href="#\u516D-promise-prototype-catch" aria-hidden="true">#</a> \uFF08\u516D\uFF09Promise.prototype.catch</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFAPromise\u5BF9\u8C61</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6Ep\u5BF9\u8C61\u7684\u72B6\u6001\u4E3A\u5931\u8D25\uFF0C\u5E76\u8BBE\u7F6E\u5931\u8D25\u7684\u503C</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u5566&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6307\u5B9APromise\u5931\u8D25\u7684\u56DE\u8C03</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function b(h,g){const t=i("ExternalLinkIcon");return e(),o("div",null,[u,n("ul",null,[n("li",null,[r,n("a",k,[d,c(t)]),v])]),m])}const q=p(l,[["render",b],["__file","13.html.vue"]]);export{q as default};
