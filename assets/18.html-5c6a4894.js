const n=JSON.parse('{"key":"v-b5e00d84","path":"/notes/ECMAScript6-11/18.html","title":"十八、对象方法扩展","lang":"zh-CN","frontmatter":{"title":"十八、对象方法扩展","copyright":false,"date":"2023-01-01T00:00:00.000Z","category":["笔记","ECMAScript"],"tag":["尚硅谷","李强"]},"headers":[{"level":2,"title":"（一）Object.is","slug":"一-object-is","link":"#一-object-is","children":[]},{"level":2,"title":"（二）Object.assign","slug":"二-object-assign","link":"#二-object-assign","children":[]},{"level":2,"title":"（三）Object.setPrototypeOf && Object.getPrototypeOf","slug":"三-object-setprototypeof-object-getprototypeof","link":"#三-object-setprototypeof-object-getprototypeof","children":[]}],"git":{"createdTime":1672650149000,"updatedTime":1689308920000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":0.81,"words":242},"filePathRelative":"notes/ECMAScript6-11/18.md","localizedDate":"2023年1月1日","excerpt":"<h2> （一）Object.is</h2>\\n<ul>\\n<li>判断两个值是否完全相等\\n<ul>\\n<li>与 <code>===</code> 基本相同</li>\\n<li>但是判断 <code>NaN</code> 时不同</li>\\n</ul>\\n</li>\\n<li><code>NaN</code> 与任何数作比较\\n<ul>\\n<li>在判断不相等时为 <code>true</code></li>\\n<li>其他情况都是 <code>false</code></li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">is</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">120</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">121</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">120</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">121</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// false false</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">is</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">120</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">120</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">120</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">120</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// true true</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">is</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">NaN</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">NaN</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">NaN</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">NaN</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// true false</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
