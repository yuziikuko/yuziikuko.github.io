const l=JSON.parse(`{"key":"v-4b40f3ba","path":"/notes/DuYi/04Interview/06.html","title":"六、JavaScript相关面试题汇总","lang":"zh-CN","frontmatter":{"title":"六、JavaScript相关面试题汇总","copyright":false,"date":"2023-11-20T00:00:00.000Z","category":["笔记","渡一教育","笔面试题甄选"],"tag":["谢杰"]},"headers":[{"level":2,"title":"（一）根据下面 ES6 构造函数的书写方式，要求写出 ES5 的","slug":"一-根据下面-es6-构造函数的书写方式-要求写出-es5-的","link":"#一-根据下面-es6-构造函数的书写方式-要求写出-es5-的","children":[]},{"level":2,"title":"（二）数组去重有哪些方法？（美团 19 年）","slug":"二-数组去重有哪些方法-美团-19-年","link":"#二-数组去重有哪些方法-美团-19-年","children":[]},{"level":2,"title":"（三）描述下列代码的执行结果","slug":"三-描述下列代码的执行结果","link":"#三-描述下列代码的执行结果","children":[]},{"level":2,"title":"（四）描述下列代码的执行结果","slug":"四-描述下列代码的执行结果","link":"#四-描述下列代码的执行结果","children":[]},{"level":2,"title":"（五）描述下列代码的执行结果","slug":"五-描述下列代码的执行结果","link":"#五-描述下列代码的执行结果","children":[]},{"level":2,"title":"（六）描述下列代码的执行结果","slug":"六-描述下列代码的执行结果","link":"#六-描述下列代码的执行结果","children":[]},{"level":2,"title":"（七）描述下列代码的执行结果","slug":"七-描述下列代码的执行结果","link":"#七-描述下列代码的执行结果","children":[]},{"level":2,"title":"（八）箭头函数有哪些特点","slug":"八-箭头函数有哪些特点","link":"#八-箭头函数有哪些特点","children":[]},{"level":2,"title":"（九）说一说类的继承","slug":"九-说一说类的继承","link":"#九-说一说类的继承","children":[]},{"level":2,"title":"（十）new 操作符都做了哪些事？","slug":"十-new-操作符都做了哪些事","link":"#十-new-操作符都做了哪些事","children":[]},{"level":2,"title":"（十一）call、apply、bind 的区别 ？","slug":"十一-call、apply、bind-的区别","link":"#十一-call、apply、bind-的区别","children":[]},{"level":2,"title":"（十二）事件循环机制（宏任务、微任务）","slug":"十二-事件循环机制-宏任务、微任务","link":"#十二-事件循环机制-宏任务、微任务","children":[]},{"level":2,"title":"（十三）你了解 node 中的事件循环机制吗？node11 版本以后有什么改变","slug":"十三-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变","link":"#十三-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变","children":[]},{"level":2,"title":"（十四）什么是函数柯里化？","slug":"十四-什么是函数柯里化","link":"#十四-什么是函数柯里化","children":[]},{"level":2,"title":"（十五）promise.all 方法的使用场景？数组中必须每一项都是 promise 对象吗？不是 promise 对象会如何处理 ？","slug":"十五-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理","link":"#十五-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理","children":[]},{"level":2,"title":"（十六）this 的指向哪几种 ？","slug":"十六-this-的指向哪几种","link":"#十六-this-的指向哪几种","children":[]},{"level":2,"title":"（十七）JS 中继承实现的几种方式","slug":"十七-js-中继承实现的几种方式","link":"#十七-js-中继承实现的几种方式","children":[]},{"level":2,"title":"（十八）什么是事件监听","slug":"十八-什么是事件监听","link":"#十八-什么是事件监听","children":[]},{"level":2,"title":"（十九）什么是 js 的闭包？有什么作用？","slug":"十九-什么是-js-的闭包-有什么作用","link":"#十九-什么是-js-的闭包-有什么作用","children":[]},{"level":2,"title":"（二十）事件委托以及冒泡原理","slug":"二十-事件委托以及冒泡原理","link":"#二十-事件委托以及冒泡原理","children":[]},{"level":2,"title":"（二十一）let const var 的区别？什么是块级作用域？如何用？","slug":"二十一-let-const-var-的区别-什么是块级作用域-如何用","link":"#二十一-let-const-var-的区别-什么是块级作用域-如何用","children":[]},{"level":2,"title":"（二十二）ES5 的方法实现块级作用域（立即执行函数） ES6 呢？","slug":"二十二-es5-的方法实现块级作用域-立即执行函数-es6-呢","link":"#二十二-es5-的方法实现块级作用域-立即执行函数-es6-呢","children":[]},{"level":2,"title":"（二十三）ES6 箭头函数的特性","slug":"二十三-es6-箭头函数的特性","link":"#二十三-es6-箭头函数的特性","children":[]},{"level":2,"title":"（二十四）箭头函数与普通函数的区别 ？","slug":"二十四-箭头函数与普通函数的区别","link":"#二十四-箭头函数与普通函数的区别","children":[]},{"level":2,"title":"（二十五）JS 的基本数据类型有哪些？基本数据类型和引用数据类型的区别","slug":"二十五-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别","link":"#二十五-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别","children":[]},{"level":2,"title":"（二十六）NaN 是什么的缩写","slug":"二十六-nan-是什么的缩写","link":"#二十六-nan-是什么的缩写","children":[]},{"level":2,"title":"（二十七）JS 的作用域类型","slug":"二十七-js-的作用域类型","link":"#二十七-js-的作用域类型","children":[]},{"level":2,"title":"（二十八）undefined==null 返回的结果是什么？undefined 与 null 的区别在哪？","slug":"二十八-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪","link":"#二十八-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪","children":[]},{"level":2,"title":"（二十九）写一个函数判断变量类型","slug":"二十九-写一个函数判断变量类型","link":"#二十九-写一个函数判断变量类型","children":[]},{"level":2,"title":"（三十）js 的异步处理函数","slug":"三十-js-的异步处理函数","link":"#三十-js-的异步处理函数","children":[]},{"level":2,"title":"（三十一）defer 与 async 的区别","slug":"三十一-defer-与-async-的区别","link":"#三十一-defer-与-async-的区别","children":[]},{"level":2,"title":"（三十二）浏览器事件循环和任务队列","slug":"三十二-浏览器事件循环和任务队列","link":"#三十二-浏览器事件循环和任务队列","children":[]},{"level":2,"title":"（三十三）原型与原型链 （美团 19 年）","slug":"三十三-原型与原型链-美团-19-年","link":"#三十三-原型与原型链-美团-19-年","children":[]},{"level":2,"title":"（三十四）作用域与作用域链 （美团 19 年）","slug":"三十四-作用域与作用域链-美团-19-年","link":"#三十四-作用域与作用域链-美团-19-年","children":[]},{"level":2,"title":"（三十五）闭包及应用场景以及闭包缺点 （美团 19 年）","slug":"三十五-闭包及应用场景以及闭包缺点-美团-19-年","link":"#三十五-闭包及应用场景以及闭包缺点-美团-19-年","children":[]},{"level":2,"title":"（三十六）继承方式 （美团 19 年）","slug":"三十六-继承方式-美团-19-年","link":"#三十六-继承方式-美团-19-年","children":[]},{"level":2,"title":"（三十七）原始值与引用值 （美团 19 年）","slug":"三十七-原始值与引用值-美团-19-年","link":"#三十七-原始值与引用值-美团-19-年","children":[]},{"level":2,"title":"（三十八）描述下列代码的执行结果","slug":"三十八-描述下列代码的执行结果","link":"#三十八-描述下列代码的执行结果","children":[]},{"level":2,"title":"（三十九）如何判断数组或对象（美团 19 年）","slug":"三十九-如何判断数组或对象-美团-19-年","link":"#三十九-如何判断数组或对象-美团-19-年","children":[]},{"level":2,"title":"（四十）对象深拷贝与浅拷贝，单独问了 Object.assign（美团 19 年）","slug":"四十-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19-年","link":"#四十-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19-年","children":[]},{"level":2,"title":"（四十二）说说 instanceof 原理，并回答下面的题目（美团 19 年）","slug":"四十二-说说-instanceof-原理-并回答下面的题目-美团-19-年","link":"#四十二-说说-instanceof-原理-并回答下面的题目-美团-19-年","children":[]},{"level":2,"title":"（四十三）内存泄漏（美团 19 年）","slug":"四十三-内存泄漏-美团-19-年","link":"#四十三-内存泄漏-美团-19-年","children":[]},{"level":2,"title":"（四十四）ES6 新增哪些东西？让你自己说（美团 19 年）","slug":"四十四-es6-新增哪些东西-让你自己说-美团-19-年","link":"#四十四-es6-新增哪些东西-让你自己说-美团-19-年","children":[]},{"level":2,"title":"（四十五）weakmap、weakset（美团 19 年）","slug":"四十五-weakmap、weakset-美团-19-年","link":"#四十五-weakmap、weakset-美团-19-年","children":[]},{"level":2,"title":"（四十六）为什么 ES6 会新增 Promise（美团 19 年）","slug":"四十六-为什么-es6-会新增-promise-美团-19-年","link":"#四十六-为什么-es6-会新增-promise-美团-19-年","children":[]},{"level":2,"title":"（四十七）ES5 实现继承？（虾皮）","slug":"四十七-es5-实现继承-虾皮","link":"#四十七-es5-实现继承-虾皮","children":[]},{"level":2,"title":"（四十八）科里化？（搜狗）","slug":"四十八-科里化-搜狗","link":"#四十八-科里化-搜狗","children":[]},{"level":2,"title":"（四十九）防抖和节流？（虾皮）","slug":"四十九-防抖和节流-虾皮","link":"#四十九-防抖和节流-虾皮","children":[]},{"level":2,"title":"（五十）闭包？（好未来---探讨了 40 分钟）","slug":"五十-闭包-好未来-探讨了-40-分钟","link":"#五十-闭包-好未来-探讨了-40-分钟","children":[]},{"level":2,"title":"（五十一）原型和原型链？（字节）","slug":"五十一-原型和原型链-字节","link":"#五十一-原型和原型链-字节","children":[]},{"level":2,"title":"（五十二）排序算法---（时间复杂度、空间复杂度）","slug":"五十二-排序算法-时间复杂度、空间复杂度","link":"#五十二-排序算法-时间复杂度、空间复杂度","children":[]},{"level":2,"title":"（五十三）浏览器事件循环和 node 事件循环（搜狗）","slug":"五十三-浏览器事件循环和-node-事件循环-搜狗","link":"#五十三-浏览器事件循环和-node-事件循环-搜狗","children":[]},{"level":2,"title":"（五十四）闭包的好处","slug":"五十四-闭包的好处","link":"#五十四-闭包的好处","children":[]},{"level":2,"title":"（五十五）let、const、var 的区别","slug":"五十五-let、const、var-的区别","link":"#五十五-let、const、var-的区别","children":[]},{"level":2,"title":"（五十六）闭包、作用域（可以扩充到作用域链）","slug":"五十六-闭包、作用域-可以扩充到作用域链","link":"#五十六-闭包、作用域-可以扩充到作用域链","children":[]},{"level":2,"title":"（五十七）Promise","slug":"五十七-promise","link":"#五十七-promise","children":[]},{"level":2,"title":"（五十八）实现一个函数,对一个 url 进行请求,失败就再次请求,超过最大次数就走失败回调,任何一次成功都走成功回调","slug":"五十八-实现一个函数-对一个-url-进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调","link":"#五十八-实现一个函数-对一个-url-进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调","children":[]},{"level":2,"title":"（五十九）冒泡排序","slug":"五十九-冒泡排序","link":"#五十九-冒泡排序","children":[]},{"level":2,"title":"（六十）数组降维","slug":"六十-数组降维","link":"#六十-数组降维","children":[]},{"level":2,"title":"（六十一）call apply bind","slug":"六十一-call-apply-bind","link":"#六十一-call-apply-bind","children":[]},{"level":2,"title":"（六十二）promise 代码题","slug":"六十二-promise-代码题","link":"#六十二-promise-代码题","children":[]},{"level":2,"title":"（六十三）proxy 是实现代理，可以改变 js 底层的实现方式, 然后说了一下和 Object.defineProperty 的区别","slug":"六十三-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别","link":"#六十三-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别","children":[]},{"level":2,"title":"（六十四）使用 ES5 与 ES6 分别实现继承","slug":"六十四-使用-es5-与-es6-分别实现继承","link":"#六十四-使用-es5-与-es6-分别实现继承","children":[]},{"level":2,"title":"（六十五）深拷贝","slug":"六十五-深拷贝","link":"#六十五-深拷贝","children":[]},{"level":2,"title":"（六十六）async 与 await 的作用","slug":"六十六-async-与-await-的作用","link":"#六十六-async-与-await-的作用","children":[]},{"level":2,"title":"（六十七）数据的基础类型（原始类型）有哪些","slug":"六十七-数据的基础类型-原始类型-有哪些","link":"#六十七-数据的基础类型-原始类型-有哪些","children":[]},{"level":2,"title":"（六十八）typeof null 返回结果","slug":"六十八-typeof-null-返回结果","link":"#六十八-typeof-null-返回结果","children":[]},{"level":2,"title":"（六十九）对变量进行类型判断的方式有哪些","slug":"六十九-对变量进行类型判断的方式有哪些","link":"#六十九-对变量进行类型判断的方式有哪些","children":[]},{"level":2,"title":"（七十）typeof 与 instanceof 的区别？ instanceof 是如何实现？","slug":"七十-typeof-与-instanceof-的区别-instanceof-是如何实现","link":"#七十-typeof-与-instanceof-的区别-instanceof-是如何实现","children":[]},{"level":2,"title":"（七十一）引用类型有哪些，有什么特点","slug":"七十一-引用类型有哪些-有什么特点","link":"#七十一-引用类型有哪些-有什么特点","children":[]},{"level":2,"title":"（七十二）如何得到一个变量的类型---指函数封装实现","slug":"七十二-如何得到一个变量的类型-指函数封装实现","link":"#七十二-如何得到一个变量的类型-指函数封装实现","children":[]},{"level":2,"title":"（七十三）什么是作用域、闭包","slug":"七十三-什么是作用域、闭包","link":"#七十三-什么是作用域、闭包","children":[]},{"level":2,"title":"（七十四）闭包的缺点是什么？闭包的应用场景有哪些？怎么销毁闭包？","slug":"七十四-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包","link":"#七十四-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包","children":[]},{"level":2,"title":"（七十五）JS 的垃圾回收站机制","slug":"七十五-js-的垃圾回收站机制","link":"#七十五-js-的垃圾回收站机制","children":[]},{"level":2,"title":"（七十六）什么是作用域链、原型链","slug":"七十六-什么是作用域链、原型链","link":"#七十六-什么是作用域链、原型链","children":[]},{"level":2,"title":"（七十七）new 一个构造函数发生了什么","slug":"七十七-new-一个构造函数发生了什么","link":"#七十七-new-一个构造函数发生了什么","children":[]},{"level":2,"title":"（七十八）对一个构造函数实例化后. 它的原型链指向什么","slug":"七十八-对一个构造函数实例化后-它的原型链指向什么","link":"#七十八-对一个构造函数实例化后-它的原型链指向什么","children":[]},{"level":2,"title":"（七十九）什么是变量提升","slug":"七十九-什么是变量提升","link":"#七十九-什么是变量提升","children":[]},{"level":2,"title":"（八十）== 和 === 的区别是什么","slug":"八十-和-的区别是什么","link":"#八十-和-的区别是什么","children":[]},{"level":2,"title":"（八十一）Object.is 方法比较的是什么","slug":"八十一-object-is-方法比较的是什么","link":"#八十一-object-is-方法比较的是什么","children":[]},{"level":2,"title":"（八十二）基础数据类型和引用数据类型，哪个是保存在栈内存中？哪个是在堆内存中？","slug":"八十二-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中","link":"#八十二-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中","children":[]},{"level":2,"title":"（八十三）箭头函数解决了什么问题？","slug":"八十三-箭头函数解决了什么问题","link":"#八十三-箭头函数解决了什么问题","children":[]},{"level":2,"title":"（八十四）new 一个箭头函数后，它的 this 指向什么？","slug":"八十四-new-一个箭头函数后-它的-this-指向什么","link":"#八十四-new-一个箭头函数后-它的-this-指向什么","children":[]},{"level":2,"title":"（八十五）promise 的其他方法有用过吗？如 all、race。请说下这两者的区别","slug":"八十五-promise-的其他方法有用过吗-如-all、race。请说下这两者的区别","link":"#八十五-promise-的其他方法有用过吗-如-all、race。请说下这两者的区别","children":[]},{"level":2,"title":"（八十六）class 是如何实现的","slug":"八十六-class-是如何实现的","link":"#八十六-class-是如何实现的","children":[]},{"level":2,"title":"（八十七）let、const、var 的区别","slug":"八十七-let、const、var-的区别","link":"#八十七-let、const、var-的区别","children":[]},{"level":2,"title":"（八十八）ES6 中模块化导入和导出与 common.js 有什么区别","slug":"八十八-es6-中模块化导入和导出与-common-js-有什么区别","link":"#八十八-es6-中模块化导入和导出与-common-js-有什么区别","children":[]},{"level":2,"title":"（八十九）说一下普通函数和箭头函数的区别","slug":"八十九-说一下普通函数和箭头函数的区别","link":"#八十九-说一下普通函数和箭头函数的区别","children":[]},{"level":2,"title":"（九十）说一下 promise 和 async 和 await 什么关系","slug":"九十-说一下-promise-和-async-和-await-什么关系","link":"#九十-说一下-promise-和-async-和-await-什么关系","children":[]},{"level":2,"title":"（九十一）说一下你学习过的有关 ES6 的知识点","slug":"九十一-说一下你学习过的有关-es6-的知识点","link":"#九十一-说一下你学习过的有关-es6-的知识点","children":[]},{"level":2,"title":"（九十二）了解过 js 中 arguments 吗？接收的是实参还是形参？","slug":"九十二-了解过-js-中-arguments-吗-接收的是实参还是形参","link":"#九十二-了解过-js-中-arguments-吗-接收的是实参还是形参","children":[]},{"level":2,"title":"（九十三）ES6 相比于 ES5 有什么变化","slug":"九十三-es6-相比于-es5-有什么变化","link":"#九十三-es6-相比于-es5-有什么变化","children":[]},{"level":2,"title":"（九十四）强制类型转换方法有哪些？","slug":"九十四-强制类型转换方法有哪些","link":"#九十四-强制类型转换方法有哪些","children":[]},{"level":2,"title":"（九十五）纯函数","slug":"九十五-纯函数","link":"#九十五-纯函数","children":[]},{"level":2,"title":"（九十六）JS 模块化","slug":"九十六-js-模块化","link":"#九十六-js-模块化","children":[]},{"level":2,"title":"（九十七）看过 jquery 源码吗？","slug":"九十七-看过-jquery-源码吗","link":"#九十七-看过-jquery-源码吗","children":[]},{"level":2,"title":"（九十八）说一下 js 中的 this","slug":"九十八-说一下-js-中的-this","link":"#九十八-说一下-js-中的-this","children":[]},{"level":2,"title":"（九十九）apply call bind 区别，手写","slug":"九十九-apply-call-bind-区别-手写","link":"#九十九-apply-call-bind-区别-手写","children":[]},{"level":2,"title":"（一百）手写 reduce flat","slug":"一百-手写-reduce-flat","link":"#一百-手写-reduce-flat","children":[]},{"level":2,"title":"（一百零一）== 隐试转换的原理？是怎么转换的","slug":"一百零一-隐试转换的原理-是怎么转换的","link":"#一百零一-隐试转换的原理-是怎么转换的","children":[]},{"level":2,"title":"（一百零二）['1', '2', '3'].map(parseInt) 结果是什么，为什么 （字节）","slug":"一百零二-1-2-3-map-parseint-结果是什么-为什么-字节","link":"#一百零二-1-2-3-map-parseint-结果是什么-为什么-字节","children":[]},{"level":2,"title":"（一百零三）防抖，节流是什么，如何实现 （字节）","slug":"一百零三-防抖-节流是什么-如何实现-字节","link":"#一百零三-防抖-节流是什么-如何实现-字节","children":[]},{"level":2,"title":"（一百零四）介绍下 Set、Map、WeakSet 和 WeakMap 的区别（字节）","slug":"一百零四-介绍下-set、map、weakset-和-weakmap-的区别-字节","link":"#一百零四-介绍下-set、map、weakset-和-weakmap-的区别-字节","children":[]},{"level":2,"title":"（一百零五）setTimeout、Promise、Async/Await 的区别（字节）","slug":"一百零五-settimeout、promise、async-await-的区别-字节","link":"#一百零五-settimeout、promise、async-await-的区别-字节","children":[{"level":3,"title":"106. Promise 构造函数是同步执行还是异步执行，那么 then 方法呢？（字节）","slug":"_106-promise-构造函数是同步执行还是异步执行-那么-then-方法呢-字节","link":"#_106-promise-构造函数是同步执行还是异步执行-那么-then-方法呢-字节","children":[]}]},{"level":2,"title":"（一百零七）情人节福利题，如何实现一个 new （字节）","slug":"一百零七-情人节福利题-如何实现一个-new-字节","link":"#一百零七-情人节福利题-如何实现一个-new-字节","children":[]},{"level":2,"title":"（一百零八）实现一个 sleep 函数（字节）","slug":"一百零八-实现一个-sleep-函数-字节","link":"#一百零八-实现一个-sleep-函数-字节","children":[]},{"level":2,"title":"（一百零九）使用 sort() 对数组 [3, 15, 8, 29, 102, 22] 进行排序，输出结果 （字节）","slug":"一百零九-使用-sort-对数组-3-15-8-29-102-22-进行排序-输出结果-字节","link":"#一百零九-使用-sort-对数组-3-15-8-29-102-22-进行排序-输出结果-字节","children":[]},{"level":2,"title":"（一百一十）实现 5.add(3).sub(2) (百度)","slug":"一百一十-实现-5-add-3-sub-2-百度","link":"#一百一十-实现-5-add-3-sub-2-百度","children":[]},{"level":2,"title":"（一百一十一）给定两个数组，求交集","slug":"一百一十一-给定两个数组-求交集","link":"#一百一十一-给定两个数组-求交集","children":[]},{"level":2,"title":"（一百一十二）为什么普通 for 循环的性能远远高于 forEach 的性能，请解释其中的原因。","slug":"一百一十二-为什么普通-for-循环的性能远远高于-foreach-的性能-请解释其中的原因。","link":"#一百一十二-为什么普通-for-循环的性能远远高于-foreach-的性能-请解释其中的原因。","children":[]},{"level":2,"title":"（一百一十三）实现一个字符串匹配算法，从长度为 n 的字符串 S 中，查找是否存在字符串 T，T 的长度是 m，若存在返回所在位置。","slug":"一百一十三-实现一个字符串匹配算法-从长度为-n-的字符串-s-中-查找是否存在字符串-t-t-的长度是-m-若存在返回所在位置。","link":"#一百一十三-实现一个字符串匹配算法-从长度为-n-的字符串-s-中-查找是否存在字符串-t-t-的长度是-m-若存在返回所在位置。","children":[]},{"level":2,"title":"（一百一十四）使用 JavaScript Proxy 实现简单的数据绑定","slug":"一百一十四-使用-javascript-proxy-实现简单的数据绑定","link":"#一百一十四-使用-javascript-proxy-实现简单的数据绑定","children":[]},{"level":2,"title":"（一百一十五）数组里面有 10 万个数据，取第一个元素和第 10 万个元素的时间相差多少（字节）","slug":"一百一十五-数组里面有-10-万个数据-取第一个元素和第-10-万个元素的时间相差多少-字节","link":"#一百一十五-数组里面有-10-万个数据-取第一个元素和第-10-万个元素的时间相差多少-字节","children":[]},{"level":2,"title":"（一百一十六）打印出 1~10000 以内的对称数","slug":"一百一十六-打印出-1-10000-以内的对称数","link":"#一百一十六-打印出-1-10000-以内的对称数","children":[]},{"level":2,"title":"（一百一十七）简述同步和异步的区别","slug":"一百一十七-简述同步和异步的区别","link":"#一百一十七-简述同步和异步的区别","children":[]},{"level":2,"title":"（一百一十八）怎么添加、移除、复制、创建、和查找节点","slug":"一百一十八-怎么添加、移除、复制、创建、和查找节点","link":"#一百一十八-怎么添加、移除、复制、创建、和查找节点","children":[]},{"level":2,"title":"（一百一十九）实现一个函数 clone 可以对 Javascript 中的五种主要数据类型（Number、string、 Object、Array、Boolean）进行复制","slug":"一百一十九-实现一个函数-clone-可以对-javascript-中的五种主要数据类型-number、string、-object、array、boolean-进行复制","link":"#一百一十九-实现一个函数-clone-可以对-javascript-中的五种主要数据类型-number、string、-object、array、boolean-进行复制","children":[]},{"level":2,"title":"（一百二十）如何消除一个数组里面重复的元素","slug":"一百二十-如何消除一个数组里面重复的元素","link":"#一百二十-如何消除一个数组里面重复的元素","children":[]},{"level":2,"title":"（一百二十一）写一个返回闭包的函数","slug":"一百二十一-写一个返回闭包的函数","link":"#一百二十一-写一个返回闭包的函数","children":[]},{"level":2,"title":"（一百二十二）使用递归完成 1 到 100 的累加","slug":"一百二十二-使用递归完成-1-到-100-的累加","link":"#一百二十二-使用递归完成-1-到-100-的累加","children":[]},{"level":2,"title":"（一百二十三）Javascript 有哪几种数据类型","slug":"一百二十三-javascript-有哪几种数据类型","link":"#一百二十三-javascript-有哪几种数据类型","children":[]},{"level":2,"title":"（一百二十四）如何判断数据类型","slug":"一百二十四-如何判断数据类型","link":"#一百二十四-如何判断数据类型","children":[]},{"level":2,"title":"（一百二十五）console.log(1+'2')和 console.log(1-'2')的打印结果","slug":"一百二十五-console-log-1-2-和-console-log-1-2-的打印结果","link":"#一百二十五-console-log-1-2-和-console-log-1-2-的打印结果","children":[]},{"level":2,"title":"（一百二十六）JS 的事件委托是什么，原理是什么","slug":"一百二十六-js-的事件委托是什么-原理是什么","link":"#一百二十六-js-的事件委托是什么-原理是什么","children":[]},{"level":2,"title":"（一百二十七）如何改变函数内部的 this 指针的指向","slug":"一百二十七-如何改变函数内部的-this-指针的指向","link":"#一百二十七-如何改变函数内部的-this-指针的指向","children":[]},{"level":2,"title":"（一百二十八）JS 延迟加载的方式有哪些？","slug":"一百二十八-js-延迟加载的方式有哪些","link":"#一百二十八-js-延迟加载的方式有哪些","children":[]},{"level":2,"title":"（一百二十九）说说严格模式的限制","slug":"一百二十九-说说严格模式的限制","link":"#一百二十九-说说严格模式的限制","children":[]},{"level":2,"title":"（一百三十）attribute 和 property 的区别是什么？","slug":"一百三十-attribute-和-property-的区别是什么","link":"#一百三十-attribute-和-property-的区别是什么","children":[]},{"level":2,"title":"（一百三十一）ES6 能写 class 么，为什么会出现 class 这种东西?","slug":"一百三十一-es6-能写-class-么-为什么会出现-class-这种东西","link":"#一百三十一-es6-能写-class-么-为什么会出现-class-这种东西","children":[]},{"level":2,"title":"（一百三十二）常见兼容性问题","slug":"一百三十二-常见兼容性问题","link":"#一百三十二-常见兼容性问题","children":[]},{"level":2,"title":"（一百三十三）函数防抖节流的原理","slug":"一百三十三-函数防抖节流的原理","link":"#一百三十三-函数防抖节流的原理","children":[]},{"level":2,"title":"（一百三十四）原始类型有哪几种？null 是对象吗？","slug":"一百三十四-原始类型有哪几种-null-是对象吗","link":"#一百三十四-原始类型有哪几种-null-是对象吗","children":[]},{"level":2,"title":"（一百三十五）为什么 console.log(0.2+0.1==0.3) // false","slug":"一百三十五-为什么-console-log-0-2-0-1-0-3-false","link":"#一百三十五-为什么-console-log-0-2-0-1-0-3-false","children":[]},{"level":2,"title":"（一百三十六）说一下 JS 中类型转换的规则？","slug":"一百三十六-说一下-js-中类型转换的规则","link":"#一百三十六-说一下-js-中类型转换的规则","children":[]},{"level":2,"title":"（一百三十七）深拷贝和浅拷贝的区别？如何实现","slug":"一百三十七-深拷贝和浅拷贝的区别-如何实现","link":"#一百三十七-深拷贝和浅拷贝的区别-如何实现","children":[]},{"level":2,"title":"（一百三十八）如何判断 this？箭头函数的 this 是什么","slug":"一百三十八-如何判断-this-箭头函数的-this-是什么","link":"#一百三十八-如何判断-this-箭头函数的-this-是什么","children":[]},{"level":2,"title":"（一百三十九）call、apply 以及 bind 函数内部实现是怎么样的","slug":"一百三十九-call、apply-以及-bind-函数内部实现是怎么样的","link":"#一百三十九-call、apply-以及-bind-函数内部实现是怎么样的","children":[]},{"level":2,"title":"（一百四十）为什么会出现 setTimeout 倒计时误差？如何减少","slug":"一百四十-为什么会出现-settimeout-倒计时误差-如何减少","link":"#一百四十-为什么会出现-settimeout-倒计时误差-如何减少","children":[]},{"level":2,"title":"（一百四十一）谈谈你对 JS 执行上下文栈和作用域链的理解","slug":"一百四十一-谈谈你对-js-执行上下文栈和作用域链的理解","link":"#一百四十一-谈谈你对-js-执行上下文栈和作用域链的理解","children":[]},{"level":2,"title":"（一百四十二）new 的原理是什么？通过 new 的方式创建对象和通过字面量创建有什么区别？","slug":"一百四十二-new-的原理是什么-通过-new-的方式创建对象和通过字面量创建有什么区别","link":"#一百四十二-new-的原理是什么-通过-new-的方式创建对象和通过字面量创建有什么区别","children":[]},{"level":2,"title":"（一百四十三）prototype 和 __proto__ 区别是什么？","slug":"一百四十三-prototype-和-proto-区别是什么","link":"#一百四十三-prototype-和-proto-区别是什么","children":[]},{"level":2,"title":"（一百四十四）使用 ES5 实现一个继承？","slug":"一百四十四-使用-es5-实现一个继承","link":"#一百四十四-使用-es5-实现一个继承","children":[]},{"level":2,"title":"（一百四十五）取数组的最大值（ES5、ES6）","slug":"一百四十五-取数组的最大值-es5、es6","link":"#一百四十五-取数组的最大值-es5、es6","children":[]},{"level":2,"title":"（一百四十六）ES6 新的特性有哪些？","slug":"一百四十六-es6-新的特性有哪些","link":"#一百四十六-es6-新的特性有哪些","children":[]},{"level":2,"title":"（一百四十七）Promise 有几种状态, Promise 有什么优缺点 ?","slug":"一百四十七-promise-有几种状态-promise-有什么优缺点","link":"#一百四十七-promise-有几种状态-promise-有什么优缺点","children":[]},{"level":2,"title":"（一百四十八）Promise 构造函数是同步还是异步执行，then 呢 ? Promise 如何实现 then 处理 ?","slug":"一百四十八-promise-构造函数是同步还是异步执行-then-呢-promise-如何实现-then-处理","link":"#一百四十八-promise-构造函数是同步还是异步执行-then-呢-promise-如何实现-then-处理","children":[]},{"level":2,"title":"（一百四十九）Promise 和 setTimeout 的区别 ?","slug":"一百四十九-promise-和-settimeout-的区别","link":"#一百四十九-promise-和-settimeout-的区别","children":[]},{"level":2,"title":"（一百五十）如何实现 Promise.all ?","slug":"一百五十-如何实现-promise-all","link":"#一百五十-如何实现-promise-all","children":[]},{"level":2,"title":"（一百五十一）如何实现 Promise.finally ?","slug":"一百五十一-如何实现-promise-finally","link":"#一百五十一-如何实现-promise-finally","children":[]},{"level":2,"title":"（一百五十二）如何判断 img 加载完成","slug":"一百五十二-如何判断-img-加载完成","link":"#一百五十二-如何判断-img-加载完成","children":[]},{"level":2,"title":"（一百五十三）如何阻止冒泡？","slug":"一百五十三-如何阻止冒泡","link":"#一百五十三-如何阻止冒泡","children":[]},{"level":2,"title":"（一百五十四）如何阻止默认事件？","slug":"一百五十四-如何阻止默认事件","link":"#一百五十四-如何阻止默认事件","children":[]},{"level":2,"title":"（一百五十五）如何用原生 js 给一个按钮绑定两个 onclick 事件？","slug":"一百五十五-如何用原生-js-给一个按钮绑定两个-onclick-事件","link":"#一百五十五-如何用原生-js-给一个按钮绑定两个-onclick-事件","children":[]},{"level":2,"title":"（一百五十六）拖拽会用到哪些事件","slug":"一百五十六-拖拽会用到哪些事件","link":"#一百五十六-拖拽会用到哪些事件","children":[]},{"level":2,"title":"（一百五十七）document.write 和 innerHTML 的区别","slug":"一百五十七-document-write-和-innerhtml-的区别","link":"#一百五十七-document-write-和-innerhtml-的区别","children":[]},{"level":2,"title":"（一百五十八）jQuery 的事件委托方法 bind 、live、delegate、one、on 之间有什么区别？","slug":"一百五十八-jquery-的事件委托方法-bind-、live、delegate、one、on-之间有什么区别","link":"#一百五十八-jquery-的事件委托方法-bind-、live、delegate、one、on-之间有什么区别","children":[]},{"level":2,"title":"（一百五十九）$(document).ready 方法和 window.onload 有什么区别？","slug":"一百五十九-document-ready-方法和-window-onload-有什么区别","link":"#一百五十九-document-ready-方法和-window-onload-有什么区别","children":[]},{"level":2,"title":"（一百六十）jquery 中.post()提交有区别吗？","slug":"一百六十-jquery-中-post-提交有区别吗","link":"#一百六十-jquery-中-post-提交有区别吗","children":[]},{"level":2,"title":"（一百六十一）await async 如何实现 （阿里）","slug":"一百六十一-await-async-如何实现-阿里","link":"#一百六十一-await-async-如何实现-阿里","children":[]},{"level":2,"title":"（一百六十二）clientWidth,offsetWidth,scrollWidth 的区别","slug":"一百六十二-clientwidth-offsetwidth-scrollwidth-的区别","link":"#一百六十二-clientwidth-offsetwidth-scrollwidth-的区别","children":[]},{"level":2,"title":"（一百六十三）产生一个不重复的随机数组","slug":"一百六十三-产生一个不重复的随机数组","link":"#一百六十三-产生一个不重复的随机数组","children":[]},{"level":2,"title":"（一百六十四）continue 和 break 的区别","slug":"一百六十四-continue-和-break-的区别","link":"#一百六十四-continue-和-break-的区别","children":[]},{"level":2,"title":"（一百六十五）如何在 jquery 上扩展插件，以及内部原理（腾讯）","slug":"一百六十五-如何在-jquery-上扩展插件-以及内部原理-腾讯","link":"#一百六十五-如何在-jquery-上扩展插件-以及内部原理-腾讯","children":[]},{"level":2,"title":"（一百六十六）async/await 如何捕获错误","slug":"一百六十六-async-await-如何捕获错误","link":"#一百六十六-async-await-如何捕获错误","children":[]},{"level":2,"title":"（一百六十七）Proxy 对比 Object.defineProperty 的优势","slug":"一百六十七-proxy-对比-object-defineproperty-的优势","link":"#一百六十七-proxy-对比-object-defineproperty-的优势","children":[]},{"level":2,"title":"（一百六十八）原型链，可以改变原型链的规则吗?","slug":"一百六十八-原型链-可以改变原型链的规则吗","link":"#一百六十八-原型链-可以改变原型链的规则吗","children":[]},{"level":2,"title":"（一百六十九）讲一讲继承的所有方式都有什么？手写一个寄生组合式继承","slug":"一百六十九-讲一讲继承的所有方式都有什么-手写一个寄生组合式继承","link":"#一百六十九-讲一讲继承的所有方式都有什么-手写一个寄生组合式继承","children":[]},{"level":2,"title":"（一百七十）JS 基本数据类型有哪些？栈和堆有什么区别，为什么要这样存储。（快手）","slug":"一百七十-js-基本数据类型有哪些-栈和堆有什么区别-为什么要这样存储。-快手","link":"#一百七十-js-基本数据类型有哪些-栈和堆有什么区别-为什么要这样存储。-快手","children":[]},{"level":2,"title":"（一百七十一）setTimeout(() ={}, 0) 什么时候执行","slug":"一百七十一-settimeout-0-什么时候执行","link":"#一百七十一-settimeout-0-什么时候执行","children":[]},{"level":2,"title":"（一百七十二）js 有函数重载吗（网易）","slug":"一百七十二-js-有函数重载吗-网易","link":"#一百七十二-js-有函数重载吗-网易","children":[]},{"level":2,"title":"（一百七十三）给你一个数组，计算每个数出现的次数，如果每个数组返回的数都是独一无二的就返回 true 相反则返回的 flase","slug":"一百七十三-给你一个数组-计算每个数出现的次数-如果每个数组返回的数都是独一无二的就返回-true-相反则返回的-flase","link":"#一百七十三-给你一个数组-计算每个数出现的次数-如果每个数组返回的数都是独一无二的就返回-true-相反则返回的-flase","children":[]},{"level":2,"title":"（一百七十四）封装一个能够统计重复的字符的函数，例如 aaabbbdddddfff 转化为 3a3b5d3f","slug":"一百七十四-封装一个能够统计重复的字符的函数-例如-aaabbbdddddfff-转化为-3a3b5d3f","link":"#一百七十四-封装一个能够统计重复的字符的函数-例如-aaabbbdddddfff-转化为-3a3b5d3f","children":[]},{"level":2,"title":"（一百七十五）写出代码的执行结果，并解释为什么？","slug":"一百七十五-写出代码的执行结果-并解释为什么","link":"#一百七十五-写出代码的执行结果-并解释为什么","children":[]},{"level":2,"title":"（一百七十六）写出代码的执行结果，并解释为什么？","slug":"一百七十六-写出代码的执行结果-并解释为什么","link":"#一百七十六-写出代码的执行结果-并解释为什么","children":[]},{"level":2,"title":"（一百七十七）写出下面程序的打印顺序，并简要说明原因","slug":"一百七十七-写出下面程序的打印顺序-并简要说明原因","link":"#一百七十七-写出下面程序的打印顺序-并简要说明原因","children":[]},{"level":2,"title":"（一百七十八）javascript 中什么是伪数组？如何将伪数组转换为标准数组","slug":"一百七十八-javascript-中什么是伪数组-如何将伪数组转换为标准数组","link":"#一百七十八-javascript-中什么是伪数组-如何将伪数组转换为标准数组","children":[]},{"level":2,"title":"（一百七十九）array 和 object 的区别","slug":"一百七十九-array-和-object-的区别","link":"#一百七十九-array-和-object-的区别","children":[]},{"level":2,"title":"（一百八十）jquery 事件委托","slug":"一百八十-jquery-事件委托","link":"#一百八十-jquery-事件委托","children":[]},{"level":2,"title":"（一百八十一）JS 基本数据类型","slug":"一百八十一-js-基本数据类型","link":"#一百八十一-js-基本数据类型","children":[]},{"level":2,"title":"（一百八十二）请实现一个模块 math，支持链式调用math.add(2,4).minus(3).times(2);","slug":"一百八十二-请实现一个模块-math-支持链式调用math-add-2-4-minus-3-times-2","link":"#一百八十二-请实现一个模块-math-支持链式调用math-add-2-4-minus-3-times-2","children":[]},{"level":2,"title":"（一百八十三）请简述 ES6 代码转成 ES5 代码的实现思路。","slug":"一百八十三-请简述-es6-代码转成-es5-代码的实现思路。","link":"#一百八十三-请简述-es6-代码转成-es5-代码的实现思路。","children":[]},{"level":2,"title":"（一百八十四）下列代码的执行结果","slug":"一百八十四-下列代码的执行结果","link":"#一百八十四-下列代码的执行结果","children":[]},{"level":2,"title":"（一百八十五）JS 有哪些内置对象？","slug":"一百八十五-js-有哪些内置对象","link":"#一百八十五-js-有哪些内置对象","children":[]},{"level":2,"title":"（一百八十六）DOM 怎样添加、移除、移动、复制、创建和查找节点","slug":"一百八十六-dom-怎样添加、移除、移动、复制、创建和查找节点","link":"#一百八十六-dom-怎样添加、移除、移动、复制、创建和查找节点","children":[]},{"level":2,"title":"（一百八十七）eval 是做什么的？","slug":"一百八十七-eval-是做什么的","link":"#一百八十七-eval-是做什么的","children":[]},{"level":2,"title":"（一百八十八）null 和 undefined 的区别？","slug":"一百八十八-null-和-undefined-的区别","link":"#一百八十八-null-和-undefined-的区别","children":[]},{"level":2,"title":"（一百八十九）new 操作符具体干了什么呢？","slug":"一百八十九-new-操作符具体干了什么呢","link":"#一百八十九-new-操作符具体干了什么呢","children":[]},{"level":2,"title":"（一百九十）去除字符串中的空格","slug":"一百九十-去除字符串中的空格","link":"#一百九十-去除字符串中的空格","children":[]},{"level":2,"title":"（一百九十一）常见的内存泄露，以及解决方案","slug":"一百九十一-常见的内存泄露-以及解决方案","link":"#一百九十一-常见的内存泄露-以及解决方案","children":[]},{"level":2,"title":"（一百九十二）箭头函数和普通函数里面的 this 有什么区别","slug":"一百九十二-箭头函数和普通函数里面的-this-有什么区别","link":"#一百九十二-箭头函数和普通函数里面的-this-有什么区别","children":[]},{"level":2,"title":"（一百九十三）设计⼀个⽅法(isPalindrom)以判断是否回⽂(颠倒后的字符串和原来的字符串⼀样为回⽂)","slug":"一百九十三-设计一个方法-ispalindrom-以判断是否回文-颠倒后的字符串和原来的字符串一样为回文","link":"#一百九十三-设计一个方法-ispalindrom-以判断是否回文-颠倒后的字符串和原来的字符串一样为回文","children":[]},{"level":2,"title":"（一百九十四）设计⼀个⽅法(findMaxDuplicateChar)以统计字符串中出现最多次数的字符","slug":"一百九十四-设计一个方法-findmaxduplicatechar-以统计字符串中出现最多次数的字符","link":"#一百九十四-设计一个方法-findmaxduplicatechar-以统计字符串中出现最多次数的字符","children":[]},{"level":2,"title":"（一百九十五）设计⼀段代码，使得通过点击按钮可以在 span 中显示⽂本框中输⼊的值","slug":"一百九十五-设计一段代码-使得通过点击按钮可以在-span-中显示文本框中输入的值","link":"#一百九十五-设计一段代码-使得通过点击按钮可以在-span-中显示文本框中输入的值","children":[]},{"level":2,"title":"（一百九十六）map 和 forEach 的区别？","slug":"一百九十六-map-和-foreach-的区别","link":"#一百九十六-map-和-foreach-的区别","children":[]},{"level":2,"title":"（一百九十七）Array 的常用方法","slug":"一百九十七-array-的常用方法","link":"#一百九十七-array-的常用方法","children":[]},{"level":2,"title":"（一百九十八）数组去重的多种实现方式","slug":"一百九十八-数组去重的多种实现方式","link":"#一百九十八-数组去重的多种实现方式","children":[]},{"level":2,"title":"（一百九十九）什么是预解析（预编译）","slug":"一百九十九-什么是预解析-预编译","link":"#一百九十九-什么是预解析-预编译","children":[]},{"level":2,"title":"（二百）原始值类型和引用值类型的区别是什么？","slug":"二百-原始值类型和引用值类型的区别是什么","link":"#二百-原始值类型和引用值类型的区别是什么","children":[]},{"level":2,"title":"（二百零一）冒泡排序的思路，不用 sort","slug":"二百零一-冒泡排序的思路-不用-sort","link":"#二百零一-冒泡排序的思路-不用-sort","children":[]},{"level":2,"title":"（二百零二）symbol 用途","slug":"二百零二-symbol-用途","link":"#二百零二-symbol-用途","children":[]},{"level":2,"title":"（二百零三）什么是函数式编程，应用场景是什么","slug":"二百零三-什么是函数式编程-应用场景是什么","link":"#二百零三-什么是函数式编程-应用场景是什么","children":[]},{"level":2,"title":"（二百零四）事件以及事件相关的兼容性问题","slug":"二百零四-事件以及事件相关的兼容性问题","link":"#二百零四-事件以及事件相关的兼容性问题","children":[]},{"level":2,"title":"（二百零五）JS 小数不精准，如何计算","slug":"二百零五-js-小数不精准-如何计算","link":"#二百零五-js-小数不精准-如何计算","children":[]},{"level":2,"title":"（二百零六）写一个 mySetInterVal(fn, a, b)，每次间隔 a,a+b,a+2b 的时间，然后写一个 myClear，停止上面的 mySetInterVal","slug":"二百零六-写一个-mysetinterval-fn-a-b-每次间隔-a-a-b-a-2b-的时间-然后写一个-myclear-停止上面的-mysetinterval","link":"#二百零六-写一个-mysetinterval-fn-a-b-每次间隔-a-a-b-a-2b-的时间-然后写一个-myclear-停止上面的-mysetinterval","children":[]},{"level":2,"title":"（二百零七）合并二维有序数组成一维有序数组，归并排序的思路","slug":"二百零七-合并二维有序数组成一维有序数组-归并排序的思路","link":"#二百零七-合并二维有序数组成一维有序数组-归并排序的思路","children":[]},{"level":2,"title":"（二百零八）给定一个字符串，请你找出其中不含有重复字符的最长子串的长度。","slug":"二百零八-给定一个字符串-请你找出其中不含有重复字符的最长子串的长度。","link":"#二百零八-给定一个字符串-请你找出其中不含有重复字符的最长子串的长度。","children":[]},{"level":2,"title":"（二百零九）有一堆整数，请把他们分成三份，确保每一份和尽量相等（11，42，23，4，5，6 4 5 6 11 23 42 56 78 90）(滴滴 2020)","slug":"二百零九-有一堆整数-请把他们分成三份-确保每一份和尽量相等-11-42-23-4-5-6-4-5-6-11-23-42-56-78-90-滴滴-2020","link":"#二百零九-有一堆整数-请把他们分成三份-确保每一份和尽量相等-11-42-23-4-5-6-4-5-6-11-23-42-56-78-90-滴滴-2020","children":[]},{"level":2,"title":"（二百一十）手写发布订阅（头条 2020）","slug":"二百一十-手写发布订阅-头条-2020","link":"#二百一十-手写发布订阅-头条-2020","children":[]},{"level":2,"title":"（二百一十一）手写用 ES6proxy 如何实现 arr[-1] 的访问（滴滴 2020）","slug":"二百一十一-手写用-es6proxy-如何实现-arr-1-的访问-滴滴-2020","link":"#二百一十一-手写用-es6proxy-如何实现-arr-1-的访问-滴滴-2020","children":[]},{"level":2,"title":"（二百一十二）下列代码执行结果","slug":"二百一十二-下列代码执行结果","link":"#二百一十二-下列代码执行结果","children":[]},{"level":2,"title":"（二百一十三）Number() 的存储空间是多大？如果后台发送了一个超过最大自己的数字怎么办","slug":"二百一十三-number-的存储空间是多大-如果后台发送了一个超过最大自己的数字怎么办","link":"#二百一十三-number-的存储空间是多大-如果后台发送了一个超过最大自己的数字怎么办","children":[]},{"level":2,"title":"（二百一十四）事件是如何实现的？(字节 2020)","slug":"二百一十四-事件是如何实现的-字节-2020","link":"#二百一十四-事件是如何实现的-字节-2020","children":[]},{"level":2,"title":"（二百一十五）下列代码执行结果","slug":"二百一十五-下列代码执行结果","link":"#二百一十五-下列代码执行结果","children":[]},{"level":2,"title":"（二百一十六）判断数组的方法，请分别介绍它们之间的区别和优劣","slug":"二百一十六-判断数组的方法-请分别介绍它们之间的区别和优劣","link":"#二百一十六-判断数组的方法-请分别介绍它们之间的区别和优劣","children":[]},{"level":2,"title":"（二百一十七）JavaScript 中的数组和函数在内存中是如何存储的？","slug":"二百一十七-javascript-中的数组和函数在内存中是如何存储的","link":"#二百一十七-javascript-中的数组和函数在内存中是如何存储的","children":[]},{"level":2,"title":"（二百一十八）JavaScript 是如何运行的？解释型语言和编译型语言的差异是什么？","slug":"二百一十八-javascript-是如何运行的-解释型语言和编译型语言的差异是什么","link":"#二百一十八-javascript-是如何运行的-解释型语言和编译型语言的差异是什么","children":[]},{"level":2,"title":"（二百一十九）列举你所了解的编程范式？","slug":"二百一十九-列举你所了解的编程范式","link":"#二百一十九-列举你所了解的编程范式","children":[]},{"level":2,"title":"（二百二十）什么是面向切面（AOP）的编程？","slug":"二百二十-什么是面向切面-aop-的编程","link":"#二百二十-什么是面向切面-aop-的编程","children":[]},{"level":2,"title":"（二百二十一）JavaScript 中的 const 数组可以进行 push 操作吗？为什么？","slug":"二百二十一-javascript-中的-const-数组可以进行-push-操作吗-为什么","link":"#二百二十一-javascript-中的-const-数组可以进行-push-操作吗-为什么","children":[]},{"level":2,"title":"（二百二十二）JavaScript 中对象的属性描述符有哪些？分别有什么作用？","slug":"二百二十二-javascript-中对象的属性描述符有哪些-分别有什么作用","link":"#二百二十二-javascript-中对象的属性描述符有哪些-分别有什么作用","children":[]},{"level":2,"title":"（二百二十三）JavaScript 中 console 有哪些 api ?","slug":"二百二十三-javascript-中-console-有哪些-api","link":"#二百二十三-javascript-中-console-有哪些-api","children":[]},{"level":2,"title":"（二百二十四）简单对比一下 Callback、Promise、Generator、Async 几个异步 API 的优劣？","slug":"二百二十四-简单对比一下-callback、promise、generator、async-几个异步-api-的优劣","link":"#二百二十四-简单对比一下-callback、promise、generator、async-几个异步-api-的优劣","children":[]},{"level":2,"title":"（二百二十五）Object.defineProperty 有哪几个参数？各自都有什么作用","slug":"二百二十五-object-defineproperty-有哪几个参数-各自都有什么作用","link":"#二百二十五-object-defineproperty-有哪几个参数-各自都有什么作用","children":[]},{"level":2,"title":"（二百二十六）Object.defineProperty 和 ES6 的 Proxy 有什么区别？","slug":"二百二十六-object-defineproperty-和-es6-的-proxy-有什么区别","link":"#二百二十六-object-defineproperty-和-es6-的-proxy-有什么区别","children":[]},{"level":2,"title":"（二百二十七）intanceof 操作符的实现原理及实现","slug":"二百二十七-intanceof-操作符的实现原理及实现","link":"#二百二十七-intanceof-操作符的实现原理及实现","children":[]},{"level":2,"title":"（二百二十八）强制类型转换规则？","slug":"二百二十八-强制类型转换规则","link":"#二百二十八-强制类型转换规则","children":[]},{"level":2,"title":"（二百二十九）Object.is( ) 与比较操作符 “=”、“” 的区别","slug":"二百二十九-object-is-与比较操作符-、-的区别","link":"#二百二十九-object-is-与比较操作符-、-的区别","children":[]},{"level":2,"title":"（二百三十）+ 操作符什么时候用于字符串的拼接？","slug":"二百三十-操作符什么时候用于字符串的拼接","link":"#二百三十-操作符什么时候用于字符串的拼接","children":[]},{"level":2,"title":"（二百三十一）object.assign 和扩展运算法是深拷贝还是浅拷贝","slug":"二百三十一-object-assign-和扩展运算法是深拷贝还是浅拷贝","link":"#二百三十一-object-assign-和扩展运算法是深拷贝还是浅拷贝","children":[]},{"level":2,"title":"（二百三十二）const 对象的属性可以修改吗","slug":"二百三十二-const-对象的属性可以修改吗","link":"#二百三十二-const-对象的属性可以修改吗","children":[]},{"level":2,"title":"（二百三十三）如果 new 一个箭头函数的会怎么样","slug":"二百三十三-如果-new-一个箭头函数的会怎么样","link":"#二百三十三-如果-new-一个箭头函数的会怎么样","children":[]},{"level":2,"title":"（二百三十四）扩展运算符的作用及使用场景","slug":"二百三十四-扩展运算符的作用及使用场景","link":"#二百三十四-扩展运算符的作用及使用场景","children":[]},{"level":2,"title":"（二百三十五）Proxy 可以实现什么功能？","slug":"二百三十五-proxy-可以实现什么功能","link":"#二百三十五-proxy-可以实现什么功能","children":[]},{"level":2,"title":"（二百三十六）对象与数组的解构的理解","slug":"二百三十六-对象与数组的解构的理解","link":"#二百三十六-对象与数组的解构的理解","children":[]},{"level":2,"title":"（二百三十七）如何提取高度嵌套的对象里的指定属性？","slug":"二百三十七-如何提取高度嵌套的对象里的指定属性","link":"#二百三十七-如何提取高度嵌套的对象里的指定属性","children":[]},{"level":2,"title":"（二百三十八）Unicode、UTF-8、UTF-16、UTF-32 的区别？","slug":"二百三十八-unicode、utf-8、utf-16、utf-32-的区别","link":"#二百三十八-unicode、utf-8、utf-16、utf-32-的区别","children":[]},{"level":2,"title":"（二百三十九）为什么函数的 arguments 参数是类数组而不是数组？如何遍历类数组?","slug":"二百三十九-为什么函数的-arguments-参数是类数组而不是数组-如何遍历类数组","link":"#二百三十九-为什么函数的-arguments-参数是类数组而不是数组-如何遍历类数组","children":[]},{"level":2,"title":"（二百四十）escape、encodeURI、encodeURIComponent 的区别","slug":"二百四十-escape、encodeuri、encodeuricomponent-的区别","link":"#二百四十-escape、encodeuri、encodeuricomponent-的区别","children":[]},{"level":2,"title":"（二百四十一）use strict 是什么意思 ? 使用它区别是什么？","slug":"二百四十一-use-strict-是什么意思-使用它区别是什么","link":"#二百四十一-use-strict-是什么意思-使用它区别是什么","children":[]},{"level":2,"title":"（二百四十二）for...in 和 for...of 的区别","slug":"二百四十二-for-in-和-for-of-的区别","link":"#二百四十二-for-in-和-for-of-的区别","children":[]},{"level":2,"title":"（二百四十三）ajax、axios、fetch 的区别","slug":"二百四十三-ajax、axios、fetch-的区别","link":"#二百四十三-ajax、axios、fetch-的区别","children":[]},{"level":2,"title":"（二百四十四）下面代码的输出是什么？（D）","slug":"二百四十四-下面代码的输出是什么-d","link":"#二百四十四-下面代码的输出是什么-d","children":[]},{"level":2,"title":"（二百四十五）下面代码的输出是什么？（ C ）","slug":"二百四十五-下面代码的输出是什么-c","link":"#二百四十五-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百四十六）下面代码的输出是什么？（ B ）","slug":"二百四十六-下面代码的输出是什么-b","link":"#二百四十六-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百四十七）下面代码的输出是什么？（A）","slug":"二百四十七-下面代码的输出是什么-a","link":"#二百四十七-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百四十八）哪个选项是不正确的？（ A ）","slug":"二百四十八-哪个选项是不正确的-a","link":"#二百四十八-哪个选项是不正确的-a","children":[]},{"level":2,"title":"（二百四十九）下面代码的输出是什么？（ A ）","slug":"二百四十九-下面代码的输出是什么-a","link":"#二百四十九-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百五十）下面代码的输出是什么？（ C ）","slug":"二百五十-下面代码的输出是什么-c","link":"#二百五十-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百五十一）下面代码的输出是什么？（ D ）","slug":"二百五十一-下面代码的输出是什么-d","link":"#二百五十一-下面代码的输出是什么-d","children":[]},{"level":2,"title":"（二百五十二）下面代码的输出是什么？（ A ）","slug":"二百五十二-下面代码的输出是什么-a","link":"#二百五十二-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百五十三）当我们执行以下代码时会发生什么？（ A ）","slug":"二百五十三-当我们执行以下代码时会发生什么-a","link":"#二百五十三-当我们执行以下代码时会发生什么-a","children":[]},{"level":2,"title":"（二百五十四）下面代码的输出是什么？（ A ）","slug":"二百五十四-下面代码的输出是什么-a","link":"#二百五十四-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百五十五）下面代码的输出是什么？（ A ）","slug":"二百五十五-下面代码的输出是什么-a","link":"#二百五十五-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百五十六）事件传播的三个阶段是什么？（ D ）","slug":"二百五十六-事件传播的三个阶段是什么-d","link":"#二百五十六-事件传播的三个阶段是什么-d","children":[]},{"level":2,"title":"（二百五十七）下面代码的输出是什么？（ C ）","slug":"二百五十七-下面代码的输出是什么-c","link":"#二百五十七-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百五十八）下面代码的输出是什么？（ C ）","slug":"二百五十八-下面代码的输出是什么-c","link":"#二百五十八-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百五十九）下面代码的输出是什么？（ B ）","slug":"二百五十九-下面代码的输出是什么-b","link":"#二百五十九-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百六十）下面代码的输出是什么？（ C ）","slug":"二百六十-下面代码的输出是什么-c","link":"#二百六十-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百六十一）下面代码的输出是什么？（ C ）","slug":"二百六十一-下面代码的输出是什么-c","link":"#二百六十一-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百六十二）下面代码的输出是什么？（ C ）","slug":"二百六十二-下面代码的输出是什么-c","link":"#二百六十二-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百六十三）下面代码的输出是什么？（ A ）","slug":"二百六十三-下面代码的输出是什么-a","link":"#二百六十三-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百六十四）cool_secret 可以访问多长时间？（ B ）","slug":"二百六十四-cool-secret-可以访问多长时间-b","link":"#二百六十四-cool-secret-可以访问多长时间-b","children":[]},{"level":2,"title":"（二百六十五）下面代码的输出是什么？（ B ）","slug":"二百六十五-下面代码的输出是什么-b","link":"#二百六十五-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百六十六）下面代码的输出是什么？（ C ）","slug":"二百六十六-下面代码的输出是什么-c","link":"#二百六十六-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百六十七）下面代码的输出是什么？（ C ）","slug":"二百六十七-下面代码的输出是什么-c","link":"#二百六十七-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百六十八）下面代码的输出是什么？（ C ）","slug":"二百六十八-下面代码的输出是什么-c","link":"#二百六十八-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百六十九）下面代码的输出是什么？（ A ）","slug":"二百六十九-下面代码的输出是什么-a","link":"#二百六十九-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百七十）下面代码的输出是什么？（ B ）","slug":"二百七十-下面代码的输出是什么-b","link":"#二百七十-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百七十一）下面代码的输出是什么？（ B ）","slug":"二百七十一-下面代码的输出是什么-b","link":"#二百七十一-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百七十二）单击按钮时 event.target 是什么？（ C ）","slug":"二百七十二-单击按钮时-event-target-是什么-c","link":"#二百七十二-单击按钮时-event-target-是什么-c","children":[]},{"level":2,"title":"（二百七十三）单击下面的 html 片段打印的内容是什么？（ A ）","slug":"二百七十三-单击下面的-html-片段打印的内容是什么-a","link":"#二百七十三-单击下面的-html-片段打印的内容是什么-a","children":[]},{"level":2,"title":"（二百七十四）下面代码的输出是什么？（ D ）","slug":"二百七十四-下面代码的输出是什么-d","link":"#二百七十四-下面代码的输出是什么-d","children":[]},{"level":2,"title":"（二百七十五）下面代码的输出是什么？（ B ）","slug":"二百七十五-下面代码的输出是什么-b","link":"#二百七十五-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百七十六）下面这些值哪些是假值？（ A ）","slug":"二百七十六-下面这些值哪些是假值-a","link":"#二百七十六-下面这些值哪些是假值-a","children":[]},{"level":2,"title":"（二百七十七）下面代码的输出是什么？（ B ）","slug":"二百七十七-下面代码的输出是什么-b","link":"#二百七十七-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百七十八）下面代码的输出是什么？（ C ）","slug":"二百七十八-下面代码的输出是什么-c","link":"#二百七十八-下面代码的输出是什么-c","children":[]},{"level":2,"title":"（二百七十九）下面代码的输出是什么？（ A ）","slug":"二百七十九-下面代码的输出是什么-a","link":"#二百七十九-下面代码的输出是什么-a","children":[]},{"level":2,"title":"（二百八十）JavaScript 中的所有内容都是…（ A ）","slug":"二百八十-javascript-中的所有内容都是-a","link":"#二百八十-javascript-中的所有内容都是-a","children":[]},{"level":2,"title":"（二百八十一）下面代码的输出是什么?","slug":"二百八十一-下面代码的输出是什么","link":"#二百八十一-下面代码的输出是什么","children":[]},{"level":2,"title":"（二百八十二）下面代码的输出是什么？（ B ）","slug":"二百八十二-下面代码的输出是什么-b","link":"#二百八十二-下面代码的输出是什么-b","children":[]},{"level":2,"title":"（二百八十三）setInterval 方法的返回值什么？（ A ）","slug":"二百八十三-setinterval-方法的返回值什么-a","link":"#二百八十三-setinterval-方法的返回值什么-a","children":[]},{"level":2,"title":"（二百八十四）下面代码的返回值是什么？（ A ）","slug":"二百八十四-下面代码的返回值是什么-a","link":"#二百八十四-下面代码的返回值是什么-a","children":[]},{"level":2,"title":"（二百八十五）document.write 和 innerHTML 有哪些区别？","slug":"二百八十五-document-write-和-innerhtml-有哪些区别","link":"#二百八十五-document-write-和-innerhtml-有哪些区别","children":[]},{"level":2,"title":"（二百八十六）假设有两个变量 a 和 b，他们的值都是数字，如何在不借用第三个变量的情况下，将两个变量的值对调？","slug":"二百八十六-假设有两个变量-a-和-b-他们的值都是数字-如何在不借用第三个变量的情况下-将两个变量的值对调","link":"#二百八十六-假设有两个变量-a-和-b-他们的值都是数字-如何在不借用第三个变量的情况下-将两个变量的值对调","children":[]},{"level":2,"title":"（二百八十七）前端为什么提倡模块化开发？","slug":"二百八十七-前端为什么提倡模块化开发","link":"#二百八十七-前端为什么提倡模块化开发","children":[]},{"level":2,"title":"（二百八十八）请解释 JSONP 的原理，并用代码描述其过程。","slug":"二百八十八-请解释-jsonp-的原理-并用代码描述其过程。","link":"#二百八十八-请解释-jsonp-的原理-并用代码描述其过程。","children":[]},{"level":2,"title":"（二百八十九）列举几种 JavaScript 中数据类型的强制转换和隐式转换。","slug":"二百八十九-列举几种-javascript-中数据类型的强制转换和隐式转换。","link":"#二百八十九-列举几种-javascript-中数据类型的强制转换和隐式转换。","children":[]},{"level":2,"title":"（二百九十）分析以下代码的执行结果并解释为什么。","slug":"二百九十-分析以下代码的执行结果并解释为什么。","link":"#二百九十-分析以下代码的执行结果并解释为什么。","children":[]},{"level":2,"title":"（二百九十一）分析以下代码的执行结果并解释为什么。","slug":"二百九十一-分析以下代码的执行结果并解释为什么。","link":"#二百九十一-分析以下代码的执行结果并解释为什么。","children":[]},{"level":2,"title":"（二百九十二）下面的代码打印什么内容？为什么？","slug":"二百九十二-下面的代码打印什么内容-为什么","link":"#二百九十二-下面的代码打印什么内容-为什么","children":[]},{"level":2,"title":"（二百九十三）下面代码中，a 在什么情况下会执行输出语句打印 1 ？","slug":"二百九十三-下面代码中-a-在什么情况下会执行输出语句打印-1","link":"#二百九十三-下面代码中-a-在什么情况下会执行输出语句打印-1","children":[]},{"level":2,"title":"（二百九十四）介绍前端模块化的发展。","slug":"二百九十四-介绍前端模块化的发展。","link":"#二百九十四-介绍前端模块化的发展。","children":[]},{"level":2,"title":"（二百九十五）请指出 document.onload 和 document.ready 两个事件的区别","slug":"二百九十五-请指出-document-onload-和-document-ready-两个事件的区别","link":"#二百九十五-请指出-document-onload-和-document-ready-两个事件的区别","children":[]},{"level":2,"title":"（二百九十六）表单元素的 readonly 和 disabled 两个属性有什么区别？","slug":"二百九十六-表单元素的-readonly-和-disabled-两个属性有什么区别","link":"#二百九十六-表单元素的-readonly-和-disabled-两个属性有什么区别","children":[]},{"level":2,"title":"（二百九十七）列举几种你知道的数组排序的方法。","slug":"二百九十七-列举几种你知道的数组排序的方法。","link":"#二百九十七-列举几种你知道的数组排序的方法。","children":[]},{"level":2,"title":"（二百九十八）区分什么是“客户区坐标”、“页面坐标”、“屏幕坐标”？","slug":"二百九十八-区分什么是-客户区坐标-、-页面坐标-、-屏幕坐标","link":"#二百九十八-区分什么是-客户区坐标-、-页面坐标-、-屏幕坐标","children":[]},{"level":2,"title":"（二百九十九）如何编写高性能的 JavaScript？","slug":"二百九十九-如何编写高性能的-javascript","link":"#二百九十九-如何编写高性能的-javascript","children":[]},{"level":2,"title":"（三百）下面的代码输出什么？","slug":"三百-下面的代码输出什么","link":"#三百-下面的代码输出什么","children":[]}],"git":{"createdTime":1700799372000,"updatedTime":1700799372000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":1}]},"readingTime":{"minutes":193.73,"words":58119},"filePathRelative":"notes/DuYi/04Interview/06.md","localizedDate":"2023年11月20日","excerpt":"<h2> （一）根据下面 ES6 构造函数的书写方式，要求写出 ES5 的</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Example</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> fun <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span>\\n      console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">fun</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> e <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Example</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{l as data};
