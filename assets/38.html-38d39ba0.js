import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as p,a as n,b as i,d as c,e as s}from"./app-f4db3521.js";const l="/assets/vuex3-804b3f17.png",u={},r=s('<h2 id="一-理解-vuex" tabindex="-1"><a class="header-anchor" href="#一-理解-vuex" aria-hidden="true">#</a> （一）理解 Vuex</h2><h3 id="_1-vuex-是什么" tabindex="-1"><a class="header-anchor" href="#_1-vuex-是什么" aria-hidden="true">#</a> 1.Vuex 是什么</h3><ul><li><p>专门在 Vue 中实现 <strong>集中式状态（数据）管理</strong> 的一个 Vue 插件。</p><ul><li><p>集中式：类似于一名老师给一个班级的学生上课，老师只讲一遍，但是有一群学生的思维在接收。</p></li><li><p>分布式：与集中式相对。</p></li></ul></li><li><p>对 Vue 应用中多个组件的 <strong>共享状态</strong> 进行集中式的管理（读/写）。</p></li><li><p>也是一种组件间通信的方式，且适用于任意组件间通信。</p></li></ul><h3 id="_2-github-地址" tabindex="-1"><a class="header-anchor" href="#_2-github-地址" aria-hidden="true">#</a> 2.GitHub 地址</h3>',4),d={href:"https://github.com/vuejs/vuex",target:"_blank",rel:"noopener noreferrer"},v=s('<h3 id="_3-什么时候使用-vuex" tabindex="-1"><a class="header-anchor" href="#_3-什么时候使用-vuex" aria-hidden="true">#</a> 3.什么时候使用 Vuex</h3><p>多个组件需要共享数据时使用。</p><ul><li><p>多个组件依赖于同一状态。</p></li><li><p>来自不同组件的行为需要变更同一状态。</p></li></ul><h2 id="二-vuex-工作原理" tabindex="-1"><a class="header-anchor" href="#二-vuex-工作原理" aria-hidden="true">#</a> （二）Vuex 工作原理</h2><p>API 由 Store 统一管理。</p><p><img src="'+l+`" alt=""></p><h2 id="三-搭建-vuex-环境" tabindex="-1"><a class="header-anchor" href="#三-搭建-vuex-环境" aria-hidden="true">#</a> （三）搭建 Vuex 环境</h2><h3 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装" aria-hidden="true">#</a> 1.安装</h3><ul><li><p>在 2022 年 02 月 07 日，Vue3 成为了默认版本，即<code>npm i vue</code>直接安装的是 Vue3。同时 Vuex 也更新到了 v4，即<code>npm i vuex</code>安装的是 Vuex4。</p></li><li><p>Vuex4 只能在 Vue3 中使用，Vue2 项目需要安装 Vuex3。</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i vuex@3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-创建文件src-store-index-js" tabindex="-1"><a class="header-anchor" href="#_2-创建文件src-store-index-js" aria-hidden="true">#</a> 2.创建文件<code>src/store/index.js</code></h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入Vue核心库</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 引入Vuex</span>
<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&quot;vuex&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 使用Vuex插件</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 准备Actions对象——用于响应组件中用户的动作</span>
<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 准备Mutations对象——用于操作state中的数据</span>
<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 准备State对象——用于存储具体的数据</span>
<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 创建并暴露Store</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  actions<span class="token punctuation">,</span>
  mutations<span class="token punctuation">,</span>
  state<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-在main-js中创建-vm-时传入-store-配置项" tabindex="-1"><a class="header-anchor" href="#_3-在main-js中创建-vm-时传入-store-配置项" aria-hidden="true">#</a> 3.在<code>main.js</code>中创建 vm 时传入 store 配置项</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span><span class="token operator">...</span>
<span class="token comment">// 引入Store</span>
<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span><span class="token punctuation">;</span>
<span class="token operator">...</span><span class="token operator">...</span>

<span class="token comment">// 创建Vue实例对象---vm</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>
  store
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function k(m,h){const a=t("ExternalLinkIcon");return o(),p("div",null,[r,n("p",null,[n("a",d,[i("https://github.com/vuejs/vuex"),c(a)])]),v])}const _=e(u,[["render",k],["__file","38.html.vue"]]);export{_ as default};
