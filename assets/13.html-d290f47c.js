import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as t,e}from"./app-1240ea23.js";const l="/assets/第三方库01-cab32995.png",u="/assets/第三方库02-a822877b.png",r="/assets/第三方库03-fa3cf32b.png",d="/assets/第三方库04-309ca6ca.png",k="/assets/第三方库05-24727764.png",m="/assets/第三方库06-b761e14d.png",h={},v=e('<p><img src="'+l+'" alt=""></p><h2 id="一-第三方库概览" tabindex="-1"><a class="header-anchor" href="#一-第三方库概览" aria-hidden="true">#</a> （一）第三方库概览</h2><h3 id="_1-官网下载使用" tabindex="-1"><a class="header-anchor" href="#_1-官网下载使用" aria-hidden="true">#</a> 1.官网下载使用</h3>',3),b=n("thead",null,[n("tr",null,[n("th",null,"名称"),n("th",null,"文档"),n("th",null,"一句话介绍")])],-1),_=n("td",null,"jQuery",-1),g={href:"https://jquery.com/",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),x={href:"https://jquery.cuishifeng.cn/",target:"_blank",rel:"noopener noreferrer"},y=n("td",null,"让操作 DOM 变得更容易",-1),j=n("td",null,"Lodash",-1),q={href:"https://lodash.com/docs",target:"_blank",rel:"noopener noreferrer"},w=n("br",null,null,-1),M={href:"https://www.lodashjs.com/",target:"_blank",rel:"noopener noreferrer"},C=n("td",null,"你能想到的工具函数它都帮你写了",-1),D=n("td",null,"Animate.css",-1),T={href:"https://animate.style/",target:"_blank",rel:"noopener noreferrer"},A=n("td",null,"常见的 CSS 动画效果都帮你写好了",-1),S=n("td",null,"Axios",-1),O={href:"https://axios-http.com/zh/",target:"_blank",rel:"noopener noreferrer"},N=n("td",null,"让网络请求变得更简单",-1),Q=n("td",null,"MockJS",-1),$={href:"http://mockjs.com/",target:"_blank",rel:"noopener noreferrer"},U=n("td",null,"ajax 拦截和模拟数据生成",-1),z=n("td",null,"Moment",-1),I={href:"https://momentjs.com/",target:"_blank",rel:"noopener noreferrer"},L=n("br",null,null,-1),E={href:"http://momentjs.cn/",target:"_blank",rel:"noopener noreferrer"},J=n("td",null,"让日期处理更容易",-1),H=n("td",null,"ECharts",-1),G={href:"https://echarts.apache.org/zh",target:"_blank",rel:"noopener noreferrer"},R=n("td",null,"搞定所有你能想到的图表",-1),B=n("td",null,"animejs",-1),X={href:"https://animejs.com/",target:"_blank",rel:"noopener noreferrer"},Y=n("td",null,"简单好用的 JS 动画库",-1),P=n("td",null,"editormd",-1),V={href:"https://pandao.github.io/editor.md",target:"_blank",rel:"noopener noreferrer"},Z=n("td",null,"markdown 编辑器",-1),F=n("td",null,"validate",-1),K={href:"http://validatejs.org/",target:"_blank",rel:"noopener noreferrer"},W=n("td",null,"简单好用的 JS 对象验证库",-1),nn=n("td",null,"date-fns",-1),sn={href:"https://date-fns.org/",target:"_blank",rel:"noopener noreferrer"},an=n("td",null,[s("功能和 Moment 几乎相同"),n("br"),s("支持 tree shaking")],-1),tn=n("td",null,"zepto",-1),en={href:"https://zeptojs.com/",target:"_blank",rel:"noopener noreferrer"},pn=n("td",null,[s("功能和 jQuery 几乎相同"),n("br"),s("对移动端支持更好"),n("br"),s("包体积更小")],-1),on=n("td",null,"nprogress",-1),cn={href:"https://github.com/rstacruz/nprogress",target:"_blank",rel:"noopener noreferrer"},ln=n("td",null,[s("简单好用的进度条插件"),n("br"),s("YouTube 就使用的是它")],-1),un=n("td",null,"qs",-1),rn={href:"https://github.com/ljharb/qs",target:"_blank",rel:"noopener noreferrer"},dn=n("td",null,"一个用于解析 url 的小工具",-1),kn=n("h3",{id:"_2-cdn-在线使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-cdn-在线使用","aria-hidden":"true"},"#"),s(" 2.CDN 在线使用")],-1),mn=n("li",null,"CDN 称之为内容分发网络（Content Delivery Network）",-1),hn=n("li",null,"提供很多的服务器，用户访问时，自动就近选择服务器给用户提供资源",-1),vn={href:"https://www.bootcdn.cn/",target:"_blank",rel:"noopener noreferrer"},bn=e('<p><img src="'+u+`" alt=""></p><h2 id="二-jquery" tabindex="-1"><a class="header-anchor" href="#二-jquery" aria-hidden="true">#</a> （二）jQuery</h2><blockquote><p>官网：https://jquery.com/</p><br><p>中文网：https://jquery.cuishifeng.cn/</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js</p></blockquote><ul><li>针对 DOM 的操作： <ul><li>获取</li><li>创建</li><li>监听</li><li>改变</li></ul></li><li>jQuery 可以让上面整个过程更加轻松</li></ul><h3 id="_1-jquery-函数" tabindex="-1"><a class="header-anchor" href="#_1-jquery-函数" aria-hidden="true">#</a> 1.jQuery 函数</h3><ul><li>jQuery 提供了一个函数，名称为 <code>jQuery</code> ，也可以写作 <code>$</code></li><li>该函数提供了强大的 DOM 控制能力</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取类样式为container的所有DOM</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取container后面的兄弟元素，元素类样式必须包含list</span>
container<span class="token punctuation">.</span><span class="token function">nextAll</span><span class="token punctuation">(</span><span class="token string">&quot;.list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 删除元素</span>
container<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 找到所有类样式为list元素的后代li元素，给它们加上类样式item</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.list li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 为所有p元素添加一些style</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;#ff0011&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 注册DOMContentLoaded事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 给所有li元素注册点击事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建一个a元素，设置其内容为link，然后将它作为子元素追加到类样式为.list的元素中</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;a&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">&quot;.list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-jquery-对象和-dom-对象" tabindex="-1"><a class="header-anchor" href="#_2-jquery-对象和-dom-对象" aria-hidden="true">#</a> 2.jQuery 对象和 DOM 对象</h3><ul><li>通过 jQuery 得到的元素是一个 jQuery 对象，而不是传统的 DOM</li><li>jQuery 对象是一个伪数组</li><li>jQuery 对象和 DOM 之间可以互相转换</li></ul><p><img src="`+r+`" alt=""></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// jQuery -&gt; DOM</span>
jQuery对象<span class="token punctuation">[</span>索引<span class="token punctuation">]</span><span class="token punctuation">;</span>
jQuery对象<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>索引<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// DOM -&gt; jQuery</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token constant">DOM</span>对象<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-官网文档中的目录" tabindex="-1"><a class="header-anchor" href="#_3-官网文档中的目录" aria-hidden="true">#</a> 3.官网文档中的目录</h3><table><thead><tr><th>目录名</th><th>内容</th></tr></thead><tbody><tr><td>选择器</td><td>选择器是一个字符串，用于描述要选中哪些元素</td></tr><tr><td>筛选</td><td>在当前 jQuery 对象的基础上，进一步选中元素</td></tr><tr><td>文档处理</td><td>更改 HTML 文档结构<br>删除元素、清空元素内容、改变元素之间的关系</td></tr><tr><td>属性</td><td>控制元素属性<br>修改类样式、读取和设置文本框的 value、读取和设置 img 的 src</td></tr><tr><td>css</td><td>控制元素 style 样式<br>改变字体颜色、设置背景、获取元素尺寸、获取和设置滚动位置</td></tr><tr><td>事件</td><td>监听元素的事件<br>监听文档加载完成、监听元素被点击</td></tr><tr><td>ajax</td><td>jQuery 封装了 XHR，使 ajax 访问更加方便<br>这部分功能目前已被其他第三方库全面超越</td></tr></tbody></table><h3 id="_4-prop-和-attr-的区别" tabindex="-1"><a class="header-anchor" href="#_4-prop-和-attr-的区别" aria-hidden="true">#</a> 4.prop 和 attr 的区别</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//channel.id/a.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-prop" tabindex="-1"><a class="header-anchor" href="#_1-prop" aria-hidden="true">#</a> 1）prop</h4><ul><li>相当于 <code>dom.xxx</code></li><li>获取的是 DOM 对象的内置属性</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>href<span class="token punctuation">;</span> <span class="token comment">// https://channel.id/a.html</span>
<span class="token function">$</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// https://channel.id/a.html</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;:checkbox&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b<span class="token punctuation">.</span>checked<span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">$</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-attr" tabindex="-1"><a class="header-anchor" href="#_2-attr" aria-hidden="true">#</a> 2）attr</h4><ul><li>相当于 <code>dom.getAttribute(xxx)</code></li><li>获取的是 DOM 元素上的自定义属性 <ul><li>标签上的值是什么，获取到的就是什么</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;//channel.id/a.html&quot;</span>
<span class="token function">$</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;//channel.id/a.html&quot;</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;:checkbox&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
b<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
<span class="token function">$</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-lodash" tabindex="-1"><a class="header-anchor" href="#三-lodash" aria-hidden="true">#</a> （三）Lodash</h2><blockquote><p>官网：https://lodash.com/docs</p><br><p>中文网：https://www.lodashjs.com/</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/lodash.js/4.17.21/lodash.min.js</p></blockquote><ul><li>Lodash 是一个针对 ES 的古老工具库，出现在 ES5 之前</li><li>Lodash 提供了大量的 API，弥补了 ES 中对象、函数、数组 API 不足的问题</li><li>大部分工具函数，都可以在 Lodash 中找到 <ul><li>一般用于编写框架或通用库</li></ul></li></ul><h2 id="四-animate-css" tabindex="-1"><a class="header-anchor" href="#四-animate-css" aria-hidden="true">#</a> （四）Animate.css</h2><blockquote><p>官网：https://animate.style/</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/animate.css/4.1.1/animate.min.css</p></blockquote><ul><li>Animate.css 库提供了大量的动画效果</li><li>开发者仅需使用它提供的类名即可</li></ul><div class="hint-container danger"><p class="hint-container-title">注意</p><p>Animate.css 中的动画对 <mark>行盒</mark> 无效</p></div><h3 id="_1-基本使用" tabindex="-1"><a class="header-anchor" href="#_1-基本使用" aria-hidden="true">#</a> 1.基本使用</h3><h4 id="_1-类名格式" tabindex="-1"><a class="header-anchor" href="#_1-类名格式" aria-hidden="true">#</a> 1）类名格式</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>animate__animated animate__效果名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-效果名" tabindex="-1"><a class="header-anchor" href="#_2-效果名" aria-hidden="true">#</a> 2）效果名</h4><ul><li>分为以下几个大类，可以从官网中找到对应的分类</li><li>每个分类下有多种效果名可供使用</li></ul><table><thead><tr><th>分类</th><th>含义</th></tr></thead><tbody><tr><td>Attention seekers</td><td>强调</td></tr><tr><td>Back entrances</td><td>进入</td></tr><tr><td>Back exits</td><td>退出</td></tr><tr><td>Bouncing entrances</td><td>弹跳进入</td></tr><tr><td>Bouncing exits</td><td>弹跳退出</td></tr><tr><td>Fading entrances</td><td>淡入</td></tr><tr><td>Fading exits</td><td>淡出</td></tr><tr><td>Flippers</td><td>翻转</td></tr><tr><td>Lightspeed</td><td>光速</td></tr><tr><td>Rotating entrances</td><td>旋转进入</td></tr><tr><td>Rotating exits</td><td>旋转退出</td></tr><tr><td>Specials</td><td>特殊效果</td></tr><tr><td>Zooming entrances</td><td>缩放进入</td></tr><tr><td>Zooming exits</td><td>缩放退出</td></tr><tr><td>Sliding entrances</td><td>滑动进入</td></tr><tr><td>Sliding exits</td><td>滑动退出</td></tr></tbody></table><h3 id="_2-工具类" tabindex="-1"><a class="header-anchor" href="#_2-工具类" aria-hidden="true">#</a> 2.工具类</h3><ul><li>Animate.css 还提供了多个工具类</li><li>可以控制动画的 <mark>延时</mark> 、 <mark>重复次数</mark> 、 <mark>速度</mark></li></ul><h4 id="_1-延时" tabindex="-1"><a class="header-anchor" href="#_1-延时" aria-hidden="true">#</a> 1）延时</h4><ul><li>默认无延时</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>animate__delay-1s  <span class="token comment">/* 延时1秒 */</span>
animate__delay-2s  <span class="token comment">/* 延时2秒 */</span>
animate__delay-3s  <span class="token comment">/* 延时3秒 */</span>
animate__delay-4s  <span class="token comment">/* 延时4秒 */</span>
animate__delay-5s  <span class="token comment">/* 延时5秒 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-重复次数" tabindex="-1"><a class="header-anchor" href="#_2-重复次数" aria-hidden="true">#</a> 2）重复次数</h4><ul><li>默认重复 1 次</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>animate__repeat-2	<span class="token comment">/* 重复2次 */</span>
animate__repeat-3	<span class="token comment">/* 重复3次 */</span>
animate__infinite	<span class="token comment">/* 重复无限次 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-速度" tabindex="-1"><a class="header-anchor" href="#_3-速度" aria-hidden="true">#</a> 3）速度</h4><ul><li>默认 1 秒内完成动画</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>animate__slow <span class="token comment">/* 2秒内完成动画 */</span>
animate__slower	<span class="token comment">/* 3秒内完成动画 */</span>
animate__fast	<span class="token comment">/* 800毫秒内完成动画 */</span>
animate__faster	<span class="token comment">/* 500毫秒内完成动画 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-示例" tabindex="-1"><a class="header-anchor" href="#_3-示例" aria-hidden="true">#</a> 3.示例</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 
  使用animate.css
  动画名：bounce
  速度：快
  重复：无限次
  延迟：1秒
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
    animate__animated
    animate__bounce
    animate_fast
    animate__infinite
    animate__delay-1s
  <span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  Hello Animate
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五-axios" tabindex="-1"><a class="header-anchor" href="#五-axios" aria-hidden="true">#</a> （五）Axios</h2><blockquote><p>官网：https://axios-http.com/zh/</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/axios/0.21.1/axios.min.js</p></blockquote><ul><li>Axios 是一个请求库</li><li>在 <mark>浏览器</mark> 环境中，封装了 XHR</li><li>提供更加便捷的 API 发送请求</li></ul><h3 id="_1-基本使用-1" tabindex="-1"><a class="header-anchor" href="#_1-基本使用-1" aria-hidden="true">#</a> 1.基本使用</h3><h4 id="_1-格式" tabindex="-1"><a class="header-anchor" href="#_1-格式" aria-hidden="true">#</a> 1）格式</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url地址<span class="token punctuation">,</span> <span class="token punctuation">[</span>请求配置<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url地址<span class="token punctuation">,</span> <span class="token punctuation">[</span>请求体对象<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>请求配置<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 或直接使用 axios 方法，在请求配置中填写请求方法</span>
<span class="token function">axios</span><span class="token punctuation">(</span>请求配置<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2）示例</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 发送 get 请求到 https://study.duyiedu.com/api/herolist，输出响应体的内容</span>
axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://study.duyiedu.com/api/herolist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// resp.data 为响应体的数据，axios会自动解析JSON格式</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 发送 get 请求到 https://study.duyiedu.com/api/user/exists?loginId=abc，输出响应体的内容</span>
axios
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://study.duyiedu.com/api/user/exists&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里可以配置 query，axios会自动将其进行Url编码</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// resp.data 为响应体的数据，axios会自动解析JSON格式</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 发送 post 请求到 https://study.duyiedu.com/api/user/reg，会将第二个参数转换为JSON格式的请求体</span>
axios
  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;https://study.duyiedu.com/api/user/reg&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loginId</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loginPwd</span><span class="token operator">:</span> <span class="token string">&quot;123123&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">nickname</span><span class="token operator">:</span> <span class="token string">&quot;棒棒鸡&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// resp.data 为响应体的数据，axios会自动解析JSON格式</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-实例" tabindex="-1"><a class="header-anchor" href="#_2-实例" aria-hidden="true">#</a> 2.实例</h3><ul><li>axios 允许开发者先创建一个实例，后续通过使用实例进行请求</li><li>可以预先进行某些配置</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建实例</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> <span class="token string">&quot;https://study.duyiedu.com/&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 发送 get 请求到 https://study.duyiedu.com/api/herolist，输出响应体的内容</span>
instance<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/api/herolist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// resp.data 为响应体的数据，axios会自动解析JSON格式</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-拦截器" tabindex="-1"><a class="header-anchor" href="#_3-拦截器" aria-hidden="true">#</a> 3.拦截器</h3><ul><li>有时可能需要对所有的请求或响应做一些统一的处理 <ul><li>在请求时，如果发现本地有 token，需要附带到请求头</li><li>在拿到响应后，仅需要取响应体中的 data 属性</li><li>如果发生错误，我们需要做一个弹窗显示</li></ul></li><li>这些统一的行为就非常适合使用拦截器</li><li>设置好拦截器后，后续的请求和响应都会触发对应的函数</li><li>拦截器可以针对 <mark>axios 实例</mark> 进行设置</li></ul><h4 id="_1-添加请求拦截器" tabindex="-1"><a class="header-anchor" href="#_1-添加请求拦截器" aria-hidden="true">#</a> 1）添加请求拦截器</h4><ul><li>config 为当前的请求配置</li><li>在发送请求之前做些什么</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 添加一个请求头</span>
    config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>authorization <span class="token operator">=</span> token<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 返回处理后的配置</span>
  <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-添加响应拦截器" tabindex="-1"><a class="header-anchor" href="#_2-添加响应拦截器" aria-hidden="true">#</a> 2）添加响应拦截器</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2xx 范围内的状态码都会触发该函数，对响应数据做点什么</span>

    <span class="token comment">// 仅得到响应体中的data属性</span>
    <span class="token keyword">return</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 超出 2xx 范围的状态码都会触发该函数，对响应错误做点什么</span>

    <span class="token comment">// 弹出错误消息</span>
    <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六-mockjs" tabindex="-1"><a class="header-anchor" href="#六-mockjs" aria-hidden="true">#</a> （六）MockJS</h2><blockquote><p>官网：http://mockjs.com/</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/Mock.js/1.0.0/mock-min.js</p></blockquote><h3 id="_1-两个作用" tabindex="-1"><a class="header-anchor" href="#_1-两个作用" aria-hidden="true">#</a> 1.两个作用</h3><ul><li>产生模拟数据</li><li>拦截 Ajax</li></ul><p><img src="`+d+'" alt=""></p><p><img src="'+k+`" alt=""></p><h3 id="_2-仅模拟数据" tabindex="-1"><a class="header-anchor" href="#_2-仅模拟数据" aria-hidden="true">#</a> 2.仅模拟数据</h3><ul><li>数据模板有其特有的书写规范</li><li>具体写法见官网</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span>数据模板<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-拦截-模拟数据" tabindex="-1"><a class="header-anchor" href="#_3-拦截-模拟数据" aria-hidden="true">#</a> 3.拦截 + 模拟数据</h3><ul><li>更多用法见官网</li></ul><h4 id="_1-拦截" tabindex="-1"><a class="header-anchor" href="#_1-拦截" aria-hidden="true">#</a> 1）拦截</h4><ul><li>MockJS 拦截数据的原理是 <mark>重写了 XHR</mark><ul><li>因此仅能拦截 <code>XHR</code> 的数据请求，而无法拦截使用 <code>fetch</code> 发出的请求</li></ul></li><li>可以拦截 <ul><li>原生 <code>XmlHttpRequest</code></li><li><code>jQuery</code> 中的 <code>$.ajax</code></li><li><code>axios</code></li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span>要拦截的url<span class="token punctuation">,</span> 要拦截的请求方法<span class="token punctuation">,</span> 数据模板<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-模拟网络延时" tabindex="-1"><a class="header-anchor" href="#_2-模拟网络延时" aria-hidden="true">#</a> 2）模拟网络延时</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 网络延时400毫秒</span>
Mock<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 网络延时200-600毫秒</span>
Mock<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token string">&quot;200-600&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七-moment" tabindex="-1"><a class="header-anchor" href="#七-moment" aria-hidden="true">#</a> （七）Moment</h2><blockquote><p>官网：https://momentjs.com/</p><br><p>中文网：http://momentjs.cn/</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/moment.js/2.29.1/moment.min.js</p><br><p>各种语言包：https://www.bootcdn.cn/moment.js/</p></blockquote><ul><li>提供了强大的日期处理能力</li></ul><h3 id="_1-时间基础知识" tabindex="-1"><a class="header-anchor" href="#_1-时间基础知识" aria-hidden="true">#</a> 1.时间基础知识</h3><h4 id="_1-单位" tabindex="-1"><a class="header-anchor" href="#_1-单位" aria-hidden="true">#</a> 1）单位</h4><table><thead><tr><th>单位</th><th>名称</th><th>换算</th></tr></thead><tbody><tr><td>hour</td><td>小时</td><td>1 day = 24 hours</td></tr><tr><td>minute</td><td>分钟</td><td>1 hour = 60 minutes</td></tr><tr><td>second</td><td>秒</td><td>1 minute = 60 seconds</td></tr><tr><td>millisecond(ms)</td><td>毫秒</td><td>1 second = 1000 ms</td></tr><tr><td>nanosecond(ns)</td><td>纳秒</td><td>1 ms = 1000 ns</td></tr></tbody></table><h4 id="_2-gmt-和-utc" tabindex="-1"><a class="header-anchor" href="#_2-gmt-和-utc" aria-hidden="true">#</a> 2）GMT 和 UTC</h4><ul><li>世界划分为 24 个时区，北京在东 8 区，格林威治在 0 时区 <ul><li>GMT：Greenwich Mean Time 格林威治世界时 <ul><li>太阳时，精确到毫秒</li></ul></li><li>UTC：Universal Time Coordinated 世界协调时 <ul><li>以原子时间为计时标准，精确到纳秒</li></ul></li></ul></li><li>国际标准中，已全面使用 UTC 时间，而不再使用 GMT 时间</li><li>GMT 和 UTC 时间在文本表示格式上是一致的 <ul><li>均为 <code>星期缩写, 日期 月份 年份 时间 GMT</code></li><li>如：<code>Thu, 27 Aug 2020 08:01:44 GMT</code></li></ul></li><li>ISO 8601 标准规定，建议使用 <code>YYYY-MM-DDTHH:mm:ss.msZ</code> 表示时间 <ul><li>如：<code>2020-08-27T08:01:44.000Z</code></li></ul></li><li><mark>GMT、UTC、ISO 8601 都表示的是零时区的时间</mark></li></ul><h4 id="_3-unix-时间戳" tabindex="-1"><a class="header-anchor" href="#_3-unix-时间戳" aria-hidden="true">#</a> 3）Unix 时间戳</h4><ul><li>Unix 时间戳（Unix Timestamp）是 Unix 系统最早提出的概念</li><li>将 UTC 时间 1970 年 1 月 1 日凌晨作为起始时间，到指定时间经过的秒数（毫秒数）</li></ul><h4 id="_4-程序中的时间处理" tabindex="-1"><a class="header-anchor" href="#_4-程序中的时间处理" aria-hidden="true">#</a> 4）程序中的时间处理</h4><ul><li>程序对时间的计算、存储务必使用 <mark>UTC 时间，或者时间戳</mark></li><li>在和用户交互时，将 UTC 时间或时间戳转换为更加友好的文本</li></ul><h3 id="_2-moment-的核心用法" tabindex="-1"><a class="header-anchor" href="#_2-moment-的核心用法" aria-hidden="true">#</a> 2.Moment 的核心用法</h3><ul><li>获得 Moment 对象</li><li>针对 Moment 对象做各种操作</li></ul><p><img src="`+m+`" alt=""></p><h2 id="八-echarts" tabindex="-1"><a class="header-anchor" href="#八-echarts" aria-hidden="true">#</a> （八）ECharts</h2><blockquote><p>官网：https://echarts.apache.org/zh</p><br><p>CDN：https://cdn.bootcdn.net/ajax/libs/echarts/5.1.1/echarts.min.js</p></blockquote><h3 id="_1-使用地图需要两部分数据" tabindex="-1"><a class="header-anchor" href="#_1-使用地图需要两部分数据" aria-hidden="true">#</a> 1.使用地图需要两部分数据</h3><ul><li><code>.geojson</code> 格式的地理信息 <ul><li>该信息将作为地图背景板</li></ul></li><li>在地图背景板上要进行显示或交互的数据</li></ul><h3 id="_2-需要横纵轴的图表" tabindex="-1"><a class="header-anchor" href="#_2-需要横纵轴的图表" aria-hidden="true">#</a> 2.需要横纵轴的图表</h3><ul><li>配置了 xAxis，需要另外配置 yAxis 为空对象</li><li>ECharts 会自动生成纵轴</li><li>但是不配置该选项会报错</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>chart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;ECharts 折线图&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 不配置不会显示悬浮菜单</span>
  <span class="token literal-property property">legend</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;手机销量&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;平板销量&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">xAxis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">month</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>month <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">月</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">yAxis</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 纵坐标让其自动生成，不配置会报错</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,103);function _n(gn,fn){const a=o("ExternalLinkIcon");return i(),c("div",null,[v,n("table",null,[b,n("tbody",null,[n("tr",null,[_,n("td",null,[s("官网："),n("a",g,[s("https://jquery.com/"),t(a)]),f,s("中文网："),n("a",x,[s("https://jquery.cuishifeng.cn/"),t(a)])]),y]),n("tr",null,[j,n("td",null,[s("官网："),n("a",q,[s("https://lodash.com/docs"),t(a)]),w,s("中文网："),n("a",M,[s("https://www.lodashjs.com/"),t(a)])]),C]),n("tr",null,[D,n("td",null,[s("官网："),n("a",T,[s("https://animate.style/"),t(a)])]),A]),n("tr",null,[S,n("td",null,[s("官网："),n("a",O,[s("https://axios-http.com/zh/"),t(a)])]),N]),n("tr",null,[Q,n("td",null,[s("官网："),n("a",$,[s("http://mockjs.com/"),t(a)])]),U]),n("tr",null,[z,n("td",null,[s("官网："),n("a",I,[s("https://momentjs.com/"),t(a)]),L,s("中文网："),n("a",E,[s("http://momentjs.cn/"),t(a)])]),J]),n("tr",null,[H,n("td",null,[s("官网："),n("a",G,[s("https://echarts.apache.org/zh"),t(a)])]),R]),n("tr",null,[B,n("td",null,[s("官网："),n("a",X,[s("https://animejs.com/"),t(a)])]),Y]),n("tr",null,[P,n("td",null,[s("官网："),n("a",V,[s("https://pandao.github.io/editor.md"),t(a)])]),Z]),n("tr",null,[F,n("td",null,[s("官网："),n("a",K,[s("http://validatejs.org/"),t(a)])]),W]),n("tr",null,[nn,n("td",null,[s("官网："),n("a",sn,[s("https://date-fns.org/"),t(a)])]),an]),n("tr",null,[tn,n("td",null,[s("官网："),n("a",en,[s("https://zeptojs.com/"),t(a)])]),pn]),n("tr",null,[on,n("td",null,[s("官网："),n("a",cn,[s("https://github.com/rstacruz/nprogress"),t(a)])]),ln]),n("tr",null,[un,n("td",null,[s("官网："),n("a",rn,[s("https://github.com/ljharb/qs"),t(a)])]),dn])])]),kn,n("ul",null,[mn,hn,n("li",null,[s("国内广泛使用的免费 CDN 站点："),n("a",vn,[s("https://www.bootcdn.cn/"),t(a)])])]),bn])}const jn=p(h,[["render",_n],["__file","13.html.vue"]]);export{jn as default};
