import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,e as l}from"./app-a120a012.js";const i={},d=l('<ul><li><p>又名：生命周期回调函数、生命周期函数、生命周期钩子。</p></li><li><p>是什么：Vue 在关键时刻帮我们调用的一些特殊名称的函数。</p></li><li><p>生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的。</p></li><li><p>生命周期函数中的 this 指向是 <strong>vm</strong> 或 <strong>组件实例对象</strong>。</p></li></ul><h2 id="_1-类比理解" tabindex="-1"><a class="header-anchor" href="#_1-类比理解" aria-hidden="true">#</a> 1.类比理解</h2><table><thead><tr><th>张三的一生（张三的生命周期）</th><th>vm 的一生（vm 的生命周期）</th></tr></thead><tbody><tr><td>将要出生</td><td>将要创建 ===&gt; 调用 beforeCreate 函数</td></tr><tr><td>/</td><td>创建完毕 ===&gt; 调用 created 函数</td></tr><tr><td>/</td><td>将要挂载 ===&gt; 调用 beforeMount 函数</td></tr><tr><td><strong>呱呱坠地 ===&gt; 检查身体各项指标</strong></td><td><strong>挂载完毕 ===&gt; 调用 mounted 函数（重要的钩子）</strong></td></tr><tr><td>学会说话</td><td>将要更新 ===&gt; 调用 beforeUpdate 函数</td></tr><tr><td>学会走路</td><td>更新完毕 ===&gt; 调用 updated 函数</td></tr><tr><td>......</td><td>......</td></tr><tr><td>......</td><td>......</td></tr><tr><td><strong>将要永别 ===&gt; 交代后事</strong></td><td><strong>将要销毁 ===&gt; 调用 beforeDestroy 函数（重要的钩子）</strong></td></tr><tr><td>已经永别</td><td>销毁完毕 ===&gt; 调用 destroyed 函数</td></tr></tbody></table><h2 id="_2-常用的生命周期钩子" tabindex="-1"><a class="header-anchor" href="#_2-常用的生命周期钩子" aria-hidden="true">#</a> 2.常用的生命周期钩子</h2><ul><li><p>mounted：发送 Ajax 请求、启动定时器、绑定自定义事件、订阅消息等 <strong>初始化操作</strong>。</p></li><li><p>beforeDestroy：清除定时器、解绑自定义事件、取消订阅消息等 <strong>收尾工作</strong>。</p></li></ul><h2 id="_3-关于销毁-vue-实例" tabindex="-1"><a class="header-anchor" href="#_3-关于销毁-vue-实例" aria-hidden="true">#</a> 3.关于销毁 Vue 实例</h2><ul><li><p>销毁后借助 Vue 开发者工具看不到任何信息。</p></li><li><p>销毁后自定义事件会失效，但原生 DOM 事件依然有效。</p></li><li><p>一般不会在 beforeDestroy 操作数据，因为即使操作数据也不会触发更新流程了。</p></li></ul><h2 id="_4-生命周期图示" tabindex="-1"><a class="header-anchor" href="#_4-生命周期图示" aria-hidden="true">#</a> 4.生命周期图示</h2><h3 id="_1-挂载流程" tabindex="-1"><a class="header-anchor" href="#_1-挂载流程" aria-hidden="true">#</a> 1）挂载流程</h3><ul><li><p>new Vue({})</p></li><li><p>Init Events &amp; Lifecycle：初始化生命周期、事件，但数据代理还未开始。</p></li><li><p>【beforeCreate】：<strong>无法</strong>通过 vm 访问到 data 中的数据和 methods 中的方法。</p></li><li><p>Init injections &amp; reactivity：初始化数据监测、数据代理。</p></li><li><p>【created】：<strong>可以</strong>通过 vm 访问到 data 中的数据和 methods 中的方法。</p></li><li><p>Has &quot;el&quot; option? =&gt;</p><ul><li><p>No =&gt; when vm.$mount(el) is called =&gt;</p></li><li><p>Yes =&gt;</p></li><li><p>Has &quot;template&quot; option?</p><ul><li><p>Yes =&gt; Compile template into render function</p></li><li><p>No =&gt; Compile el&#39;s outerHTML as template</p></li></ul></li><li><p>上述阶段 Vue 开始解析模板，生成虚拟 DOM（内存中），<strong>页面还不能显示解析好的内容</strong>。</p></li></ul></li><li><p>【beforeMount】：</p><ul><li><p>页面呈现的是<strong>未经 Vue 编译</strong>的 DOM 结构。</p></li><li><p>所有对 DOM 的操作，最终都不奏效。</p></li></ul></li><li><p>Create vm.$el and replace &quot;el&quot; with it：将内存中的虚拟 DOM 转为真实 DOM 插入页面。</p></li><li><p>【mounted】：</p><ul><li><p>页面呈现的是<strong>经过 Vue 编译</strong>的 DOM。</p></li><li><p>对 DOM 的操作均有效（尽可能避免）。</p></li></ul></li></ul><p>至此初始化过程结束，一般在此进行：开启定时器、发送网络请求、订阅消息、绑定自定义事件等<strong>初始化操作</strong>。</p><h3 id="_2-更新流程" tabindex="-1"><a class="header-anchor" href="#_2-更新流程" aria-hidden="true">#</a> 2）更新流程</h3><ul><li><p>Mounted：When data changes =&gt;</p><ul><li><p>【beforeUpdate】：此时数据是最新的，但页面是旧的，即：<strong>页面尚未和数据保持同步</strong>。</p></li><li><p>Virtual DOM re-render and patch：根据新数据，生成新的虚拟 DOM，随后与旧的虚拟 DOM 进行比较，最终完成页面更新，即：完成了 Model → View 的更新。</p></li><li><p>【updated】：此时数据是最新的，页面也是新的，即：<strong>页面和数据保持同步</strong>。</p></li></ul></li></ul><p>When vm.$destroy() is called：由更新流程进入销毁流程。</p><h3 id="_3-销毁流程" tabindex="-1"><a class="header-anchor" href="#_3-销毁流程" aria-hidden="true">#</a> 3）销毁流程</h3><ul><li><p>【beforeDestroy】：此时，vm 中所有的 data、methods、指令等等，都处于可用状态，马上要执行销毁过程，一般在此阶段进行关闭定时器、取消订阅消息、解绑自定义事件等 <strong>收尾操作</strong>。</p></li><li><p>Teardown watchers, child components and event listeners</p></li><li><p>Destroyed：</p><ul><li>【destroyed】</li></ul></li></ul>',16),o=[d];function a(n,p){return e(),r("div",null,o)}const u=t(i,[["render",a],["__file","19.html.vue"]]);export{u as default};
