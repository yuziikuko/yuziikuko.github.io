import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-1ca76096.js";const t={},p=e(`<h2 id="一-定义语法" tabindex="-1"><a class="header-anchor" href="#一-定义语法" aria-hidden="true">#</a> （一）定义语法</h2><h3 id="_1-局部指令" tabindex="-1"><a class="header-anchor" href="#_1-局部指令" aria-hidden="true">#</a> 1.局部指令</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">指令名</span><span class="token operator">:</span> 配置对象<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//==========</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">directives</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">指令名</span><span class="token operator">:</span> 回调函数<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-全局指令" tabindex="-1"><a class="header-anchor" href="#_2-全局指令" aria-hidden="true">#</a> 2.全局指令</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>指令名<span class="token punctuation">,</span> 配置对象<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//==========</span>
Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>指令名<span class="token punctuation">,</span> 回调函数<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二-配置对象中常见的-3-个属性" tabindex="-1"><a class="header-anchor" href="#二-配置对象中常见的-3-个属性" aria-hidden="true">#</a> （二）配置对象中常见的 3 个属性</h2><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>bind</td><td>指令与元素成功绑定时调用</td></tr><tr><td>inserted</td><td>指令所在元素被插入页面时调用</td></tr><tr><td>update</td><td>指令所在模板结构被重新解析时调用</td></tr></tbody></table><h2 id="三-备注" tabindex="-1"><a class="header-anchor" href="#三-备注" aria-hidden="true">#</a> （三）备注</h2><ul><li>指令定义时不加 <code>v-</code> ，但使用时要加 <code>v-</code></li><li>指令名如果是多个单词，要使用 kebab-case 命名方式，不要用 camelCase 命名</li></ul>`,9),c=[p];function i(o,l){return a(),s("div",null,c)}const u=n(t,[["render",i],["__file","18.html.vue"]]);export{u as default};
