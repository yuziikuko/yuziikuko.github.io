import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as e,e as s}from"./app-1240ea23.js";const t={},i=s(`<h2 id="一-el-的两种写法" tabindex="-1"><a class="header-anchor" href="#一-el-的两种写法" aria-hidden="true">#</a> （一）el 的两种写法</h2><ul><li>new Vue 时直接配置 el 属性 <code>el: &#39;#root&#39;</code></li><li>先创建 Vue 实例，随后再通过 <code>vm.$mount(&#39;#root&#39;)</code> 指定 el 的值</li></ul><h2 id="二-data-的两种写法" tabindex="-1"><a class="header-anchor" href="#二-data-的两种写法" aria-hidden="true">#</a> （二）data 的两种写法</h2><h3 id="_1-对象式" tabindex="-1"><a class="header-anchor" href="#_1-对象式" aria-hidden="true">#</a> 1.对象式</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-函数式" tabindex="-1"><a class="header-anchor" href="#_2-函数式" aria-hidden="true">#</a> 2.函数式</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;aaa&#39;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-如何选择" tabindex="-1"><a class="header-anchor" href="#三-如何选择" aria-hidden="true">#</a> （三）如何选择</h3><ul><li>使用组件时，必须使用函数式，否则会报错</li></ul><div class="hint-container danger"><p class="hint-container-title">重要原则</p><ul><li>由 Vue 管理的函数，一定不要写箭头函数</li><li>一旦写了箭头函数，this 就不再指向 Vue 实例，而是全局 Window 对象</li></ul></div>`,10),l=[i];function r(c,o){return n(),e("div",null,l)}const u=a(t,[["render",r],["__file","05.html.vue"]]);export{u as default};
