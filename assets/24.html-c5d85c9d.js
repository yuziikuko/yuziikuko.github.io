const n=JSON.parse(`{"key":"v-59ba5bfa","path":"/notes/ECMAScript6-11/24.html","title":"二十四、ES11 新特性","lang":"zh-CN","frontmatter":{"title":"二十四、ES11 新特性","copyright":false,"date":"2023-01-02T00:00:00.000Z","category":["笔记","ECMAScript"],"tag":["尚硅谷","李强"]},"headers":[{"level":2,"title":"（一）私有属性","slug":"一-私有属性","link":"#一-私有属性","children":[]},{"level":2,"title":"（二）Promise 方法扩展 —— Promise.allSettled","slug":"二-promise-方法扩展-——-promise-allsettled","link":"#二-promise-方法扩展-——-promise-allsettled","children":[]},{"level":2,"title":"（三）字符串方法扩展 —— String.prototype.matchAll","slug":"三-字符串方法扩展-——-string-prototype-matchall","link":"#三-字符串方法扩展-——-string-prototype-matchall","children":[]},{"level":2,"title":"（四）可选链操作符 ?.","slug":"四-可选链操作符","link":"#四-可选链操作符","children":[]},{"level":2,"title":"（五）动态 import","slug":"五-动态-import","link":"#五-动态-import","children":[]},{"level":2,"title":"（六）大整形 BigInt 类型","slug":"六-大整形-bigint-类型","link":"#六-大整形-bigint-类型","children":[{"level":3,"title":"1.大整形","slug":"_1-大整形","link":"#_1-大整形","children":[]},{"level":3,"title":"2.函数","slug":"_2-函数","link":"#_2-函数","children":[]},{"level":3,"title":"3.用于大数值运算","slug":"_3-用于大数值运算","link":"#_3-用于大数值运算","children":[]}]},{"level":2,"title":"（七）绝对全局对象 —— globalThis","slug":"七-绝对全局对象-——-globalthis","link":"#七-绝对全局对象-——-globalthis","children":[]}],"git":{"createdTime":1672650149000,"updatedTime":1689308920000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":2.56,"words":769},"filePathRelative":"notes/ECMAScript6-11/24.md","localizedDate":"2023年1月2日","excerpt":"<h2> （一）私有属性</h2>\\n<ul>\\n<li>变量名前加 <code>#</code></li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">//  公有属性</span>\\n  name<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 私有属性</span>\\n  #age<span class=\\"token punctuation\\">;</span>\\n  #weight<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 构造方法</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> weight</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>#age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>#weight <span class=\\"token operator\\">=</span> weight<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">// 类内部调用</span>\\n  <span class=\\"token function\\">intro</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>girl<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>girl<span class=\\"token punctuation\\">.</span>#age<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>girl<span class=\\"token punctuation\\">.</span>#weight<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//  实例化</span>\\n<span class=\\"token keyword\\">const</span> girl <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ikuko\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">24</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"62kg\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>girl<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// Person {name: 'ikuko', #age: 24, #weight: '62kg'}</span>\\n\\n<span class=\\"token comment\\">// 类外部调用：无法访问私有属性</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>girl<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// ikuko</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>girl<span class=\\"token punctuation\\">.</span>#age<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// Private field '#age' must be declared in an enclosing class</span>\\n\\n<span class=\\"token comment\\">// 类内部调用：可以访问</span>\\ngirl<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">intro</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// ikuko</span>\\n<span class=\\"token comment\\">// 24</span>\\n<span class=\\"token comment\\">// 62kg</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
