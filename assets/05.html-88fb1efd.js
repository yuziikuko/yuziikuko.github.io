import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o,c as i,a as n,b as s,d as e,e as t}from"./app-1240ea23.js";const l={},u=t(`<h2 id="一-vue2-x-的响应式" tabindex="-1"><a class="header-anchor" href="#一-vue2-x-的响应式" aria-hidden="true">#</a> （一）Vue2.x 的响应式</h2><h3 id="_1-实现原理" tabindex="-1"><a class="header-anchor" href="#_1-实现原理" aria-hidden="true">#</a> 1.实现原理</h3><h4 id="_1-对象类型" tabindex="-1"><a class="header-anchor" href="#_1-对象类型" aria-hidden="true">#</a> 1）对象类型</h4><ul><li>通过 <code>Object.defineProperty()</code> 对属性的读取、修改进行拦截（数据劫持）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-数组类型" tabindex="-1"><a class="header-anchor" href="#_2-数组类型" aria-hidden="true">#</a> 2）数组类型</h4><ul><li>通过重写更新数组的一系列方法来实现拦截（对数组的变更方法进行了包裹）</li></ul><h3 id="_2-存在问题" tabindex="-1"><a class="header-anchor" href="#_2-存在问题" aria-hidden="true">#</a> 2.存在问题</h3><ul><li>对象新增属性、删除属性，界面不会自动更新</li><li>直接通过下标修改数组，界面不会自动更新</li></ul><h2 id="二-vue3-x-的响应式" tabindex="-1"><a class="header-anchor" href="#二-vue3-x-的响应式" aria-hidden="true">#</a> （二）Vue3.x 的响应式</h2><h3 id="_1-实现原理-1" tabindex="-1"><a class="header-anchor" href="#_1-实现原理-1" aria-hidden="true">#</a> 1.实现原理</h3><h4 id="_1-通过-proxy-代理" tabindex="-1"><a class="header-anchor" href="#_1-通过-proxy-代理" aria-hidden="true">#</a> 1）通过 Proxy（代理）</h4><ul><li>拦截对象中任意属性的变化</li><li>包括：属性值的读写、属性的添加、属性的删除等</li></ul><h4 id="_2-通过-reflect-反射" tabindex="-1"><a class="header-anchor" href="#_2-通过-reflect-反射" aria-hidden="true">#</a> 2）通过 Reflect（反射）</h4><ul><li>对被代理对象（源对象）的属性进行操作</li></ul><h3 id="_2-mdn-文档中描述的-proxy-与-reflect" tabindex="-1"><a class="header-anchor" href="#_2-mdn-文档中描述的-proxy-与-reflect" aria-hidden="true">#</a> 2.MDN 文档中描述的 Proxy 与 Reflect</h3>`,16),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"},d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// 拦截读取属性值</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 拦截设置属性值或添加新属性</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 拦截删除属性</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Tom&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function h(v,m){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("Proxy"),e(a)])]),n("li",null,[n("a",d,[s("Reflect"),e(a)])])]),k])}const _=p(l,[["render",h],["__file","05.html.vue"]]);export{_ as default};
