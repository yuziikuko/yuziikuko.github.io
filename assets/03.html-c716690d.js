import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,e as s}from"./app-1240ea23.js";const t={},i=s(`<h2 id="一-作用" tabindex="-1"><a class="header-anchor" href="#一-作用" aria-hidden="true">#</a> （一）作用</h2><ul><li>定义一个响应式的数据</li></ul><h2 id="二-语法" tabindex="-1"><a class="header-anchor" href="#二-语法" aria-hidden="true">#</a> （二）语法</h2><ul><li>创建一个包含响应式数据的 <strong>引用实现的实例对象</strong></li><li>简称 <strong>引用对象 / reference 对象 / ref 对象</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> xxx <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>initValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-操作数据" tabindex="-1"><a class="header-anchor" href="#_1-操作数据" aria-hidden="true">#</a> 1.操作数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>xxx<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-模板中读取数据" tabindex="-1"><a class="header-anchor" href="#_2-模板中读取数据" aria-hidden="true">#</a> 2.模板中读取数据</h3><ul><li>不需要 <code>.value</code></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{xxx}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三-备注" tabindex="-1"><a class="header-anchor" href="#三-备注" aria-hidden="true">#</a> （三）备注</h2><ul><li>接收的数据可以是基本类型，也可以是对象类型</li></ul><h3 id="_1-基本类型的数据" tabindex="-1"><a class="header-anchor" href="#_1-基本类型的数据" aria-hidden="true">#</a> 1.基本类型的数据</h3><ul><li>响应式依然是靠 <code>Object.defineProperty()</code> 的 <code>get</code> 与 <code>set</code> 完成的</li></ul><h3 id="_2-对象类型的数据" tabindex="-1"><a class="header-anchor" href="#_2-对象类型的数据" aria-hidden="true">#</a> 2.对象类型的数据</h3><ul><li>内部“求助”了 Vue3.0 中的一个新函数 —— <code>reactive</code> 函数</li></ul>`,16),c=[i];function l(d,r){return e(),n("div",null,c)}const p=a(t,[["render",l],["__file","03.html.vue"]]);export{p as default};
