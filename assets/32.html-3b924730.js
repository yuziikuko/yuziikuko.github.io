import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-1240ea23.js";const e="/assets/全局事件总线-cce6b1c5.png",p={},c=t(`<h2 id="一-定义" tabindex="-1"><a class="header-anchor" href="#一-定义" aria-hidden="true">#</a> （一）定义</h2><ul><li>一种组件间通信的方式</li><li>适用于 <strong>任意组件间通信</strong></li></ul><h2 id="二-安装全局事件总线" tabindex="-1"><a class="header-anchor" href="#二-安装全局事件总线" aria-hidden="true">#</a> （二）安装全局事件总线</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 安装全局事件总线，$bus就是当前应用的vm</span>
    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-使用事件总线" tabindex="-1"><a class="header-anchor" href="#三-使用事件总线" aria-hidden="true">#</a> （三）使用事件总线</h2><h3 id="_1-接收数据" tabindex="-1"><a class="header-anchor" href="#_1-接收数据" aria-hidden="true">#</a> 1.接收数据</h3><ul><li>A 组件想接收数据，则在 A 组件中给 $bus 绑定自定义事件</li><li>事件的 <strong>回调留在 A 组件自身</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">demo</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">// ...</span>
<span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 或者</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-提供数据" tabindex="-1"><a class="header-anchor" href="#_2-提供数据" aria-hidden="true">#</a> 2.提供数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">,</span> 数据<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="四-备注" tabindex="-1"><a class="header-anchor" href="#四-备注" aria-hidden="true">#</a> （四）备注</h2><ul><li>最好在 beforeDestroy 钩子中，用 $off 去解绑 <strong>当前组件所用到的事件</strong></li></ul><p><img src="`+e+'" alt=""></p>',13),o=[c];function i(u,l){return s(),a("div",null,o)}const k=n(p,[["render",i],["__file","32.html.vue"]]);export{k as default};
