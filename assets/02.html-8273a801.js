import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-1240ea23.js";const t={},o=e(`<h2 id="一-声明常量" tabindex="-1"><a class="header-anchor" href="#一-声明常量" aria-hidden="true">#</a> （一）声明常量</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ikuko <span class="token operator">=</span> <span class="token string">&quot;郁子&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ikuko<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二-特性" tabindex="-1"><a class="header-anchor" href="#二-特性" aria-hidden="true">#</a> （二）特性</h2><h3 id="_1-一定要赋初始值" tabindex="-1"><a class="header-anchor" href="#_1-一定要赋初始值" aria-hidden="true">#</a> 1.一定要赋初始值</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">A</span><span class="token punctuation">;</span>
<span class="token comment">// Missing initializer in const declaration</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-一般常量使用大写-潜规则" tabindex="-1"><a class="header-anchor" href="#_2-一般常量使用大写-潜规则" aria-hidden="true">#</a> 2.一般常量使用大写（潜规则）</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// 不推荐</span>
<span class="token keyword">const</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// 推荐</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-常量值不可修改" tabindex="-1"><a class="header-anchor" href="#_3-常量值不可修改" aria-hidden="true">#</a> 3.常量值不可修改</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ikuko <span class="token operator">=</span> <span class="token string">&quot;樱井&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Assignment to constant variable.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-块级作用域" tabindex="-1"><a class="header-anchor" href="#_4-块级作用域" aria-hidden="true">#</a> 4.块级作用域</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">PLAYER</span> <span class="token operator">=</span> <span class="token string">&quot;UZI&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">PLAYER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// PLAYER is not defined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-对于数组和对象的元素修改不算做对常量的修改-不会报错" tabindex="-1"><a class="header-anchor" href="#_5-对于数组和对象的元素修改不算做对常量的修改-不会报错" aria-hidden="true">#</a> 5.对于数组和对象的元素修改不算做对常量的修改，不会报错</h3><ul><li>因为当前数组或对象指向的内存地址不发生改变</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">TEAM</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;UZI&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MXLG&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ming&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Letme&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token constant">TEAM</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;Meiko&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">TEAM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">TEAM</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// Assignment to constant variable.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),c=[o];function p(i,l){return s(),a("div",null,c)}const d=n(t,[["render",p],["__file","02.html.vue"]]);export{d as default};
