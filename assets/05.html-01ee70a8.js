const n=JSON.parse('{"key":"v-283ee69e","path":"/notes/TypeScript/05.html","title":"五、泛型","lang":"zh-CN","frontmatter":{"title":"五、泛型","copyright":false,"date":"2022-11-30T00:00:00.000Z","category":["笔记","TypeScript"],"tag":["尚硅谷","李立超"]},"headers":[{"level":2,"title":"（一）什么时候用","slug":"一-什么时候用","link":"#一-什么时候用","children":[]},{"level":2,"title":"（二）怎么使用","slug":"二-怎么使用","link":"#二-怎么使用","children":[]},{"level":2,"title":"（三）进阶","slug":"三-进阶","link":"#三-进阶","children":[{"level":3,"title":"1.指定多个泛型","slug":"_1-指定多个泛型","link":"#_1-指定多个泛型","children":[]},{"level":3,"title":"2.限定泛型的类型范围","slug":"_2-限定泛型的类型范围","link":"#_2-限定泛型的类型范围","children":[]},{"level":3,"title":"3.定义类时使用泛型","slug":"_3-定义类时使用泛型","link":"#_3-定义类时使用泛型","children":[]}]}],"git":{"createdTime":1669816769000,"updatedTime":1689506602000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":0.98,"words":293},"filePathRelative":"notes/TypeScript/05.md","localizedDate":"2022年11月30日","excerpt":"<h2> （一）什么时候用</h2>\\n<ul>\\n<li>在定义函数或是类时，如果遇到类型不明确就可以使用泛型</li>\\n<li>类型在调用时确定</li>\\n</ul>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// 使用any会跳过TS的类型检查，不安全</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> a<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// T即是泛型</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token generic-function\\"><span class=\\"token function\\">fn</span><span class=\\"token generic class-name\\"><span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span></span></span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token constant\\">T</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token constant\\">T</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> a<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
