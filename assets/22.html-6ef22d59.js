import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as d,c as r,a as e,b as a,d as s,e as c}from"./app-1240ea23.js";const t={},u=e("h2",{id:"一-说明",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一-说明","aria-hidden":"true"},"#"),a(" （一）说明")],-1),o=e("li",null,"Vue 脚手架是 Vue 官方提供的标准化开发工具（开发平台）",-1),h=e("li",null,"Vue Command Line Interface（命令行接口工具 ==> 脚手架）",-1),v={href:"https://cli.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},m=c(`<h2 id="二-具体步骤" tabindex="-1"><a class="header-anchor" href="#二-具体步骤" aria-hidden="true">#</a> （二）具体步骤</h2><h3 id="_1-全局安装-vue-cli" tabindex="-1"><a class="header-anchor" href="#_1-全局安装-vue-cli" aria-hidden="true">#</a> 1.全局安装@vue/cli</h3><ul><li>仅首次安装执行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-切换到你要创建项目的目录-然后使用命令创建项目" tabindex="-1"><a class="header-anchor" href="#_2-切换到你要创建项目的目录-然后使用命令创建项目" aria-hidden="true">#</a> 2.<strong>切换到你要创建项目的目录</strong>，然后使用命令创建项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue create xxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-启动项目" tabindex="-1"><a class="header-anchor" href="#_3-启动项目" aria-hidden="true">#</a> 3.启动项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run serve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三-备注" tabindex="-1"><a class="header-anchor" href="#三-备注" aria-hidden="true">#</a> （三）备注</h2><ul><li>如出现下载缓慢请配置 npm 淘宝镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Vue 脚手架隐藏了所有 webpack 相关的配置，若想查看具体的 webpack 配置，请执行：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue inspect <span class="token operator">&gt;</span> output.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="四-关于不同版本的-vue" tabindex="-1"><a class="header-anchor" href="#四-关于不同版本的-vue" aria-hidden="true">#</a> （四）关于不同版本的 Vue</h2><h3 id="_1-vue-js-与-vue-runtime-xxx-js-的区别" tabindex="-1"><a class="header-anchor" href="#_1-vue-js-与-vue-runtime-xxx-js-的区别" aria-hidden="true">#</a> 1.vue.js 与 vue.runtime.xxx.js 的区别</h3><ul><li>vue.js 是完整版的 Vue，包含：核心功能+模板解析器</li><li>vue.runtime.xxx.js 是运行版的 Vue，只包含：核心功能，没有模板解析器</li></ul><h3 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用" aria-hidden="true">#</a> 2.使用</h3><ul><li>因为 vue.runtime.xxx.js 没有模板解析器，所以不能使用 template 配置项</li><li>需要使用 render 函数接收到的 createElement 函数去指定具体内容</li></ul><h2 id="五-脚手架文件结构" tabindex="-1"><a class="header-anchor" href="#五-脚手架文件结构" aria-hidden="true">#</a> （五）脚手架文件结构</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>​    |-- .gitignore：git版本管制忽略的配置
​    |-- babel.config.js：babel的配置文件
​    |-- package-lock.json：包版本控制文件
​    |-- package.json：应用包配置文件
​    |-- README.md：应用描述文件
​    |-- node_modules
​    |-- public
​    |   |-- favicon.ico：页签图标
​    |   |-- index.html：主页面
​    |-- src
​        |-- App.vue：汇总所有组件
​        |-- main.js：入口文件
​        |-- assets：存放静态资源
​        |   |-- logo.png
​        |-- components：存放组件
​            |-- HelloWorld.vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-生成目录结构" tabindex="-1"><a class="header-anchor" href="#_1-生成目录结构" aria-hidden="true">#</a> 1.生成目录结构</h3><ul><li>在需要生成目录的地方运行 mddir</li><li>会在文件夹下生成个带目录树的 md 文件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> mddir <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-vue-config-js-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-vue-config-js-配置文件" aria-hidden="true">#</a> 2.vue.config.js 配置文件</h3>`,24),b=e("li",null,[a("使用 "),e("code",null,"vue inspect > output.js"),a(" 可以查看 Vue 脚手架的默认配置")],-1),p=e("li",null,"修改 vue.config.js 可以对脚手架进行个性化定制",-1),g={href:"https://cli.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"};function x(_,f){const n=l("ExternalLinkIcon");return d(),r("div",null,[u,e("ul",null,[o,h,e("li",null,[e("a",v,[a("文档"),s(n)])])]),m,e("ul",null,[b,p,e("li",null,[a("详情见："),e("a",g,[a("https://cli.vuejs.org/zh/"),s(n)])])])])}const V=i(t,[["render",x],["__file","22.html.vue"]]);export{V as default};
