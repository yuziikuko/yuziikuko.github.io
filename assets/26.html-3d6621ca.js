import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-1ca76096.js";const t={},p=e(`<h2 id="一-功能" tabindex="-1"><a class="header-anchor" href="#一-功能" aria-hidden="true">#</a> （一）功能</h2><ul><li>用于增强 Vue 的功能</li></ul><h2 id="二-本质" tabindex="-1"><a class="header-anchor" href="#二-本质" aria-hidden="true">#</a> （二）本质</h2><ul><li>包含 install 方法的一个对象</li><li>install 的第一个参数是 Vue</li><li>第二个以后的参数是插件使用者传递的数据</li></ul><h2 id="三-定义插件" tabindex="-1"><a class="header-anchor" href="#三-定义插件" aria-hidden="true">#</a> （三）定义插件</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>对象<span class="token punctuation">.</span><span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">Vue<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1.添加全局过滤器</span>
  Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 2.添加全局指令</span>
  Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 3.配置全局混入（合）</span>
  Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 4.添加实例方法</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$myMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$myProperty <span class="token operator">=</span> xxx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-使用插件" tabindex="-1"><a class="header-anchor" href="#四-使用插件" aria-hidden="true">#</a> （四）使用插件</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),c=[p];function i(o,l){return a(),s("div",null,c)}const d=n(t,[["render",i],["__file","26.html.vue"]]);export{d as default};
