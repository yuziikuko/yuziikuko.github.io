import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as a,d as t,e as p}from"./app-1240ea23.js";const i="/assets/个人博客服务端01-d24611dc.png",u="/assets/个人博客服务端02-28e03551.png",r="/assets/个人博客服务端03-c6066545.png",k={},d=p('<h2 id="一-三层架构" tabindex="-1"><a class="header-anchor" href="#一-三层架构" aria-hidden="true">#</a> （一）三层架构</h2><h3 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1.简介</h3><div class="hint-container info"><p class="hint-container-title">引用自百度百科的解释</p><ul><li>三层架构，3-tier architecture</li><li>通常意义上的三层架构就是将整个业务应用划分为： <ul><li>界面层 User Interface layer</li><li>业务逻辑层 Business Logic Layer</li><li>数据访问层 Data access layer</li></ul></li><li>区分层次的目的是为了 <mark>高内聚低耦合</mark> 的思想</li><li>在软件体系架构设计中，分层式结构是最常见，也是最重要的一种结构</li></ul></div><ul><li>微软推荐的分层式结构一般分为三层，从上至下分别为 <ul><li>表示层</li><li>业务逻辑层</li><li>数据访问层（也称之为持久层）</li></ul></li></ul><p><img src="'+i+'" alt=""></p><table><thead><tr><th>层</th><th>作用</th></tr></thead><tbody><tr><td>表示层</td><td>接收用户请求，返回数据，为客户端提供应用程序的访问</td></tr><tr><td>业务逻辑层</td><td>负责操作数据层，组合数据层的操作</td></tr><tr><td>数据访问层</td><td>取决于数据层是否包含逻辑处理，各个函数主要完成对各个数据文件的操作，不必管其他操作</td></tr></tbody></table><h3 id="_2-简单实现" tabindex="-1"><a class="header-anchor" href="#_2-简单实现" aria-hidden="true">#</a> 2.简单实现</h3><p><img src="'+u+`" alt=""></p><h2 id="二-项目准备" tabindex="-1"><a class="header-anchor" href="#二-项目准备" aria-hidden="true">#</a> （二）项目准备</h2><h3 id="_1-使用-express-脚手架搭建项目" tabindex="-1"><a class="header-anchor" href="#_1-使用-express-脚手架搭建项目" aria-hidden="true">#</a> 1.使用 Express 脚手架搭建项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 全局安装 express 脚手架</span>
<span class="token function">npm</span> i <span class="token parameter variable">-g</span> express-generator

<span class="token comment"># 查看脚手架版本</span>
express <span class="token parameter variable">--version</span>

<span class="token comment"># 创建项目</span>
express 项目名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;00mypractice&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node ./bin/www&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;cookie-parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~1.4.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;debug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~2.6.9&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;express&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~4.16.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;http-errors&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~1.6.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;jade&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~1.11.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;morgan&quot;</span><span class="token operator">:</span> <span class="token string">&quot;~1.9.0&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-修改端口和启动输出" tabindex="-1"><a class="header-anchor" href="#_2-修改端口和启动输出" aria-hidden="true">#</a> 2.修改端口和启动输出</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// bin/www</span>
<span class="token keyword">var</span> port <span class="token operator">=</span> <span class="token function">normalizePort</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token string">&quot;3001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">onListening</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> addr <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> bind <span class="token operator">=</span> <span class="token keyword">typeof</span> addr <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">?</span> <span class="token string">&quot;pipe &quot;</span> <span class="token operator">+</span> addr <span class="token operator">:</span> <span class="token string">&quot;port &quot;</span> <span class="token operator">+</span> addr<span class="token punctuation">.</span>port<span class="token punctuation">;</span>
  <span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Listening on &quot;</span> <span class="token operator">+</span> bind<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器端已启动，监听 3001 端口...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-按照三层架构修改目录" tabindex="-1"><a class="header-anchor" href="#_3-按照三层架构修改目录" aria-hidden="true">#</a> 3.按照三层架构修改目录</h3><p><img src="`+r+`" alt=""></p><table><thead><tr><th>目录</th><th>含义</th></tr></thead><tbody><tr><td>routes</td><td>表示层</td></tr><tr><td>service</td><td>业务逻辑层</td></tr><tr><td>dao</td><td>数据访问层</td></tr><tr><td>public</td><td>静态文件目录</td></tr></tbody></table><h4 id="_1-移除模板引擎" tabindex="-1"><a class="header-anchor" href="#_1-移除模板引擎" aria-hidden="true">#</a> 1）移除模板引擎</h4><ul><li>删除 views 目录</li><li>删除 app.js 中对 views 目录的引用</li></ul><h4 id="_2-全局安装-nodemon" tabindex="-1"><a class="header-anchor" href="#_2-全局安装-nodemon" aria-hidden="true">#</a> 2）全局安装 nodemon</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> nodemon
nodemon <span class="token function">npm</span> start

<span class="token comment"># npm start # 需要配置启动脚本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置启动脚本</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon -x npm run server&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node ./bin/www&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-连接-mysql-数据库" tabindex="-1"><a class="header-anchor" href="#_4-连接-mysql-数据库" aria-hidden="true">#</a> 4.连接 MySQL 数据库</h3><h4 id="_1-安装-sequelize-和-mysql2-驱动" tabindex="-1"><a class="header-anchor" href="#_1-安装-sequelize-和-mysql2-驱动" aria-hidden="true">#</a> 1）安装 Sequelize 和 MySQL2 驱动</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;mysql2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.3.3&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sequelize&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.13.0&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-创建数据库并配置连接" tabindex="-1"><a class="header-anchor" href="#_2-创建数据库并配置连接" aria-hidden="true">#</a> 2）创建数据库并配置连接</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/dbConnect.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Sequelize <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;sequelize&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建数据库连接</span>
<span class="token keyword">const</span> sequelize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sequelize</span><span class="token punctuation">(</span><span class="token string">&quot;mysite&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123123&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">logging</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> sequelize<span class="token punctuation">;</span>

<span class="token comment">// 测试连接</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> sequelize<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Connection has been established successfully.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to connect to the database:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-入口文件引入数据库" tabindex="-1"><a class="header-anchor" href="#_3-入口文件引入数据库" aria-hidden="true">#</a> 3）入口文件引入数据库</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./dao/dbConnect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-提取配置信息到单独文件" tabindex="-1"><a class="header-anchor" href="#_5-提取配置信息到单独文件" aria-hidden="true">#</a> 5.提取配置信息到单独文件</h3><h4 id="_1-安装第三方库" tabindex="-1"><a class="header-anchor" href="#_1-安装第三方库" aria-hidden="true">#</a> 1）安装第三方库</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i dotenv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-根目录新建环境变量文件" tabindex="-1"><a class="header-anchor" href="#_2-根目录新建环境变量文件" aria-hidden="true">#</a> 2）根目录新建环境变量文件</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># .env</span>
DB_NAME=mysite
DB_USER=root
DB_PASS=123123
DB_HOST=localhost
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-入口文件引入数据库-1" tabindex="-1"><a class="header-anchor" href="#_3-入口文件引入数据库-1" aria-hidden="true">#</a> 3）入口文件引入数据库</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token comment">// 默认读取项目根目录下的 .env 环境变量文件</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;dotenv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 引入数据库</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./dao/dbConnect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-数据库配置文件中使用" tabindex="-1"><a class="header-anchor" href="#_4-数据库配置文件中使用" aria-hidden="true">#</a> 4）数据库配置文件中使用</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> sequelize <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sequelize</span><span class="token punctuation">(</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_NAME</span><span class="token punctuation">,</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_USER</span><span class="token punctuation">,</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_PASS</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">host</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DB_HOST</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">logging</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-编写错误处理类" tabindex="-1"><a class="header-anchor" href="#三-编写错误处理类" aria-hidden="true">#</a> （三）编写错误处理类</h2><h3 id="_1-业务处理错误基类" tabindex="-1"><a class="header-anchor" href="#_1-业务处理错误基类" aria-hidden="true">#</a> 1.业务处理错误基类</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/errors.js</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> formatResponse <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./tool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">ServiceError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * 构造函数
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">message</span> 错误消息
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">code</span> 错误消息码
   */</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message<span class="token punctuation">,</span> code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * 以JSON格式将错误信息响应给客户端
   */</span>
  <span class="token function">toResponseJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-自定义错误" tabindex="-1"><a class="header-anchor" href="#_2-自定义错误" aria-hidden="true">#</a> 2.自定义错误</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 文件上传错误
 */</span>
exports<span class="token punctuation">.</span>UploadError <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ServiceError <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token number">413</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 禁止访问错误
 */</span>
exports<span class="token punctuation">.</span>ForbiddenError <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ServiceError <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 验证错误
 */</span>
exports<span class="token punctuation">.</span>ValidationError <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ServiceError <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token number">406</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 无资源错误
 */</span>
exports<span class="token punctuation">.</span>NotfoundError <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ServiceError <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;Not found&quot;</span><span class="token punctuation">,</span> <span class="token number">406</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 未知错误
 */</span>
exports<span class="token punctuation">.</span>UnknownError <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ServiceError <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;Server internal error&quot;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>ServiceError <span class="token operator">=</span> ServiceError<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-实现登录功能" tabindex="-1"><a class="header-anchor" href="#四-实现登录功能" aria-hidden="true">#</a> （四）实现登录功能</h2><h3 id="_1-定义管理员数据模型" tabindex="-1"><a class="header-anchor" href="#_1-定义管理员数据模型" aria-hidden="true">#</a> 1.定义管理员数据模型</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/model/adminModel.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> DataTypes <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;sequelize&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sequelize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../dbConnect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 定义数据模型</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> sequelize<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span>
  <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">loginId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>
      <span class="token literal-property property">allowNull</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>
      <span class="token literal-property property">allowNull</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loginPwd</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">,</span>
      <span class="token literal-property property">allowNull</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">freezeTableName</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">updatedAt</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-初始化数据库" tabindex="-1"><a class="header-anchor" href="#_2-初始化数据库" aria-hidden="true">#</a> 2.初始化数据库</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/db.js</span>
<span class="token comment">// 数据库连接实例</span>
<span class="token keyword">const</span> sequelize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./dbConnect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 数据模型</span>
<span class="token keyword">const</span> adminModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./model/adminModel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> md5 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;md5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 同步数据模型和数据表</span>
  <span class="token keyword">await</span> sequelize<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">alter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 同步完成后部分表生成初始化数据</span>
  <span class="token keyword">const</span> adminCount <span class="token operator">=</span> <span class="token keyword">await</span> adminModel<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>adminCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 该表没有数据</span>
    <span class="token keyword">await</span> adminModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;超级管理员&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">loginPwd</span><span class="token operator">:</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;初始化管理员数据完毕...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;数据库数据同步完毕...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-定义路由层" tabindex="-1"><a class="header-anchor" href="#_3-定义路由层" aria-hidden="true">#</a> 3.定义路由层</h3><h4 id="_1-定义-api-接口" tabindex="-1"><a class="header-anchor" href="#_1-定义-api-接口" aria-hidden="true">#</a> 1）定义 API 接口</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// routes/admin.js</span>
<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> loginService <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../service/adminService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 管理员登录</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 请求时会拼接 app.js 中的一级路由 —— /api/admin/login</span>

  <span class="token comment">// 校验验证码</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>captcha<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>captcha<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;验证码错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loginService</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-引入" tabindex="-1"><a class="header-anchor" href="#_2-引入" aria-hidden="true">#</a> 2）引入</h4><ul><li>要在初始化数据库后引入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token keyword">const</span> adminRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./routes/admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;/api/admin&quot;</span><span class="token punctuation">,</span> adminRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-定义业务逻辑层" tabindex="-1"><a class="header-anchor" href="#_4-定义业务逻辑层" aria-hidden="true">#</a> 4.定义业务逻辑层</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/adminService.js</span>
<span class="token keyword">const</span> md5 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;md5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> loginDao <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../dao/adminDao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 登录</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">loginService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">loginInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  loginInfo<span class="token punctuation">.</span>loginPwd <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>loginInfo<span class="token punctuation">.</span>loginPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 数据验证 —— 查询数据库</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loginDao</span><span class="token punctuation">(</span>loginInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>dataValues<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO 添加token</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-定义数据层" tabindex="-1"><a class="header-anchor" href="#_5-定义数据层" aria-hidden="true">#</a> 5.定义数据层</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/adminDao.js</span>
<span class="token keyword">const</span> adminModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./model/adminModel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 登录</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">loginDao</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">loginInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> adminModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> loginInfo<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
      <span class="token literal-property property">loginPwd</span><span class="token operator">:</span> loginInfo<span class="token punctuation">.</span>loginPwd<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">三层架构流程</p><ol><li>客户端请求 API 接口 <code>/api/admin/login</code></li><li>先执行服务器路由层 <code>routes/admin.js</code></li><li>如果需要处理业务逻辑，转去执行业务逻辑层 <code>service/adminService.js</code></li><li>如果需要操作数据库，转去执行数据层 <code>dao/adminDao.js</code></li><li>数据层通过模型操作数据库 <code>dao/model/adminModel.js</code></li><li>最后数据从数据层依次返回到路由层，响应给客户端</li></ol></div><h2 id="五-token-的生成和验证" tabindex="-1"><a class="header-anchor" href="#五-token-的生成和验证" aria-hidden="true">#</a> （五）token 的生成和验证</h2><h3 id="_1-安装第三方库-1" tabindex="-1"><a class="header-anchor" href="#_1-安装第三方库-1" aria-hidden="true">#</a> 1.安装第三方库</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;jsonwebtoken&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^8.5.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;express-jwt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.1.0&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-完善登录业务逻辑" tabindex="-1"><a class="header-anchor" href="#_2-完善登录业务逻辑" aria-hidden="true">#</a> 2.完善登录业务逻辑</h3><ul><li>生成 token</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">loginService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">loginInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  loginInfo<span class="token punctuation">.</span>loginPwd <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>loginInfo<span class="token punctuation">.</span>loginPwd<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 数据验证 —— 查询数据库</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loginDao</span><span class="token punctuation">(</span>loginInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>dataValues<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 添加token</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> data<span class="token punctuation">.</span>dataValues<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> data<span class="token punctuation">.</span>dataValues<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> data<span class="token punctuation">.</span>dataValues<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 是否登录七天</span>
    <span class="token keyword">const</span> loginPeriod <span class="token operator">=</span> loginInfo<span class="token punctuation">.</span>remember <span class="token operator">?</span> <span class="token operator">+</span>loginInfo<span class="token punctuation">.</span>remember <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// 生成token</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> loginPeriod<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      token<span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-完善登录路由处理" tabindex="-1"><a class="header-anchor" href="#_3-完善登录路由处理" aria-hidden="true">#</a> 3.完善登录路由处理</h3><h4 id="_1-定义格式化响应信息工具函数" tabindex="-1"><a class="header-anchor" href="#_1-定义格式化响应信息工具函数" aria-hidden="true">#</a> 1）定义格式化响应信息工具函数</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/tool.js</span>
<span class="token doc-comment comment">/**
 * 格式化响应信息
 * <span class="token punctuation">{</span>
 *    &quot;code&quot;: code,
 *    &quot;msg&quot;: msg,
 *    &quot;data&quot;: data
 * <span class="token punctuation">}</span>
 */</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">formatResponse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    code<span class="token punctuation">,</span>
    msg<span class="token punctuation">,</span>
    data<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-路由层处理" tabindex="-1"><a class="header-anchor" href="#_2-路由层处理" aria-hidden="true">#</a> 2）路由层处理</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> formatResponse <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../utils/tool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 请求时会拼接 app.js 中的一级路由 —— /api/admin/login</span>

  <span class="token comment">// TODO 校验验证码</span>

  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loginService</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;authentication&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-验证-token" tabindex="-1"><a class="header-anchor" href="#_3-验证-token" aria-hidden="true">#</a> 3）验证 token</h4><ul><li>在路由中间件之前配置验证接口</li><li>如果验证失败，不会调用路由中间件</li><li>直接执行错误处理中间件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token keyword">const</span> expressJWT <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express-jwt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 引入路由</span>
<span class="token keyword">const</span> adminRouter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./routes/admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 配置验证token接口</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token function">expressJWT</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token function">md5</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">algorithms</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;HS256&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 新版本express-jwt要求必须指定算法</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unless</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 需要排除token验证的路由</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;/api/admin/login&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 使用路由中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&quot;/api/admin&quot;</span><span class="token punctuation">,</span> adminRouter<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>解析 token</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/tool.js</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;jsonwebtoken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> md5 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;md5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">analysisToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">token</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>路由层恢复登录</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// routes/admin.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> analysisToken <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../utils/tool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/whoami&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 解析token</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">analysisToken</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>
    <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> token<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> token<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> token<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>错误处理中间件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> ForbiddenError <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./utils/errors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;UnauthorizedError&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// token验证错误</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ForbiddenError</span><span class="token punctuation">(</span><span class="token string">&quot;未登录，或者登录凭证已过期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toResponseJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">ServiceError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">toResponseJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UnknownError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toResponseJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六-完成管理员模块" tabindex="-1"><a class="header-anchor" href="#六-完成管理员模块" aria-hidden="true">#</a> （六）完成管理员模块</h2><h3 id="_1-定义更新管理员信息接口" tabindex="-1"><a class="header-anchor" href="#_1-定义更新管理员信息接口" aria-hidden="true">#</a> 1.定义更新管理员信息接口</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">updateAdminService</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-定义业务逻辑" tabindex="-1"><a class="header-anchor" href="#_2-定义业务逻辑" aria-hidden="true">#</a> 2.定义业务逻辑</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">updateAdminService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">accountInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 根据传入的账号信息查询管理员</span>
  <span class="token keyword">const</span> adminInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loginDao</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">loginId</span><span class="token operator">:</span> accountInfo<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
    <span class="token literal-property property">loginPwd</span><span class="token operator">:</span> <span class="token function">md5</span><span class="token punctuation">(</span>accountInfo<span class="token punctuation">.</span>oldLoginPwd<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>adminInfo <span class="token operator">&amp;&amp;</span> adminInfo<span class="token punctuation">.</span>dataValues<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 修改密码</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">updateAdminDao</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> accountInfo<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
      <span class="token literal-property property">loginPwd</span><span class="token operator">:</span> <span class="token function">md5</span><span class="token punctuation">(</span>accountInfo<span class="token punctuation">.</span>loginPwd<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> accountInfo<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> adminInfo<span class="token punctuation">.</span>dataValues<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> accountInfo<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> accountInfo<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 密码不正确</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;旧密码不正确&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-定义数据交互" tabindex="-1"><a class="header-anchor" href="#_3-定义数据交互" aria-hidden="true">#</a> 3.定义数据交互</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">updateAdminDao</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> adminModel<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>newInfo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">loginId</span><span class="token operator">:</span> newInfo<span class="token punctuation">.</span>loginId<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-express-捕获异步错误" tabindex="-1"><a class="header-anchor" href="#_4-express-捕获异步错误" aria-hidden="true">#</a> 4.express 捕获异步错误</h3><ul><li>安装第三方库</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;express-async-errors&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.1.1&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>app.js 引入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 捕获异步错误</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express-async-errors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七-制作验证码" tabindex="-1"><a class="header-anchor" href="#七-制作验证码" aria-hidden="true">#</a> （七）制作验证码</h2><h3 id="_1-获取验证码并保存到-session" tabindex="-1"><a class="header-anchor" href="#_1-获取验证码并保存到-session" aria-hidden="true">#</a> 1.获取验证码并保存到 session</h3>`,94),v={href:"https://www.npmjs.com/package/express-session",target:"_blank",rel:"noopener noreferrer"},m=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// routes/captcha.js</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 生成验证码</span>
  <span class="token keyword">const</span> captcha <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getCaptchaService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 保存到session</span>
  req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>captcha <span class="token operator">=</span> captcha<span class="token punctuation">.</span>text<span class="token punctuation">;</span>
  <span class="token comment">// 设置响应头</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;images/svg+xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>captcha<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 session</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express-session&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">secret</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SESSION_SECRET</span><span class="token punctuation">,</span>
    <span class="token literal-property property">resave</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">saveUninitialized</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-生成验证码" tabindex="-1"><a class="header-anchor" href="#_2-生成验证码" aria-hidden="true">#</a> 2.生成验证码</h3>`,4),b={href:"https://www.npmjs.com/package/svg-captcha",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/captchaService.js</span>
<span class="token keyword">const</span> svgCaptcha <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;svg-captcha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">getCaptchaService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> svgCaptcha<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ignoreChars</span><span class="token operator">:</span> <span class="token string">&quot;iIl10Oo&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">noise</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="八-完成首页标语模块" tabindex="-1"><a class="header-anchor" href="#八-完成首页标语模块" aria-hidden="true">#</a> （八）完成首页标语模块</h2><h2 id="九-实现上传文件功能" tabindex="-1"><a class="header-anchor" href="#九-实现上传文件功能" aria-hidden="true">#</a> （九）实现上传文件功能</h2>`,3),y={href:"https://www.npmjs.com/package/multer",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/expressjs/multer",target:"_blank",rel:"noopener noreferrer"},f=p(`<h3 id="_1-工具函数" tabindex="-1"><a class="header-anchor" href="#_1-工具函数" aria-hidden="true">#</a> 1.工具函数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/tool.js</span>
<span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;multer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> storage <span class="token operator">=</span> multer<span class="token punctuation">.</span><span class="token function">diskStorage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 文件存储位置</span>
  <span class="token function-variable function">destination</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> __dirname <span class="token operator">+</span> <span class="token string">&quot;/../public/static/uploads&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 处理上传文件的文件名</span>
  <span class="token function-variable function">filename</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> file<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取后缀名</span>
    <span class="token keyword">const</span> extname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取文件名</span>
    <span class="token keyword">const</span> basename <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originalname<span class="token punctuation">,</span> extname<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newName <span class="token operator">=</span>
      basename <span class="token operator">+</span>
      <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">9000</span> <span class="token operator">+</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">+</span>
      extname<span class="token punctuation">;</span>
    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>uploading <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  storage<span class="token punctuation">,</span>
  <span class="token literal-property property">limits</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fileSize</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>
    <span class="token literal-property property">files</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-api-接口" tabindex="-1"><a class="header-anchor" href="#_2-api-接口" aria-hidden="true">#</a> 2.API 接口</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;multer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> UploadError <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../utils/errors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> uploading<span class="token punctuation">,</span> formatResponse <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../utils/tool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 参数是前端上传控件的name值</span>
  <span class="token keyword">const</span> upload <span class="token operator">=</span> uploading<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">upload</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">multer<span class="token punctuation">.</span>MulterError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UploadError</span><span class="token punctuation">(</span><span class="token string">&quot;上传文件失败，请检查文件大小，控制在2MB内&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/static/uploads/&quot;</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十-完成文章类型模块" tabindex="-1"><a class="header-anchor" href="#十-完成文章类型模块" aria-hidden="true">#</a> （十）完成文章类型模块</h2>`,5),w={href:"https://validatejs.org/",target:"_blank",rel:"noopener noreferrer"},q=p(`<h3 id="_1-安装验证第三方库" tabindex="-1"><a class="header-anchor" href="#_1-安装验证第三方库" aria-hidden="true">#</a> 1.安装验证第三方库</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;validate.js&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.13.1&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-业务逻辑层验证数据" tabindex="-1"><a class="header-anchor" href="#_2-业务逻辑层验证数据" aria-hidden="true">#</a> 2.业务逻辑层验证数据</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/blogTypeService.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> validate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;validate.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 新增博客分类</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">addBlogTypeService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newBlogTypeInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 数据验证规则</span>
  <span class="token keyword">const</span> blogTypeRule <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">presence</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowEmpty</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">presence</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowEmpty</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// 进行数据验证</span>
  <span class="token keyword">const</span> validateResult <span class="token operator">=</span> validate<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>newBlogTypeInfo<span class="token punctuation">,</span> blogTypeRule<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>validateResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 验证通过</span>
    newBlogTypeInfo<span class="token punctuation">.</span>articleCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 因为是新增的文章分类，所以一开始文章数量为 0</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">addBlogTypeDao</span><span class="token punctuation">(</span>newBlogTypeInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 验证失败</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;数据验证失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十一-完成文章模块" tabindex="-1"><a class="header-anchor" href="#十一-完成文章模块" aria-hidden="true">#</a> （十一）完成文章模块</h2><h3 id="_1-定义模型之间的关联关系" tabindex="-1"><a class="header-anchor" href="#_1-定义模型之间的关联关系" aria-hidden="true">#</a> 1.定义模型之间的关联关系</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/db.js</span>
<span class="token keyword">const</span> blogTypeModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./model/blogTypeModel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> blogModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./model/blogModel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 定义模型之间的关联关系</span>
  blogTypeModel<span class="token punctuation">.</span><span class="token function">hasMany</span><span class="token punctuation">(</span>blogModel<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&quot;categoryId&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">targetKey</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  blogModel<span class="token punctuation">.</span><span class="token function">belongsTo</span><span class="token punctuation">(</span>blogTypeModel<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foreignKey</span><span class="token operator">:</span> <span class="token string">&quot;categoryId&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">targetKey</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
    <span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&quot;category&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;数据库数据同步完毕...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-扩展验证规则" tabindex="-1"><a class="header-anchor" href="#_2-扩展验证规则" aria-hidden="true">#</a> 2.扩展验证规则</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/blogService.js</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> validate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;validate.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

validate<span class="token punctuation">.</span>validators<span class="token punctuation">.</span><span class="token function-variable function">categoryIdIsExist</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> blogTypeInfo <span class="token operator">=</span> blogTypeModel<span class="token punctuation">.</span><span class="token function">findByPk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>blogTypeInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token string">&quot;CategoryId Is Not Exist&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-异步验证" tabindex="-1"><a class="header-anchor" href="#_3-异步验证" aria-hidden="true">#</a> 3.异步验证</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/blogService.js</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">addBlogService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newBlogInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// TODO 处理 TOC</span>

  <span class="token comment">// 将处理好的TOC格式转为字符串</span>
  newBlogInfo<span class="token punctuation">.</span>toc <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;[&quot;a&quot;:&quot;b&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 初始化新文章的其他信息</span>
  newBlogInfo<span class="token punctuation">.</span>scanNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 阅读量初始化为 0</span>
  newBlogInfo<span class="token punctuation">.</span>commentNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 评论数初始化为 0</span>

  <span class="token comment">// 定义验证规则</span>
  <span class="token keyword">const</span> blogRule <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ......</span>
    <span class="token literal-property property">categoryId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">presence</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;integer&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">categoryIdIsExist</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 验证数据</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// 因为扩展的验证规则里面涉及到异步的操作，所以要采用异步的验证方式</span>
    <span class="token keyword">await</span> validate<span class="token punctuation">.</span><span class="token function">async</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">,</span> blogRule<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">addBlogDao</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 新增</span>
    <span class="token comment">// 文章新增了，对应的文章分类也应该新增</span>
    <span class="token keyword">await</span> <span class="token function">addBlogToType</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">.</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 验证未通过</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;数据验证失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-根据-id-新增文章分类" tabindex="-1"><a class="header-anchor" href="#_4-根据-id-新增文章分类" aria-hidden="true">#</a> 4.根据 id 新增文章分类</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/blogTypeDao.js</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">addBlogToType</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> blogTypeModel<span class="token punctuation">.</span><span class="token function">findByPk</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  data<span class="token punctuation">.</span>articleCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> data<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十二-处理-toc-目录" tabindex="-1"><a class="header-anchor" href="#十二-处理-toc-目录" aria-hidden="true">#</a> （十二）处理 TOC 目录</h2><h3 id="_1-安装第三方库-2" tabindex="-1"><a class="header-anchor" href="#_1-安装第三方库-2" aria-hidden="true">#</a> 1.安装第三方库</h3>`,15),j={href:"https://github.com/jonschlinkert/markdown-toc",target:"_blank",rel:"noopener noreferrer"},x=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;markdown-toc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.2.0&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-定义业务逻辑-1" tabindex="-1"><a class="header-anchor" href="#_2-定义业务逻辑-1" aria-hidden="true">#</a> 2.定义业务逻辑</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/blogService.js</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">addBlogService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newBlogInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 处理TOC</span>
  newBlogInfo <span class="token operator">=</span> <span class="token function">handleTOC</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 将处理好的TOC格式转为字符串</span>
  newBlogInfo<span class="token punctuation">.</span>toc <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">.</span>toc<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ......</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-定义工具函数" tabindex="-1"><a class="header-anchor" href="#_3-定义工具函数" aria-hidden="true">#</a> 3.定义工具函数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/tool.js</span>
<span class="token keyword">const</span> toc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;markdown-toc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">handleTOC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">toc</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>markdownContent<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">;</span>

  <span class="token comment">// 经过上面 toc 方法的处理，就将整个 markdown 里面的标题全部提取出来了</span>
  <span class="token comment">// 形成一个数组，数组里面是一个个对象，每个对象记录了标题的名称以及等级，如下：</span>

  <span class="token comment">// [</span>
  <span class="token comment">//     { content: &#39;数值类型概述&#39;, slug: &#39;数值类型概述&#39;, lvl: 2, i: 0, seen: 0 },</span>
  <span class="token comment">//     { content: &#39;整数和浮点数&#39;, slug: &#39;整数和浮点数&#39;, lvl: 3, i: 1, seen: 0 },</span>
  <span class="token comment">//     { content: &#39;数值精度&#39;, slug: &#39;数值精度&#39;, lvl: 4, i: 2, seen: 0 },</span>
  <span class="token comment">//     { content: &#39;数值范围&#39;, slug: &#39;数值范围&#39;, lvl: 3, i: 3, seen: 0 },</span>
  <span class="token comment">//     { content: &#39;数值的表示方法&#39;, slug: &#39;数值的表示方法&#39;, lvl: 2, i: 4, seen: 0 }</span>
  <span class="token comment">// ]</span>

  <span class="token comment">// 但是这不是我们想要的格式，我们想要转换为</span>
  <span class="token comment">// [</span>
  <span class="token comment">//     { &quot;name&quot;: &quot;章节1&quot;, &quot;anchor&quot;: &quot;title-1&quot; },</span>
  <span class="token comment">//     { &quot;name&quot;: &quot;章节2&quot;, &quot;anchor&quot;: &quot;title-2&quot;,</span>
  <span class="token comment">//         &quot;children&quot;: [</span>
  <span class="token comment">//             { &quot;name&quot;: &quot;章节2-1&quot;, &quot;anchor&quot;: &quot;title-2-1&quot; },</span>
  <span class="token comment">//             { &quot;name&quot;: &quot;章节2-2&quot;, &quot;anchor&quot;: &quot;title-2-2&quot; },</span>
  <span class="token comment">//         ]</span>
  <span class="token comment">//     }</span>
  <span class="token comment">// ]</span>

  <span class="token comment">// 转换格式</span>
  <span class="token keyword">const</span> <span class="token function-variable function">transfer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">flatArr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 创建toc对象</span>
    <span class="token keyword">const</span> <span class="token function-variable function">createTOCItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> item<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
      <span class="token literal-property property">author</span><span class="token operator">:</span> item<span class="token punctuation">.</span>slug<span class="token punctuation">,</span>
      <span class="token literal-property property">level</span><span class="token operator">:</span> item<span class="token punctuation">.</span>lvl<span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 处理toc子级对象</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleTOCItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// stack为空返回undefined，stack不为空则返回最后一个元素【栈顶】</span>
      <span class="token keyword">const</span> top <span class="token operator">=</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>top<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>level <span class="token operator">&gt;</span> top<span class="token punctuation">.</span>level<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// toc等级比栈顶（上一个toc对象）大，应该成为上一个toc对象的子级</span>
        top<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">handleTOCItem</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// 标题最小级别</span>
    <span class="token keyword">let</span> min <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token comment">// 寻找最小级别的标题</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">of</span> flatArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>lvl <span class="token operator">&lt;</span> min<span class="token punctuation">)</span> min <span class="token operator">=</span> i<span class="token punctuation">.</span>lvl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> flatArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tocItem <span class="token operator">=</span> <span class="token function">createTOCItem</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tocItem<span class="token punctuation">.</span>level <span class="token operator">===</span> min<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 当前目录不会是children</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tocItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 有可能是其他目录的子级</span>
      <span class="token function">handleTOCItem</span><span class="token punctuation">(</span>tocItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  info<span class="token punctuation">.</span>toc <span class="token operator">=</span> <span class="token function">transfer</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">delete</span> info<span class="token punctuation">.</span>markdownContent<span class="token punctuation">;</span>

  <span class="token comment">// 为各个级别的标题添加id</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">of</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newStr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>lvl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
        newStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1 id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span>htmlContent <span class="token operator">=</span> info<span class="token punctuation">.</span>htmlContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;&quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
        newStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h2 id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span>htmlContent <span class="token operator">=</span> info<span class="token punctuation">.</span>htmlContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h2&gt;&quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
        newStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h3 id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span>htmlContent <span class="token operator">=</span> info<span class="token punctuation">.</span>htmlContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h3&gt;&quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
        newStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h4 id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span>htmlContent <span class="token operator">=</span> info<span class="token punctuation">.</span>htmlContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h4&gt;&quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
        newStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h5 id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span>htmlContent <span class="token operator">=</span> info<span class="token punctuation">.</span>htmlContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h5&gt;&quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
        newStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h6 id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        info<span class="token punctuation">.</span>htmlContent <span class="token operator">=</span> info<span class="token punctuation">.</span>htmlContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h6&gt;&quot;</span><span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> info<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十三-完成项目管理模块" tabindex="-1"><a class="header-anchor" href="#十三-完成项目管理模块" aria-hidden="true">#</a> （十三）完成项目管理模块</h2><h2 id="十四-完成评论管理和留言板模块" tabindex="-1"><a class="header-anchor" href="#十四-完成评论管理和留言板模块" aria-hidden="true">#</a> （十四）完成评论管理和留言板模块</h2><h3 id="_1-随机生成头像地址" tabindex="-1"><a class="header-anchor" href="#_1-随机生成头像地址" aria-hidden="true">#</a> 1.随机生成头像地址</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// service/messageService.js</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dir <span class="token operator">=</span> <span class="token string">&quot;./public/static/avatar&quot;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 读取一个目录下有多少个文件
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">dir</span> 目录地址
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">readDirLength</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnknownError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 新增评论或者留言</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">addMessageService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newMessage</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 数据验证规则</span>
  <span class="token keyword">const</span> messageRule <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">nickname</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">presence</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowEmpty</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">presence</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowEmpty</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">blogId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 进行数据验证</span>
  <span class="token keyword">const</span> validateResult <span class="token operator">=</span> validate<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>newMessage<span class="token punctuation">,</span> messageRule<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>validateResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newMessage<span class="token punctuation">.</span>blogId <span class="token operator">=</span> newMessage<span class="token punctuation">.</span>blogId <span class="token operator">?</span> newMessage<span class="token punctuation">.</span>blogId <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    newMessage<span class="token punctuation">.</span>createDate <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 有一个头像的地址，该头像是随机生成的</span>
    <span class="token comment">// 读取 static 下面的 avatar 目录</span>
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readDirLength</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 随机摇一个文件出来</span>
    <span class="token keyword">const</span> randomIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> files<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    newMessage<span class="token punctuation">.</span>avatar <span class="token operator">=</span> <span class="token string">&quot;/static/avatar/&quot;</span> <span class="token operator">+</span> files<span class="token punctuation">[</span>randomIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// 接下来开始新增</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">addMessageDao</span><span class="token punctuation">(</span>newMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 如果是文章的评论，那么对应文章的评论数量也要自增</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newMessage<span class="token punctuation">.</span>blogId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> blogData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findBlogByIdDao</span><span class="token punctuation">(</span>newMessage<span class="token punctuation">.</span>blogId<span class="token punctuation">)</span><span class="token punctuation">;</span>
      blogData<span class="token punctuation">.</span>commentNumber<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> blogData<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;数据验证失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-分页获取评论或留言" tabindex="-1"><a class="header-anchor" href="#_2-分页获取评论或留言" aria-hidden="true">#</a> 2.分页获取评论或留言</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dao/messageDao.js</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">findMessageByPageDao</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">pageInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果有 blogid，说明是获取对应 blogid 的文章评论，如果没有，说明是获取留言</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span>blogid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这边又分为两种情况，获取所有的文章评论，还有一种就是获取对应文章的评论</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span>blogid <span class="token operator">===</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 返回所有评论</span>
      <span class="token keyword">return</span> <span class="token keyword">await</span> messageModel<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageInfo<span class="token punctuation">.</span>limit<span class="token punctuation">,</span>
        <span class="token literal-property property">limit</span><span class="token operator">:</span> pageInfo<span class="token punctuation">.</span>limit <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">blogId</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">[</span>Op<span class="token punctuation">.</span>ne<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">model</span><span class="token operator">:</span> blogModel<span class="token punctuation">,</span>
            <span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&quot;blog&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// 返回对应文章的评论</span>
      <span class="token keyword">return</span> <span class="token keyword">await</span> messageModel<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageInfo<span class="token punctuation">.</span>limit<span class="token punctuation">,</span>
        <span class="token literal-property property">limit</span><span class="token operator">:</span> pageInfo<span class="token punctuation">.</span>limit <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">blogId</span><span class="token operator">:</span> pageInfo<span class="token punctuation">.</span>blogid <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;createDate&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DESC&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取留言</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> messageModel<span class="token punctuation">.</span><span class="token function">findAndCountAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span>page <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> pageInfo<span class="token punctuation">.</span>limit<span class="token punctuation">,</span>
      <span class="token literal-property property">limit</span><span class="token operator">:</span> pageInfo<span class="token punctuation">.</span>limit <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">blogId</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;createDate&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DESC&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="十五-完成全局设置和关于模块" tabindex="-1"><a class="header-anchor" href="#十五-完成全局设置和关于模块" aria-hidden="true">#</a> （十五）完成全局设置和关于模块</h2><h2 id="十六-完善项目细节" tabindex="-1"><a class="header-anchor" href="#十六-完善项目细节" aria-hidden="true">#</a> （十六）完善项目细节</h2><h3 id="_1-删除文章时删除相应的评论" tabindex="-1"><a class="header-anchor" href="#_1-删除文章时删除相应的评论" aria-hidden="true">#</a> 1.删除文章时删除相应的评论</h3><ul><li>blogService.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">deleteBlogService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 根据 id 查询到该篇文章的信息</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findBlogByIdDao</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 根据该文章对应的分类，该分类下的文章数量自减</span>
  <span class="token keyword">const</span> categoryInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findOneBlogTypeDao</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>dataValues<span class="token punctuation">.</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>
  categoryInfo<span class="token punctuation">.</span>articleCount<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> categoryInfo<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 删除该文章下所对应的评论</span>
  <span class="token keyword">await</span> <span class="token function">deleteMessageByBlogIdDao</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 删除文章</span>
  <span class="token keyword">await</span> <span class="token function">deleteBlogDao</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>messageDao.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 删除评论（传入的 id 是 message 表中的 blogId）</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">deleteMessageByBlogIdDao</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">blogId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> messageModel<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      blogId<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-删除博客分类时返回受影响的文章数量" tabindex="-1"><a class="header-anchor" href="#_2-删除博客分类时返回受影响的文章数量" aria-hidden="true">#</a> 2.删除博客分类时返回受影响的文章数量</h3><ul><li>blogTypeService.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">deleteBlogTypeService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">blogCountByBlogType</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">deleteBlogTypeDao</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 返回受影响的文章的数量</span>
  <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>blogDao.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 根据博客类别 id，统计对应该博客类型 id 的博文数量</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">blogCountByBlogType</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">categoryId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> blogModel<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      categoryId<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-修改文章时判断是否修改了博客分类" tabindex="-1"><a class="header-anchor" href="#_3-修改文章时判断是否修改了博客分类" aria-hidden="true">#</a> 3.修改文章时判断是否修改了博客分类</h3><ul><li>blogService.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">updateBlogService</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> newBlogInfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 判断正文内容有没有改变，会影响 TOC</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">.</span>htmlContent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 重新处理 TOC 目录</span>
    newBlogInfo <span class="token operator">=</span> <span class="token function">handleTOC</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    newBlogInfo<span class="token punctuation">.</span>toc <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">.</span>toc<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 判断博客分类有没有修改，如果有修改，之前的文章分类对应的文章数量要自减，新的文章分类对应的文章数量要自增</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">dataValues</span><span class="token operator">:</span> oldBlogInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findBlogByIdDao</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">.</span>categoryId <span class="token operator">!==</span> oldBlogInfo<span class="token punctuation">.</span>categoryId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 旧的自减</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldBlogInfo<span class="token punctuation">.</span>categoryId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> oldBlogType <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findOneBlogTypeDao</span><span class="token punctuation">(</span>oldBlogInfo<span class="token punctuation">.</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>
      oldBlogType<span class="token punctuation">.</span>articleCount<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> oldBlogType<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 新的自增</span>
    <span class="token keyword">const</span> newBlogType <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findOneBlogTypeDao</span><span class="token punctuation">(</span>newBlogInfo<span class="token punctuation">.</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    newBlogType<span class="token punctuation">.</span>articleCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> newBlogType<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> dataValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">updateBlogDao</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> newBlogInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">formatResponse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> dataValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26);function _(I,S){const s=o("ExternalLinkIcon");return c(),l("div",null,[d,n("blockquote",null,[n("p",null,[n("a",v,[a("express-session"),t(s)])])]),m,n("blockquote",null,[n("p",null,[n("a",b,[a("svg-captcha"),t(s)])])]),g,n("ul",null,[n("li",null,[n("a",y,[a("multer"),t(s)])]),n("li",null,[n("a",h,[a("GitHub 地址"),t(s)])])]),f,n("blockquote",null,[n("p",null,[n("a",w,[a("Validate.js"),t(s)])])]),q,n("blockquote",null,[n("p",null,[n("a",j,[a("markdown-toc"),t(s)])])]),x])}const C=e(k,[["render",_],["__file","03.html.vue"]]);export{C as default};
