import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-ec5d5d22.js";const t={},p=e(`<h2 id="_1-定义语法" tabindex="-1"><a class="header-anchor" href="#_1-定义语法" aria-hidden="true">#</a> 1.定义语法</h2><ul><li>局部指令</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">指令名</span><span class="token operator">:</span> 配置对象<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//==========</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">directives</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">指令名</span><span class="token operator">:</span> 回调函数<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>全局指令</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>指令名<span class="token punctuation">,</span> 配置对象<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//==========</span>
Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>指令名<span class="token punctuation">,</span> 回调函数<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-配置对象中常见的-3-个问题" tabindex="-1"><a class="header-anchor" href="#_2-配置对象中常见的-3-个问题" aria-hidden="true">#</a> 2.配置对象中常见的 3 个问题</h2><ul><li><p>bind：指令与元素成功绑定时调用。</p></li><li><p>inserted：指令所在元素被插入页面时调用。</p></li><li><p>update：指令所在模板结构被重新解析时调用。</p></li></ul><h2 id="_3-备注" tabindex="-1"><a class="header-anchor" href="#_3-备注" aria-hidden="true">#</a> 3.备注</h2><ul><li><p>指令定义时不加 v-，但使用时要加 v-。</p></li><li><p>指令名如果是多个单词，要使用 kebab-case 命名方式，不要用 camelCase 命名。</p></li></ul>`,9),i=[p];function c(l,o){return a(),s("div",null,i)}const d=n(t,[["render",c],["__file","18.html.vue"]]);export{d as default};
