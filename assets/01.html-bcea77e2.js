import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c as p,a,b as n,d as t,e}from"./app-1240ea23.js";const c="/assets/HTML相关面试题01-7a8a5a76.png",r="/assets/HTML相关面试题02-32c66d74.png",u="/assets/HTML相关面试题03-b2c5b2c0.png",d="/assets/HTML相关面试题04-2b6222f5.png",h="/assets/HTML相关面试题05-d0ae0ad3.png",k="/assets/HTML相关面试题06-13b548be.png",b="/assets/HTML相关面试题07-097cd29a.png",m="/assets/HTML相关面试题08-eb761e7f.png",g={},_=e('<p><img src="'+c+`" alt=""></p><h2 id="一-文档声明" tabindex="-1"><a class="header-anchor" href="#一-文档声明" aria-hidden="true">#</a> （一）文档声明</h2><h3 id="_1-经典真题" tabindex="-1"><a class="header-anchor" href="#_1-经典真题" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>什么是 <code>&lt;!DOCTYPE&gt;</code> ？是否需要在 HTML5 中使用？</li><li>什么是严格模式与混杂模式？</li><li>列举几条怪异模式中的怪癖行为</li></ul><h3 id="_2-文档声明概念" tabindex="-1"><a class="header-anchor" href="#_2-文档声明概念" aria-hidden="true">#</a> 2.文档声明概念</h3><ul><li>HTML 文档通常以文档声明开始</li><li>作用是帮助浏览器确定其尝试解析和显示的 HTML 文档类型</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>必须是 HTML 文档的 <mark>第一行</mark>，且 <mark>顶格显示</mark>， <mark>对大小写不敏感</mark><ul><li>因为任何放在 DOCTYPE 前面的东西，比如批注或 XML 声明，会令 IE9 或更早期的浏览器触发怪异模式</li></ul></li><li>文档声明并非一个 HTML 标签，是一条“信息”，告知浏览器期望的文档类型</li></ul><h3 id="_3-文档声明的版本" tabindex="-1"><a class="header-anchor" href="#_3-文档声明的版本" aria-hidden="true">#</a> 3.文档声明的版本</h3><p><img src="`+r+'" alt=""></p><p><img src="'+u+'" alt=""></p><ul><li>HTML 版本从最开始诞生到最新的 HTML5，中间经历了很多版本</li><li>最显著的区别就是支持的 HTML 元素不同</li></ul><p><img src="'+d+'" alt=""></p>',13),v={href:"https://www.w3school.com.cn/tags/html_ref_dtd.asp",target:"_blank",rel:"noopener noreferrer"},f=e(`<ul><li>必须要书写文档声明</li><li>因为不同版本所支持的 HTML 元素类型是不同的</li><li>需要告诉浏览器以哪一种文档类型方式来解析当前的这个 HTML 文件</li></ul><h3 id="_4-旧版本的文档声明" tabindex="-1"><a class="header-anchor" href="#_4-旧版本的文档声明" aria-hidden="true">#</a> 4.旧版本的文档声明</h3><h4 id="_1-html-4-01-strict" tabindex="-1"><a class="header-anchor" href="#_1-html-4-01-strict" aria-hidden="true">#</a> 1）HTML 4.01 Strict</h4><ul><li>该 DTD 包含所有 HTML 元素和属性</li><li>但不包括展示性的和弃用的元素（比如 font）</li><li>不允许框架集 Framesets</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="token string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-html-4-01-transitional" tabindex="-1"><a class="header-anchor" href="#_2-html-4-01-transitional" aria-hidden="true">#</a> 2）HTML 4.01 Transitional</h4><ul><li>该 DTD 包含所有 HTML 元素和属性</li><li>包括展示性的和弃用的元素（比如 font）</li><li>不允许框架集 Framesets</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="token string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),q={href:"https://www.w3school.com.cn/tags/tag_doctype.asp",target:"_blank",rel:"noopener noreferrer"},T=e('<div class="hint-container info"><p class="hint-container-title">为什么格式这么长</p><ul><li>HTML5 不需要引入 DTD 文件</li><li>其他类型的文档声明需要引入 DTD 文件</li></ul></div><h3 id="_5-html-的发展历史" tabindex="-1"><a class="header-anchor" href="#_5-html-的发展历史" aria-hidden="true">#</a> 5.HTML 的发展历史</h3><ul><li>早期的 HTML 版本，如：HTML 4.01 是基于 SGML</li><li>DTD 规定的是标记语言的规则，这样浏览器才能正确地呈现内容</li><li>但是最新的 HTML5 不基于 SGML，所以不需要引用 DTD</li></ul><h4 id="_1-ml" tabindex="-1"><a class="header-anchor" href="#_1-ml" aria-hidden="true">#</a> 1）ML</h4><ul><li>ML，Markup Language，置标语言</li><li>用标准的标记来解释纯文本文档的内容，从而提供关于文档结构或文档该如何渲染的信息</li></ul><p><img src="'+h+'" alt=""></p><h4 id="_2-gml" tabindex="-1"><a class="header-anchor" href="#_2-gml" aria-hidden="true">#</a> 2）GML</h4><ul><li>第一代置标语言，使文档能明确将标示和内容分开</li><li>所有文件使用同样的标示方法</li></ul><h4 id="_3-sgml" tabindex="-1"><a class="header-anchor" href="#_3-sgml" aria-hidden="true">#</a> 3）SGML</h4><ul><li>在 GML 的基础上进行整理，形成一套非常严谨的文件描述方法</li><li>包括语法定义、DTD、文件实例</li></ul><blockquote><p>由于 SGML 太严谨，规范达 500 多页，并且不易学、不易用、难以实现，所以在它的基础上又发展出了其他的更易用的置标语言</p></blockquote><h4 id="_4-html" tabindex="-1"><a class="header-anchor" href="#_4-html" aria-hidden="true">#</a> 4）HTML</h4><ul><li>抛弃了 SGML 复杂庞大的缺点，继承了 SGML 的很多优点</li><li>最大的特点是简单性和跨平台性</li><li>只使用了 SGML 中很少的一部分标记 <ul><li>如：HTML 4.0 中只定义了 70 余种标记</li></ul></li><li>为了便于在计算机上实现，HTML 规定的标记是固定的 <ul><li>即 HTML 语法是不可扩展的</li></ul></li></ul><h4 id="_5-xhtml" tabindex="-1"><a class="header-anchor" href="#_5-xhtml" aria-hidden="true">#</a> 5）XHTML</h4><blockquote><p>随着 Web 应用的不断发展，HTML 的局限性也越来越明显地显现了出来，如：无法描述数据、可读性差、搜索时间长等</p><br><p>人们又把目光转向 SGML，再次改造使之适应现在的网络需求</p><br><p>1998 年 2 月 10 日，W3C（World Wide Web Consortium，万维网联盟）公布 XML 1.0 标准，很长一段时间 XML 都作为网络传输的标准数据格式</p><br><p>当时的 HTML 语法要求比较松散，对网页编写者来说比较方便，但是对机器来说，语言的语法越松散，处理起来就越困难</p></blockquote><ul><li>传统的计算机还有能力兼容松散语法，但对于许多其他设备，比如手机，难度就比较大</li><li>因此产生了由 DTD 定义规则，语法要求更加严格的 XHTML</li></ul>',16),M={href:"https://www.w3school.com.cn/dtd/index.asp",target:"_blank",rel:"noopener noreferrer"},x=e('<h4 id="_6-html" tabindex="-1"><a class="header-anchor" href="#_6-html" aria-hidden="true">#</a> 6）HTML</h4><ul><li>HTML5 是 HTML 的第五个修订版 <ul><li>该版本不再基于 SGML，也就不用再引入 DTD 声明</li></ul></li><li>主要的目标是将互联网语义化，以便更好地被人类和机器阅读，同时更好地支持各种媒体的嵌入</li></ul><blockquote><p>现在国内通常所说的 H5 开发，实际上是 HTML5 与 CSS3 及 ES6 的一个组合</p></blockquote><h3 id="_6-渲染模式" tabindex="-1"><a class="header-anchor" href="#_6-渲染模式" aria-hidden="true">#</a> 6.渲染模式</h3><ul><li>浏览器渲染模式分为 3 种 <ul><li>怪癖模式/混杂模式，Quirks mode</li><li>严格模式/标准模式，Standards mode</li><li>几乎标准模式，Almost standards mode</li></ul></li></ul><h4 id="_1-成因" tabindex="-1"><a class="header-anchor" href="#_1-成因" aria-hidden="true">#</a> 1）成因</h4><blockquote><p>之所以出现不同的渲染模式，是由于历史原因</p><br><p>当年 Netscape4（网景公司早期的浏览器）和 IE4（微软公司早期的浏览器）在实现 CSS 机制时，没有遵循 W3C 提出的标准。Netscape4 提供了糟糕的支持，而 IE4 虽然接近标准，但依旧未能完全正确的支持标准。</p><br><p>所以，在 W3C 标准推出以前，浏览器在对页面的渲染上没有统一规范，产生了差异（Quirks mode 或者称为 Compatibility Mode）</p><br><p>为了保障自己的网站在各个浏览器上显示正确，网页开发者们不得不依据各个浏览器自身的规范来使用 CSS，因此大部分网站的 CSS 实现并不符合 W3C 规范的标准</p><br><p>W3C 标准推出后，浏览器渲染页面有了统一的标准（Strict mode 也叫做 Standards mode）浏览器都开始采纳新标准，但存在一个问题就是如何保证旧的网页还能继续浏览，在标准出来以前，很多页面都是根据旧的渲染方法编写的，如果用的标准来渲染，将导致页面显示异常</p><br><p>为保持浏览器渲染的兼容性，使以前的页面能够正常浏览，浏览器都保留了旧的渲染方法（如：微软的 IE）。这样浏览器渲染上就产生了 Quirks mode 和 Standards mode，两种渲染方法共存在一个浏览器上</p><br><p>混杂模式服务于旧式规则，而严格模式服务于标准规则</p></blockquote><ul><li>浏览器使用文档开头的 DOCTYPE 来 <mark>决定用怪异模式还是标准模式处理</mark></li><li>如果文档中没有 DOCTYPE 将触发文档的怪异模式 <ul><li>怪异模式最明显的影响是会 <mark>触发怪异盒模型</mark></li></ul></li><li>在 DOCTYPE 声明中，没有使用 DTD 声明或者使用 HTML4 以下的 DTD 声明时 <ul><li>基本所有的浏览器都是使用 Quirks mode 呈现</li><li>其他的则使用 Standards mode 解析</li></ul></li></ul><h4 id="_2-严格模式和怪异模式的部分渲染区别" tabindex="-1"><a class="header-anchor" href="#_2-严格模式和怪异模式的部分渲染区别" aria-hidden="true">#</a> 2）严格模式和怪异模式的部分渲染区别</h4><ul><li>盒模型的宽高包含内边距 padding 和边框 border <ul><li>在 W3C 标准中，如果设置一个元素的宽度和高度，指的是元素内容的宽度和高度</li><li>而在 IE5.5 及以下的浏览器及其他版本的 Quirks 模式下，IE 的宽度和高度还包含了 padding 和 border</li></ul></li></ul><p><img src="'+k+'" alt=""></p><ul><li>可以设置行内元素的高宽 <ul><li>在 Standards 模式下，给 span 等行内元素设置 width 和 height 都不会生效</li><li>而在 Quirks 模式下，则会生效</li></ul></li><li>可以设置百分比的高度 <ul><li>在 Standards 模式下，一个元素的高度是由其包含的内容来决定的</li><li>如果父元素没有设置高度，子元素设置一个百分比的高度是无效的</li></ul></li><li>用 <code>margin: 0 auto</code> 设置水平居中在 IE 下会失效 <ul><li>在 Standards 模式下可以使元素水平居中，但在 Quirks 模式下却会失效</li><li>Quirks 模式下可以用 <code>text-align</code> 属性解决</li></ul></li><li>Quirks 模式下设置图片的 padding 会失效</li><li>Quirks 模式下 Table 中的字体属性不能继承上层的设置</li><li>Quirks 模式下 <code>white-space: pre</code> 会失效</li></ul>',12),L={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode",target:"_blank",rel:"noopener noreferrer"},C=a("br",null,null,-1),w={href:"https://hsivonen.fi/doctype/",target:"_blank",rel:"noopener noreferrer"},y=e('<h3 id="_7-真题解答" tabindex="-1"><a class="header-anchor" href="#_7-真题解答" aria-hidden="true">#</a> 7.真题解答</h3><h4 id="_1-什么是-doctype-是否需要在-html5-中使用" tabindex="-1"><a class="header-anchor" href="#_1-什么是-doctype-是否需要在-html5-中使用" aria-hidden="true">#</a> 1）什么是 <code>&lt;!DOCTYPE&gt;</code> ？是否需要在 HTML5 中使用？</h4><blockquote><p>是 HTML 的文档声明，通过它告诉浏览器使用哪一个 HTML 版本标准解析文档</p><br><p>在浏览器发展的历史中，HTML 出现过很多个版本，不同版本在元素、属性等书写格式上略有差异，如果不预先告诉浏览器，浏览器就不知道我们的文档标准是什么，在这种情况下，大部分浏览器将开启最大兼容模式来解析网页，我们称之为怪异模式。这不仅会降低解析效率，而且会在解析过程中产生一些难以预知的 bug，所以文档声明是必须的</p><br><p>而文档声明有多种书写格式，对应不同的 HTML 版本，<code>&lt;!DOCTYPE&gt;</code> 这种书写格式是告诉浏览器，整个文档使用 HTML5 的标准进行解析</p></blockquote><h4 id="_2-什么是严格模式与混杂模式" tabindex="-1"><a class="header-anchor" href="#_2-什么是严格模式与混杂模式" aria-hidden="true">#</a> 2）什么是严格模式与混杂模式？</h4><blockquote><p><strong>严格模式</strong>：又称标准模式，是指浏览器按照 W3C 标准解析代码</p><br><p><strong>混杂模式</strong>：又称怪异模式或兼容模式，是指浏览器用自己的方式解析代码</p><br><p><strong>如何区分</strong>：浏览器解析时到底使用严格模式还是混杂模式，与网页中的 DTD 直接相关</p><ol><li>如果文档包含严格的 DOCTYPE ，那么一般以严格模式呈现，<mark>严格 DTD —— 严格模式</mark></li><li>包含过渡 DTD 和 URI 的 DOCTYPE ，也以严格模式呈现，<mark>有 URI 的过渡 DTD —— 严格模式</mark></li><li>有过渡 DTD 而没有 URI （统一资源标识符，就是声明最后的地址）会导致页面以混杂模式呈现，<mark>没有 URI 的过渡 DTD —— 混杂模式</mark></li><li>DOCTYPE 不存在或形式不正确会导致文档以混杂模式呈现，<mark>DTD 不存在或者格式不正确 —— 混杂模式</mark></li><li>HTML5 没有 DTD ，因此也就没有严格模式与混杂模式的区别，HTML5 有相对宽松的语法，实现时，已经尽可能大的实现了向后兼容，<mark>HTML5 没有严格和混杂之分</mark></li></ol><br><p><strong>意义</strong>：严格模式与混杂模式存在的意义与其来源密切相关，如果说只存在严格模式，那么许多旧网站必然受到影响，如果只存在混杂模式，那么会回到当时浏览器大战时的混乱，每个浏览器都有自己的解析模式</p></blockquote><h4 id="_3-列举几条怪异模式中的怪癖行为" tabindex="-1"><a class="header-anchor" href="#_3-列举几条怪异模式中的怪癖行为" aria-hidden="true">#</a> 3）列举几条怪异模式中的怪癖行为</h4><blockquote><ol><li>宽高的算法与 W3C 盒模型不同</li><li>在表格中的字体样式不会继承</li><li>怪异模式下可以设置行内元素宽高</li><li>怪异模式下 <code>white-space: pre</code> 会失效</li></ol></blockquote><h2 id="二-语义化" tabindex="-1"><a class="header-anchor" href="#二-语义化" aria-hidden="true">#</a> （二）语义化</h2><h3 id="_1-经典真题-1" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-1" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>说说对 html 语义化的理解</li></ul><h3 id="_2-语义元素" tabindex="-1"><a class="header-anchor" href="#_2-语义元素" aria-hidden="true">#</a> 2.语义元素</h3><ul><li>语义是指对一个词或者句子含义的正确解释</li><li>很多 HTML 标签具有语义的意义，即元素本身传达了关于标签所包含内容类型的一些信息</li><li>如：当浏览器解析到 <code>&lt;h1&gt;&lt;/h1&gt;</code> 标签时 <ul><li>将该标签解释为包含这一块内容的最重要的标题</li><li>h1 标签的语义就是用它来标识特定网页或部分最重要的标题</li></ul></li></ul><h3 id="_3-语义化" tabindex="-1"><a class="header-anchor" href="#_3-语义化" aria-hidden="true">#</a> 3.语义化</h3><h4 id="_1-展示良好的代码结构" tabindex="-1"><a class="header-anchor" href="#_1-展示良好的代码结构" aria-hidden="true">#</a> 1）展示良好的代码结构</h4><ul><li>使页面没有 css 的情况下，也能够呈现出很好的内容结构</li></ul><h4 id="_2-有利于-seo" tabindex="-1"><a class="header-anchor" href="#_2-有利于-seo" aria-hidden="true">#</a> 2）有利于 SEO</h4><ul><li>爬虫依赖标签来确定关键字的权重</li><li>可以和搜索引擎建立良好的沟通，帮助爬虫抓取更多的有效信息</li></ul><h4 id="_3-提升用户体验" tabindex="-1"><a class="header-anchor" href="#_3-提升用户体验" aria-hidden="true">#</a> 3）提升用户体验</h4><ul><li>title、alt 可以用于解释名称或者解释图片信息</li><li>灵活运用 label 标签</li></ul><h4 id="_4-便于团队开发和维护" tabindex="-1"><a class="header-anchor" href="#_4-便于团队开发和维护" aria-hidden="true">#</a> 4）便于团队开发和维护</h4><ul><li>语义化使得代码更具有可读性</li><li>让其他开发人员更加理解你的 html 结构，减少差异化</li></ul><h4 id="_5-方便其他设备解析" tabindex="-1"><a class="header-anchor" href="#_5-方便其他设备解析" aria-hidden="true">#</a> 5）方便其他设备解析</h4><ul><li>屏幕阅读器、盲人阅读器、移动设备等</li><li>以有意义的方式来渲染网页【无障碍】</li></ul><h3 id="_4-html5-常用的语义元素" tabindex="-1"><a class="header-anchor" href="#_4-html5-常用的语义元素" aria-hidden="true">#</a> 4.HTML5 常用的语义元素</h3><ul><li>HTML5 提供了新的语义元素来定义网页的不同部分，被称为“切片元素”</li></ul><p><img src="'+b+'" alt=""></p><table><thead><tr><th>标签</th><th>语义</th></tr></thead><tbody><tr><td>header</td><td>用于定义页面的头部区域<br>通常包括网站 logo、主导航、全站链接以及搜索框</td></tr><tr><td>nav</td><td>定义页面的导航链接部分区域</td></tr><tr><td>main</td><td>定义文档的主要内容<br>该内容在文档中应当是独一无二的</td></tr><tr><td>article</td><td>定义页面独立的内容<br>可以有自己的 header、footer、sections 等<br>专注于单个主题的博客文章，报纸文章或网页文章</td></tr><tr><td>section</td><td>表示文档中的一个区域（或节）<br>如：内容中的一个专题组</td></tr><tr><td>aside</td><td>表示一个和其余页面内容几乎无关的部分<br>被认为是独立于该内容的一部分且可以被单独的拆分出来而不会影响整体<br>通常表现为侧边栏或嵌入内容</td></tr><tr><td>footer</td><td>定义最近一个章节内容或者根节点元素的页脚<br>一个页脚通常包含该章节作者、版权数据或者与文档相关的链接等信息</td></tr></tbody></table><ul><li>大约有 100 多个 HTML 语义元素可供选择</li></ul><p><img src="'+m+'" alt=""></p>',29),W={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element",target:"_blank",rel:"noopener noreferrer"},S=e('<h3 id="_5-无障碍网页" tabindex="-1"><a class="header-anchor" href="#_5-无障碍网页" aria-hidden="true">#</a> 5.无障碍网页</h3><ul><li>HTML5 在无障碍方面进行了加强，加入了无障碍属性</li></ul><h4 id="_1-无障碍" tabindex="-1"><a class="header-anchor" href="#_1-无障碍" aria-hidden="true">#</a> 1）无障碍</h4><blockquote><p>W3C 在 1997 年发起了一项 WAI（Web Accessibility Initiative）的计划</p><br><p>该计划的目标是提升网站的易用性（accessibility），而其中有一个很重要的指标，那就是能够被残障人士使用的网站才能称得上一个易用的（易访问的）网站</p><br><p>无障碍属性主要针对的是视觉缺陷、失聪、行动不便的残疾人以及假装残疾的测试人员</p><br><p>尤其像盲人，眼睛看不到，其浏览网页则需要借助辅助设备，如：屏幕阅读器，屏幕阅读机可以大声朗读或者输出盲文</p></blockquote><ul><li>HTML5 无障碍属性可以让屏幕阅读器准确识别网页中的内容、变化、状态的技术规范</li><li>让盲人这类用户也能无障碍阅读</li></ul>',5),H={href:"https://developer.mozilla.org/zh-CN/docs/Web/Accessibility",target:"_blank",rel:"noopener noreferrer"},D=e('<h4 id="_2-常见的无障碍属性" tabindex="-1"><a class="header-anchor" href="#_2-常见的无障碍属性" aria-hidden="true">#</a> 2）常见的无障碍属性</h4><ul><li>WAI-ARIA 是 W3C 编写的规范，定义了一组可用于其他元素的 HTML 特性</li><li>用于提供额外的语义化以及改善缺乏的可访问性</li></ul><table><thead><tr><th>特性</th><th>含义</th></tr></thead><tbody><tr><td>角色</td><td>定义了元素是干什么的<br>许多标志性的角色其实重复了 HTML5 的结构元素的语义价值<br>如：<code>role=&quot;navigation&quot;</code> (nav) 或者 <code>role=&quot;complementary&quot;</code> (aside)</td></tr><tr><td>属性</td><td>通过定义一些属性给元素，让他们具备更多的语义<br>如：<code>aria-required=&quot;true&quot;</code> 意味着元素在表单上是必填的，<code>aria-labelledby=&quot;label&quot;</code> 允许在元素上设置一个 ID，用于 labelledby 引用作为屏幕阅读器指定的 label 内容，多个也可以</td></tr><tr><td>状态</td><td>用于表达元素当前的条件的特殊属性<br>如：<code>aria-disabled=&quot;true&quot;</code>，屏幕阅读器就会禁止输入这个表单</td></tr></tbody></table><ul><li>属性在应用的生命周期中不会改变，而状态可以 <ul><li>通常我们用编程的方法改变它，如：JavaScript</li></ul></li><li>关于 WAI-ARIA 属性重要的一点是它不会对 Web 页面有任何影响 <ul><li>除了让更多的信息从浏览器暴露给 accessibility APIs (无障碍 API) <ul><li>这也是屏幕阅读器这一类软件的信息源</li></ul></li></ul></li><li>WAI-ARIA 不会影响网页的结构，以及 DOM 等等</li><li>这些属性可用于作为 CSS 选择器</li></ul>',4),E={href:"https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics",target:"_blank",rel:"noopener noreferrer"},I=e('<h3 id="_6-真题解答" tabindex="-1"><a class="header-anchor" href="#_6-真题解答" aria-hidden="true">#</a> 6.真题解答</h3><h4 id="_1-说说对-html-语义化的理解" tabindex="-1"><a class="header-anchor" href="#_1-说说对-html-语义化的理解" aria-hidden="true">#</a> 1）说说对 html 语义化的理解</h4><blockquote><p>语义化的目的主要有以下几点</p><ol><li>去掉或者丢失样式的时候能够让页面呈现出清晰的结构</li><li>有利于 SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息，爬虫依赖于标签来确定上下文和各个关键字的权重</li><li>方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以有意义的方式来渲染网页</li><li>便于团队开发和维护，语义化更具可读性，是下一步网页的重要动向，遵循 W3C 标准的团队都遵循这个标准，可以减少差异化。HTML5 中新增加的很多标签，例如：article、nav、header 和 footer 等，就是基于语义化设计原则</li></ol></blockquote><h2 id="三-w3c-标准组织" tabindex="-1"><a class="header-anchor" href="#三-w3c-标准组织" aria-hidden="true">#</a> （三）W3C 标准组织</h2><h3 id="_1-经典真题-2" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-2" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>对于 WEB 标准以及 W3C 的理解与认识问题</li></ul><h3 id="_2-什么是-w3c" tabindex="-1"><a class="header-anchor" href="#_2-什么是-w3c" aria-hidden="true">#</a> 2.什么是 W3C</h3><ul><li>W3C，World Wide Web Consortium，万维网联盟 <ul><li>由 Tim Berners-Lee 创建于 1994 年 10 月</li><li>是一个会员组织</li></ul></li><li>W3C 的工作是对 web 进行标准化</li><li>W3C 创建并维护 WWW 标准 <ul><li>被称为 W3C 推荐（W3C 规范）</li></ul></li></ul><h3 id="_3-w3c-的创建" tabindex="-1"><a class="header-anchor" href="#_3-w3c-的创建" aria-hidden="true">#</a> 3.W3C 的创建</h3><ul><li>万维网是作为欧洲核子研究组织的一个项目发展起来的，Tim Berners-Lee 在那里开发出万维网的雏形</li><li>Tim Berners-Lee 是万维网的发明人，目前是万维网联盟的主任</li><li>W3C 在 1994 年被创建，其创立目的是为了完成麻省理工学院（MIT）与欧洲粒子物理研究所（CERN）之间的协同工作</li><li>得到了美国国防部高级研究计划局（DARPA）和欧洲委员会（European Commission）的支持</li></ul><h3 id="_4-标准化-web" tabindex="-1"><a class="header-anchor" href="#_4-标准化-web" aria-hidden="true">#</a> 4.标准化 Web</h3><ul><li>W3C 致力于实现所有的用户都能够对 Web 加以利用 <ul><li>不论其文化教育背景、能力、财力以及其身体残疾</li></ul></li><li>W3C 同时与其他标准化组织协同工作 <ul><li>如：Internet 工程工作小组（Internet Engineering Task Force）、无线应用协议（WAP）以及 Unicode 联盟（Unicode Consortium）</li></ul></li><li>W3C 由美国麻省理工学院计算机科学和人工智能实验室 (MIT CSAIL)、总部位于法国的欧洲信息数学研究联盟(ERCIM) 和日本的庆应大学（Keio University）联合运作，并且在世界范围内拥有分支办事处</li></ul><h3 id="_5-w3c-成员" tabindex="-1"><a class="header-anchor" href="#_5-w3c-成员" aria-hidden="true">#</a> 5.W3C 成员</h3><ul><li>正因为 Web 是如此的重要（不论在其影响范围还是在投资方面），以至于不应由任何一家单独的组织来对它的未来进行控制，因此 W3C 扮演着一个会员组织的角色</li><li>一些知名的会员包括 <ul><li>IBM</li><li>Microsoft</li><li>America Online</li><li>Apple</li><li>Adobe</li><li>Macromedia</li><li>Sun Microsystems</li></ul></li><li>W3C 的会员包括了：软件开发商、内容提供商、企业用户、通信公司、研究机构、研究实验室、标准化团体以及政府</li></ul><h3 id="_6-w3c-规范的批准步骤" tabindex="-1"><a class="header-anchor" href="#_6-w3c-规范的批准步骤" aria-hidden="true">#</a> 6.W3C 规范的批准步骤</h3><ul><li>在 W3C 发布某个新标准的过程中，规范是通过下面的严格程序由一个简单的理念逐步确立为推荐标准的 <ul><li>W3C 收到一份提交</li><li>由 W3C 发布一份记录</li><li>由 W3C 创建一个工作组</li><li>由 W3C 发布一份工作草案</li><li>由 W3C 发布一份候选的推荐</li><li>由 W3C 发布一份被提议的推荐</li><li>由 W3C 发布推荐</li></ul></li></ul>',16),A={href:"https://www.runoob.com/w3c/w3c-process.html",target:"_blank",rel:"noopener noreferrer"},P=e(`<h3 id="_7-真题解答-1" tabindex="-1"><a class="header-anchor" href="#_7-真题解答-1" aria-hidden="true">#</a> 7.真题解答</h3><ul><li>对于 WEB 标准以及 W3C 的理解与认识问题</li></ul><blockquote><p>任何东西都需要一个标准，有了标准才能够更好的进行交流和推广。不同的标准，得出的便是不同的结果。因此，制定什么样的标准，如何确立标准，至关重要</p><br><p>正因为有了网页的标准，才能降低开发难度及开发成本，减少各种 BUG、安全问题，提高网站易用性</p><br><p>就好比 HTML 在 W3C 组织推出标准之前，不同的浏览器厂商有一套自己的标准，这对于开发人员来讲是痛苦的，所以才会遗留下浏览器的标准模式和怪异模式这个历史问题</p><br><p>W3C 就是一个推出标准的组织，被称之为万维网联盟，W3C 最重要的工作是发展 Web 规范</p></blockquote><h2 id="四-seo" tabindex="-1"><a class="header-anchor" href="#四-seo" aria-hidden="true">#</a> （四）SEO</h2><h3 id="_1-经典真题-3" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-3" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>请描述下 SEO 中的 TDK？</li></ul><h3 id="_2-概念" tabindex="-1"><a class="header-anchor" href="#_2-概念" aria-hidden="true">#</a> 2.概念</h3><ul><li>SEO，Search Engine Optimization，搜索引擎优化，或叫做针对搜索引擎优化</li><li>指从自然搜索结果获得网站流量的技术和过程</li><li>是在了解搜索引擎自然排名机制的基础上，对网站进行内部及外部的调整优化，改进网站在搜索引擎中的关键词自然排名，获得更多流量，从而达成网站销售及品牌建设的目标</li></ul><h3 id="_3-内部优化-seo" tabindex="-1"><a class="header-anchor" href="#_3-内部优化-seo" aria-hidden="true">#</a> 3.内部优化 SEO</h3><h4 id="_1-合理的-tdk" tabindex="-1"><a class="header-anchor" href="#_1-合理的-tdk" aria-hidden="true">#</a> 1）合理的 TDK</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>搜索引擎在抓取网页时，最先读取的就是网页标题<br>一般不超过 80 个字符，而且词语间要用英文 “-” 隔开<br>因为计算机只对英语的敏感性较高，对汉语的敏感性不高</td></tr><tr><td>description</td><td>网页的内容摘要，是对于一个网页的简要内容概况<br>一般不超过 150 个字符，描述内容要和页面内容相关</td></tr><tr><td>keywords</td><td>告诉搜索引擎本页内容是围绕哪些词展开的<br>每个词都要能在内容中找到相应匹配，才有利于排名<br>一般不超过 3 个，每个关键词不宜过长，而且词语间要用英文 “,” 隔开<br>尽量将重要的关键字靠前放</td></tr></tbody></table><h4 id="_2-语义化的-html-代码-符合-w3c-规范" tabindex="-1"><a class="header-anchor" href="#_2-语义化的-html-代码-符合-w3c-规范" aria-hidden="true">#</a> 2）语义化的 HTML 代码，符合 W3C 规范</h4><ul><li>语义化代码能够让搜索引擎容易理解网页</li><li>即使没有加载 CSS 整个网页的结构也是清清楚楚的</li><li>无论是搜索引擎还是阅读者，都能够很容易的分辨网页的结构</li></ul><h4 id="_3-非装饰性图片必须加-alt" tabindex="-1"><a class="header-anchor" href="#_3-非装饰性图片必须加-alt" aria-hidden="true">#</a> 3）非装饰性图片必须加 alt</h4><ul><li>img 标签的 alt 属性指定了替代文本</li><li>用于在图像无法显示或者用户禁用图像显示时，代替图像显示在浏览器中的内容</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/xxx.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>海尔官网-双门冰箱<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>增强内容相关性 <ul><li>可以利用汉字介绍文章内容，对于一些特定的企业产品，由于视觉的体验，往往是少文字的</li></ul></li><li>提高关键词密度 <ul><li>在操作企业站的时候，经常遇到站点首屏一个大的横幅 banner，几乎占用了首页的大部分页面</li><li>为了有效的提高首页核心关键词密度，只能利用一切办法增添关键词</li><li>如：在图片的 alt 标签中添加</li></ul></li></ul><h4 id="_4-对于不显示的对象谨慎使用-display-none" tabindex="-1"><a class="header-anchor" href="#_4-对于不显示的对象谨慎使用-display-none" aria-hidden="true">#</a> 4）对于不显示的对象谨慎使用 <code>display: none</code></h4><ul><li>对于不想显示的文字内容，应当设置 <code>z-index</code> 或设置到浏览器显示器之外</li><li>因为搜索引擎会过滤掉 <code>display: none</code> 其中的内容</li></ul><h4 id="_5-重要内容-html-代码放在最前" tabindex="-1"><a class="header-anchor" href="#_5-重要内容-html-代码放在最前" aria-hidden="true">#</a> 5）重要内容 HTML 代码放在最前</h4><ul><li>索引擎抓取 HTML 顺序是从上到下的</li><li>尽量将重要的内容放在前面，保证重要内容一定会被抓取到</li></ul><h4 id="_6-少用-iframe" tabindex="-1"><a class="header-anchor" href="#_6-少用-iframe" aria-hidden="true">#</a> 6）少用 iframe</h4><ul><li>少用或者尽量不用 iframe</li><li>搜索引擎不会抓取 iframe 中的内容</li></ul>`,23),O={href:"https://blog.csdn.net/yanyihan16/article/details/89209436?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.control",target:"_blank",rel:"noopener noreferrer"},N=e(`<h3 id="_4-外部优化-seo" tabindex="-1"><a class="header-anchor" href="#_4-外部优化-seo" aria-hidden="true">#</a> 4.外部优化 SEO</h3><ul><li>主要是指放友情链接和外链 <ul><li>好的友情链接可以快速的提高网站的权重</li><li>高质量的外链，会给你的网站提高源源不断的权重提升</li></ul></li><li>要向各大搜索引擎登陆入口提交尚未收录的站点</li></ul><h3 id="_5-真题解答" tabindex="-1"><a class="header-anchor" href="#_5-真题解答" aria-hidden="true">#</a> 5.真题解答</h3><h4 id="_1-请描述下-seo-中的-tdk" tabindex="-1"><a class="header-anchor" href="#_1-请描述下-seo-中的-tdk" aria-hidden="true">#</a> 1）请描述下 SEO 中的 TDK？</h4><blockquote><p>在 SEO 中，所谓的 TDK 其实就是 title、description、keywords</p><br><p>title：浏览器上显示的那些内容，不仅用户能看到，也能被搜索引擎检索到，搜索引擎在抓取网页时，最先读取的就是网页标题，所以 title 是否正确设置极其重要。title 一般不超过 80 个字符，而且词语间要用英文 “-” 隔开，因为计算机只对英语的敏感性较高，对汉语的敏感性不高</p><br><p>description：也就是网页的内容摘要，这是对于一个网页的简要内容概况。description 一般不超过 150 个字符，描述内容要和页面内容相关</p><br><p>keywords：主要作用是告诉搜索引擎本页内容是围绕哪些词展开的。因此 keywords 的每个词都要能在内容中找到相应匹配，才有利于排名。keywords 一般不超过 3 个，每个关键词不宜过长，而且词语间要用英文 “,” 隔开，尽量将重要的关键字靠前放</p></blockquote><h2 id="五-iframe" tabindex="-1"><a class="header-anchor" href="#五-iframe" aria-hidden="true">#</a> （五）iframe</h2><h3 id="_1-经典真题-4" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-4" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>iframe 框架有哪些优缺点？</li><li>iframe 用来干什么的</li></ul><h3 id="_2-iframe-介绍" tabindex="-1"><a class="header-anchor" href="#_2-iframe-介绍" aria-hidden="true">#</a> 2.iframe 介绍</h3><ul><li>iframe 嵌入式框架</li><li>可以把一个完整的网页内容嵌入到现有的网页中</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>iframe 示例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://juejin.cn/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-历史" tabindex="-1"><a class="header-anchor" href="#_1-历史" aria-hidden="true">#</a> 1）历史</h4><ul><li>在早期的时候，iframe 在开发中用得很多</li><li>使用 iframe 可以很方便的制作一个页面的公共部分，如：导航栏</li><li>现在仍然能够找到使用 iframe 的网站 <ul><li>大多是旧的项目</li><li>如：W3C school、QQ 邮箱</li></ul></li><li>随着 Ajax 的出现，iframe 用得越来越少了</li><li>现在在某些特定的场景还能见到 <ul><li>如：模拟窗口、邮箱或 HTML 在线编辑器等</li></ul></li></ul><h4 id="_2-缺点" tabindex="-1"><a class="header-anchor" href="#_2-缺点" aria-hidden="true">#</a> 2）缺点</h4><ul><li>iframe 的自适应高度</li><li>搜索引擎的“爬虫”程序无法解读这种页面 <ul><li>当“爬虫”遇到多个页面嵌套的网页时只看到框架却找不到链接，然后认定此网站是死站点并离开</li><li>这对于 SEO 来讲无疑是毁灭性的打击</li><li>并且使用大量的 iframe 标签也会稀释该页面的关键词密度并对 SEO 产生影响</li></ul></li></ul><h3 id="_3-真题解答" tabindex="-1"><a class="header-anchor" href="#_3-真题解答" aria-hidden="true">#</a> 3.真题解答</h3><h4 id="_1-iframe-用来干什么的-有哪些优缺点" tabindex="-1"><a class="header-anchor" href="#_1-iframe-用来干什么的-有哪些优缺点" aria-hidden="true">#</a> 1）iframe 用来干什么的？有哪些优缺点？</h4><blockquote><p>iframe 也称作嵌入式框架，嵌入式框架和框架网页类似，它可以把一个网页的框架和内容嵌入在现有的网页中</p><br><p>优点</p><ol><li>重载页面时不需要重载整个页面，只需要重载页面中的一个框架页(减少了数据的传输，增加了网页下载速度)</li><li>方便制作导航栏</li></ol><br><p>缺点</p><ol><li>会产生很多页面，不容易管理</li><li>调用外部页面，需要额外调用 CSS，给页面带来额外的请求次数</li><li>会阻塞页面的加载，window 的 onload 事件需要在所有 iframe 加载完毕后(包含里面的元素)才会触发</li><li>浏览器的后退按钮无效</li><li>无法被一些搜索引擎索引到</li><li>多数小型的移动设备（PDA 手机）无法完全显示框架</li></ol><br><p>由于上面诸多缺点，因此不符合标准网页设计的理念，已经被标准网页设计抛弃，目前框架的所有优点完全可以使用 Ajax 实现，因此已经没有必要使用 iframe 框架了</p></blockquote><h2 id="六-微格式" tabindex="-1"><a class="header-anchor" href="#六-微格式" aria-hidden="true">#</a> （六）微格式</h2><h3 id="_1-经典真题-5" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-5" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>知道什么是微格式吗？谈谈理解。在前端构建中应该考虑微格式吗？</li></ul><h3 id="_1-微格式介绍" tabindex="-1"><a class="header-anchor" href="#_1-微格式介绍" aria-hidden="true">#</a> 1.微格式介绍</h3><ul><li>所谓微格式，是建立在已有的、被广泛采用的标准基础之上的一组简单的、开放的数据格式</li><li>具体表现是把语义嵌入到 HTML 中，以便有助于分离式开发，并通过制定一些简单的约定，来 <mark>兼顾 HTML 文档的人机可读性</mark> ，相当于对 Web 网页进行了 <mark>语义注解</mark></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 以前写一个链接到首页 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”http://www.bbon.cn”</span><span class="token punctuation">&gt;</span></span>Web Design Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 现在为这个代码元素 a 加上 rel 属性 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”http://www.bbon.cn“</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>”homepage”</span><span class="token punctuation">&gt;</span></span>Web Design Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>rel=&quot;home&quot;</code> 属性显示链接的目标页面是该网站的首页</li><li>通过为已有的链接元素添加语义化属性，为这个链接添加了具体的结构和意义</li></ul><h3 id="_2-官网介绍" tabindex="-1"><a class="header-anchor" href="#_2-官网介绍" aria-hidden="true">#</a> 2.官网介绍</h3>`,26),z={href:"https://microformats.org/",target:"_blank",rel:"noopener noreferrer"},R=e(`<blockquote><p>Microformats are based on simple markup conventions that enable you to add meaningful structure to your web content.</p><p>微格式基于简单的标记约定，使您能够向 web 内容添加有意义的结构</p><br><p>One of the key principles of microformats, is to privilege human readable content. This means that you should think first and foremost of your content design being readable and accessible to web viewers.</p><p>微格式的一个关键原则是赋予人类可读内容特权，这意味着您应该首先考虑内容设计的可读性和可访问性</p><br><p>Using the most appropriate HTML elements and applying structured class names to your markup enables you to produce content that can be clearly understood by a human audience and also used in a structured way by automated programs and other online tools.</p><p>通过使用最合适的 HTML 元素并将结构化类名应用到标记中，您可以生成人类观众可以清楚理解的内容，并通过自动化程序和其他在线工具以结构化方式使用这些内容</p><br><p>But the point is that you shouldn&#39;t have to go out of your way to produce such machine friendly markup - microformats make it easy to integrate this greater degree of structure into your websites, without the overhead of having to learn complicated new languages or formats.</p><p>但关键是，你不应该不遗余力地制作这样的机器友好型标记 —— 微格式可以轻松地将这种更高程度的结构集成到你的网站中，而无需学习复杂的新语言或格式</p></blockquote><h3 id="_3-用途" tabindex="-1"><a class="header-anchor" href="#_3-用途" aria-hidden="true">#</a> 3.用途</h3><ul><li>微格式一般用于标记人员、组织、事件、地点、博客帖子、产品、评论、简历、食谱等的 HTML</li></ul><blockquote><p>Mark-up your contact info with h-card, link to other profiles with rel=&quot;me&quot;</p><p>使用 <code>h-card</code> 标记您的联系信息，使用 <code>rel=&quot;me&quot;</code> 链接到其他个人资料</p><br><p>Mark-up your blog with h-entry.</p><p>用 <code>h-entry</code> 标记你的博客</p></blockquote><ul><li>h-card 是一种微格式，用来发布个人，公司，组织，地点等详细的联系信息</li><li>可以使分析器（比如其他网站，Firefox 的 Operator 插件）获得详细的信息，并通过别的网站或者地图工具进行显示，或者载入到地址簿等其他程序</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 没有加入微格式时 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Joe Doe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>The Example Company<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>604-555-1234<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>http://example.com/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 加入微格式后 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vcard<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Joe Doe<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>The Example Company<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>604-555-1234<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://example.com/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>http://example.com/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>正式名称（class=&quot;fn&quot;），组织（class=&quot;org&quot;），电话号码（class=&quot;tel&quot;）和 url（class=&quot;url&quot;）分别用相应的 class 标示</p><br><p>同时所有内容都包含在 class=&quot;vcard&quot; 里</p></blockquote><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 用一个维基媒体基金会的联系方式，作为 h-card 微格式实例 --&gt;</span>
Wikimedia Foundation Inc. 200 2nd Ave. South #358 St. Petersburg, FL 33701-4313
USA Phone: +1-727-231-0101 Email: info@wikimedia.org Fax: +1-727-258-0207

<span class="token comment">&lt;!-- 加入微格式后 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vcard<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn org<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Wikimedia Foundation Inc.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>adr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>street-address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>200 2nd Ave. South #358<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>locality<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>St. Petersburg<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>,
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>region<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>FL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>postal-code<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>33701-4313<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>country-name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>USA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Phone: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1-727-231-0101<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Email: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>info@wikimedia.org<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tel<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Fax<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>:
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1-727-258-0207<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>
    <span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>正式名称（class=&quot;fn&quot;）和组织（class=&quot;org&quot;）写在了一个属性中，表示这是一个组织，而不是个人</p></blockquote><h3 id="_4-常用的-h-card-属性" tabindex="-1"><a class="header-anchor" href="#_4-常用的-h-card-属性" aria-hidden="true">#</a> 4.常用的 h-card 属性</h3><ul><li>bday 生日</li><li>email 邮箱</li><li>tel 电话</li><li>nickname 昵称</li></ul>`,11),B=a("p",null,'目前已具备完整规范的微格式还包括：hCard、hCalendar、XOXO、XFN、VoteLinks 和 3 个 "rel-" 的微格式：rel-license、rel-nofollow 和 rel-tag',-1),Q=a("br",null,null,-1),U={href:"https://microformats.org/wiki/h-card",target:"_blank",rel:"noopener noreferrer"},Y=e('<h3 id="_5-真题解答-1" tabindex="-1"><a class="header-anchor" href="#_5-真题解答-1" aria-hidden="true">#</a> 5.真题解答</h3><ul><li>知道什么是微格式吗？谈谈理解。在前端构建中应该考虑微格式吗？</li></ul><blockquote><p>所谓微格式，是建立在已有的、被广泛采用的标准基础之上的一组简单的、开放的数据格式</p><br><p>具体表现是把语义嵌入到 HTML 中，以便有助于分离式开发，并通过制定一些简单的约定，来兼顾 HTML 文档的人机可读性，相当于对 Web 网页进行了语义注解</p><br><p>采用微格式的 Web 页面，在 HTML 文档中给一些标签增加一些属性，这些属性对信息的语义结构进行注解，有助于处理 HTML 文档的软件，更好的理解该 HTML 文档</p><br><p>在前端构建中微格式的意义</p><p>微格式按照某种已有的被广泛应用的标准，通过对内容块的语义标记，可以让外部应用程序、聚合程序和搜索引擎能够做以下事情</p><ol><li>在爬取 Web 内容时，能够更为准确地识别内容块的语义</li><li>对内容进行操作，包括提供访问、校对，还可以将其转化成其他的相关格式，提供给外部程序和 Web 服务使用</li></ol><br><p>总结：微格式可以对网站进行 SEO 优化，如果需要可以考虑</p></blockquote><h2 id="七-替换元素" tabindex="-1"><a class="header-anchor" href="#七-替换元素" aria-hidden="true">#</a> （七）替换元素</h2><h3 id="_1-经典真题-6" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-6" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>什么是可替换元素，什么是非可替换元素，它们各自有什么特点？</li></ul><h3 id="_2-可替换元素" tabindex="-1"><a class="header-anchor" href="#_2-可替换元素" aria-hidden="true">#</a> 2.可替换元素</h3><ul><li>replaced element</li><li>指一些展现效果不由 CSS 来控制的元素</li><li>这些元素是一种外部对象，它们外观的渲染是独立于 CSS 的 <ul><li>即：内容不受当前文档的样式的影响</li><li>CSS 可以影响可替换元素的位置，但不会影响到可替换元素自身的内容</li></ul></li><li>某些可替换元素可能具有自己的样式表，但不会继承父文档的样式 <ul><li>如 iframe 元素</li></ul></li></ul><h3 id="_3-非替换元素" tabindex="-1"><a class="header-anchor" href="#_3-非替换元素" aria-hidden="true">#</a> 3.非替换元素</h3><ul><li>样式完全由 CSS 来控制的元素</li><li>如：p、h1 ～ h6 等</li></ul>',10),G={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element",target:"_blank",rel:"noopener noreferrer"},F=e(`<h3 id="_4-常见的替换元素" tabindex="-1"><a class="header-anchor" href="#_4-常见的替换元素" aria-hidden="true">#</a> 4.常见的替换元素</h3><ul><li>图片标签 img</li><li>内联框架 iframe</li><li>音频视频标签 video、audio</li></ul><h3 id="_5-真题解答-2" tabindex="-1"><a class="header-anchor" href="#_5-真题解答-2" aria-hidden="true">#</a> 5.真题解答</h3><ul><li>什么是可替换元素，什么是非可替换元素，它们各自有什么特点？</li></ul><blockquote><p>可替换元素是指在页面中的大部分展现效果不由 CSS 决定的元素</p><br><p>比如 img 元素就是一个可替换元素，它在页面中显示出的效果主要取决于你连接的是什么图片，图片是什么它就展示什么，CSS 虽然可以控制图片的尺寸位置，但永远无法控制图片本身</p><br><p>再比如，select 元素也是一个典型的可替换元素，它在页面上呈现的是用户操作系统上的下拉列表样式，因此，它的展现效果是由操作系统决定的。所以，同一个 select 元素，放到不同操作系统的电脑上会呈现不同的外观</p><br><p>img、video、audio、大部分表单元素都属于可替换元素</p><br><p>非可替换元素就是指的普通元素，它具体在页面上呈现什么，完全由 CSS 来决定</p></blockquote><h2 id="八-页面可见性" tabindex="-1"><a class="header-anchor" href="#八-页面可见性" aria-hidden="true">#</a> （八）页面可见性</h2><h3 id="_1-经典真题-7" tabindex="-1"><a class="header-anchor" href="#_1-经典真题-7" aria-hidden="true">#</a> 1.经典真题</h3><ul><li>页面可见性（Page Visibility）API 可以有哪些用途？</li></ul><h3 id="_2-页面可见性介绍" tabindex="-1"><a class="header-anchor" href="#_2-页面可见性介绍" aria-hidden="true">#</a> 2.页面可见性介绍</h3><ul><li>长期以来一直缺少一个判断用户是否正在浏览某个指定标签页的方法</li><li>HTML5 提供了页面可见性接口</li></ul><table><thead><tr><th>常见 API</th><th>说明</th></tr></thead><tbody><tr><td><code>document.hidden</code> 属性</td><td>显示页面是否为用户当前观看的页面，值为 <code>true</code> 或 <code>false</code></td></tr><tr><td><code>document.visibilityState</code> 属性</td><td>值为 <code>visible</code> ，表明页面为浏览器当前激活 tab，而且窗口不是最小化状态<br>值为 <code>hidden</code> ，表示页面不是当前激活 tab 页面，或者窗口最小化了<br>值为 <code>prerender</code> ，表示页面在重新生成，对用户不可见</td></tr><tr><td><code>visibilitychange</code> 事件</td><td>监听页面可见性变化事件<br>判断当前页面可见性的状态，并针对性的执行某些任务</td></tr></tbody></table><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>页面可见性示例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;visibilitychange&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&quot;小样去哪儿了？快回来&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">===</span> <span class="token string">&quot;visible&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&quot;页面可见性示例&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),V={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Page_Visibility_API",target:"_blank",rel:"noopener noreferrer"},X=e('<h3 id="_3-真题解答-1" tabindex="-1"><a class="header-anchor" href="#_3-真题解答-1" aria-hidden="true">#</a> 3.真题解答</h3><ul><li>页面可见性（Page Visibility）API 可以有哪些用途？</li></ul><blockquote><p>所谓页面可见性，就是获取当前页面的可见状态。因为对于用户来讲可以打开好多标签页面来回切换，然而始终只有一个页面处于显示状态。所以我们可以通过页面可见性 API 来判断当前页面是显示状态还是隐藏状态</p><br><p>常用的 API 有三个，document.hidden 返回一个布尔值，如果是 true，表示当前页面隐藏，false 则表示页面可见。不同页面之间来回切换，会触发 visibilitychange 事件，还有一个 document.visibilityState，表示页面所处的状态</p><br><p>常见的用途</p><ol><li>网站有图片轮播效果，只有在用户观看轮播的时候，才会自动展示下一张幻灯片</li><li>显示信息仪表盘的应用程序不希望在页面不可见时轮询服务器进行更新</li><li>页面想要检测是否正在渲染，以便可以准确的计算网页浏览量</li><li>当设备进入待机模式时，网站想要关闭设备声音（用户按下电源键关闭屏幕）</li></ol></blockquote>',3);function j(K,J){const s=i("ExternalLinkIcon");return o(),p("div",null,[_,a("blockquote",null,[a("p",null,[n("更多各版本所支持的不同 HTML 元素可以参阅："),a("a",v,[n("https://www.w3school.com.cn/tags/html_ref_dtd.asp"),t(s)])])]),f,a("blockquote",null,[a("p",null,[n("更多不同文档类型的声明写法可以参阅："),a("a",q,[n("https://www.w3school.com.cn/tags/tag_doctype.asp"),t(s)])])]),T,a("blockquote",null,[a("p",null,[n("DTD 教程可以参阅："),a("a",M,[n("https://www.w3school.com.cn/dtd/index.asp"),t(s)])])]),x,a("blockquote",null,[a("p",null,[n("更多可以参阅 MDN 上对怪异模式和标准模式的解释："),a("a",L,[n("https://developer.mozilla.org/zh-CN/docs/Web/HTML/Quirks_Mode_and_Standards_Mode"),t(s)])]),C,a("p",null,[n("MDN 上还给出了不同模式在不同浏览器下的渲染区别（英文）："),a("a",w,[n("https://hsivonen.fi/doctype/"),t(s)])])]),y,a("blockquote",null,[a("p",null,[n("更多的语义化标签可以参阅："),a("a",W,[n("https://developer.mozilla.org/en-US/docs/Web/HTML/Element"),t(s)])])]),S,a("blockquote",null,[a("p",null,[n("关于无障碍的更多说明，可以参阅 MDN："),a("a",H,[n("https://developer.mozilla.org/zh-CN/docs/Web/Accessibility"),t(s)])])]),D,a("blockquote",null,[a("p",null,[n("更多无障碍属性可以参阅："),a("a",E,[n("https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility/WAI-ARIA_basics"),t(s)])])]),I,a("blockquote",null,[a("p",null,[n("具体步骤可以参阅："),a("a",A,[n("https://www.runoob.com/w3c/w3c-process.html"),t(s)])])]),P,a("blockquote",null,[a("p",null,[n("更多优化的细节可以参阅这篇博文："),a("a",O,[n("https://blog.csdn.net/yanyihan16/article/details/89209436?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.control"),t(s)])])]),N,a("ul",null,[a("li",null,[a("a",z,[n("微格式官网"),t(s)])])]),R,a("blockquote",null,[B,Q,a("p",null,[n("h-card 的规范可以参阅："),a("a",U,[n("https://microformats.org/wiki/h-card"),t(s)])])]),Y,a("blockquote",null,[a("p",null,[n("更多可替换元素内容可以参阅 MDN："),a("a",G,[n("https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element"),t(s)])])]),F,a("blockquote",null,[a("p",null,[n("更多有关页面可见性的内容可以参阅 MDN："),a("a",V,[n("https://developer.mozilla.org/zh-CN/docs/Web/API/Page_Visibility_API"),t(s)])])]),X])}const aa=l(g,[["render",j],["__file","01.html.vue"]]);export{aa as default};
