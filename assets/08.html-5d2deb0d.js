import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c,a as n,b as a,d as t,e}from"./app-1240ea23.js";const i="/assets/H5C301-7986b4f8.png",u="/assets/H5C302-f3793585.png",r="/assets/H5C303-be5f4951.png",d="/assets/H5C304-b385de4d.png",k="/assets/H5C305-14165b7e.png",h="/assets/H5C306-6e74fd44.png",m="/assets/H5C307-a8770087.png",g="/assets/H5C308-7b2f3951.png",v="/assets/H5C309-568d782a.png",b="/assets/H5C310-66e95772.png",_="/assets/H5C311-798389f5.png",f="/assets/H5C312-7d732c6b.png",x="/assets/H5C313-14755a37.png",q="/assets/H5C314-a6d1b0a8.png",y="/assets/H5C315-8a46fe21.png",S="/assets/H5C316-cec31e8c.png",C="/assets/H5C317-0a48268b.png",H="/assets/H5C318-c346d71a.png",w="/assets/H5C319-ac6dec97.png",j="/assets/H5C320-60303eea.png",N="/assets/H5C321-7b85d18a.png",M="/assets/H5C322-e22347ed.png",z="/assets/H5C323-1326961f.png",L="/assets/H5C324-eea76a8b.png",T="/assets/H5C325-7f06cf7a.png",W={},I=e('<h2 id="一-布局" tabindex="-1"><a class="header-anchor" href="#一-布局" aria-hidden="true">#</a> （一）布局</h2><p><img src="'+i+'" alt=""></p><ul><li>浮动：做文字环绕效果</li><li>弹性盒：单行或单列布局</li><li>网格：多行多列布局</li></ul><h3 id="_1-弹性盒" tabindex="-1"><a class="header-anchor" href="#_1-弹性盒" aria-hidden="true">#</a> 1.弹性盒</h3>',4),D={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout",target:"_blank",rel:"noopener noreferrer"},A=n("br",null,null,-1),O={href:"https://flexboxfroggy.com/",target:"_blank",rel:"noopener noreferrer"},E=e('<h4 id="_1-生成弹性容器和弹性项目" tabindex="-1"><a class="header-anchor" href="#_1-生成弹性容器和弹性项目" aria-hidden="true">#</a> 1）生成弹性容器和弹性项目</h4><ul><li>默认情况下，弹性项目沿着主轴依次排列，侧轴拉伸</li></ul><p><img src="'+u+'" alt=""></p><h4 id="_2-更改方向" tabindex="-1"><a class="header-anchor" href="#_2-更改方向" aria-hidden="true">#</a> 2）更改方向</h4><ul><li>通过 <code>flex-direction</code> 可更改主轴方向</li></ul><p><img src="'+r+'" alt=""></p><h4 id="_3-主轴排列" tabindex="-1"><a class="header-anchor" href="#_3-主轴排列" aria-hidden="true">#</a> 3）主轴排列</h4><ul><li>通过 <code>justify-content</code> 属性，可以影响主轴的排列方式</li></ul><p><img src="'+d+'" alt=""></p><h4 id="_4-侧轴排列" tabindex="-1"><a class="header-anchor" href="#_4-侧轴排列" aria-hidden="true">#</a> 4）侧轴排列</h4><ul><li>通过 <code>align-items</code> 属性，可以影响侧轴的排列方式</li></ul><p><img src="'+k+'" alt=""></p><h4 id="_5-弹性项目伸缩" tabindex="-1"><a class="header-anchor" href="#_5-弹性项目伸缩" aria-hidden="true">#</a> 5）弹性项目伸缩</h4><ul><li>伸缩，指在 <mark>主轴方向</mark> 上 <ul><li>当 <mark>弹性容器</mark> 有 <mark>额外空间</mark> 时，是否需要拉伸</li><li>当 <mark>空间不足</mark> 时，是否需要 <mark>压缩</mark></li></ul></li><li>在 <mark>弹性项目</mark> 上使用 <code>flex</code> 属性，可设置拉伸和压缩比例： <code>flex: 拉伸比例 压缩比例 初始尺寸</code></li><li>默认： <code>flex: 0 1 auto</code></li><li>拉伸示例：</li></ul><p><img src="'+h+'" alt=""></p><ul><li>压缩示例：</li></ul><p><img src="'+m+'" alt=""></p><h4 id="_6-主轴换行" tabindex="-1"><a class="header-anchor" href="#_6-主轴换行" aria-hidden="true">#</a> 6）主轴换行</h4><ul><li>默认情况，当主轴剩余空间不足时，按照压缩比例进行压缩</li><li>如果设置了主轴换行，则不会压缩，直接换行显示</li><li>给 <mark>弹性容器</mark> 设置 <code>flex-wrap: wrap</code> 即可实现主轴换行</li></ul><p><img src="'+g+'" alt=""></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>尽管如此，多行多列仍然推荐使用网格布局，网格布局是多行多列布局的终极解决方案</p></div><h3 id="_2-网格" tabindex="-1"><a class="header-anchor" href="#_2-网格" aria-hidden="true">#</a> 2.网格</h3>',22),J={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Grid_Layout",target:"_blank",rel:"noopener noreferrer"},P=n("br",null,null,-1),B={href:"http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html",target:"_blank",rel:"noopener noreferrer"},F=n("br",null,null,-1),V={href:"https://cssgridgarden.com/",target:"_blank",rel:"noopener noreferrer"},G=e('<h4 id="_1-生成网格布局" tabindex="-1"><a class="header-anchor" href="#_1-生成网格布局" aria-hidden="true">#</a> 1）生成网格布局</h4><ul><li>容器生成网格布局后，其所有子元素为 <mark>网格项目</mark></li></ul><p><img src="'+v+'" alt=""></p><h4 id="_2-定义行和列" tabindex="-1"><a class="header-anchor" href="#_2-定义行和列" aria-hidden="true">#</a> 2）定义行和列</h4><ul><li><code>grid-template-rows</code>：定义行</li><li><code>grid-template-columns</code>：定义列</li><li>二者语法相同</li></ul><p><img src="'+b+'" alt=""></p><h4 id="_3-改变排列方向" tabindex="-1"><a class="header-anchor" href="#_3-改变排列方向" aria-hidden="true">#</a> 3）改变排列方向</h4><ul><li>使用属性 <code>grid-auto-flow: column</code> 可使子元素按列排放</li></ul><p><img src="'+_+`" alt=""></p><h4 id="_4-单元格之间的间隙" tabindex="-1"><a class="header-anchor" href="#_4-单元格之间的间隙" aria-hidden="true">#</a> 4）单元格之间的间隙</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">row-gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 行间隙为10px */</span>
<span class="token property">column-gap</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 列间隙为20px */</span>
<span class="token property">gap</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span> <span class="token comment">/* 行间隙为10px，列间隙为20px */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+f+`" alt=""></p><h4 id="_5-单元格内部的对齐" tabindex="-1"><a class="header-anchor" href="#_5-单元格内部的对齐" aria-hidden="true">#</a> 5）单元格内部的对齐</h4><ul><li>默认情况下，网格项目在单元格内部水平和垂直拉伸，以撑满单元格</li><li>可以使用属性 <code>justify-items</code> 设置 <mark>水平方向</mark> 的排列方式</li><li>可以使用属性 <code>align-items</code> 设置 <mark>垂直方向</mark> 的排列方式</li><li>二者可取值相同</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">justify-items</span><span class="token punctuation">:</span> start 左 | end 右 | center 中 | stretch 拉伸<span class="token punctuation">;</span>
<span class="token property">align-items</span><span class="token punctuation">:</span> start 上 | end 下 | center 中 | stretch 拉伸<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+x+`" alt=""></p><ul><li>可以使用速写属性 <code>place-items: 垂直对齐方式 水平对齐方式</code> 同时设置这两个值</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">place-items</span><span class="token punctuation">:</span> start center<span class="token punctuation">;</span> <span class="token comment">/* 垂直靠上，水平居中 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_6-网格项目定位" tabindex="-1"><a class="header-anchor" href="#_6-网格项目定位" aria-hidden="true">#</a> 6）网格项目定位</h4><ul><li>默认情况下，网格项目依次排列到单元格中，每个网格占据一个单元格</li><li>可以对网格项目设置 <code>grid-area</code> 属性来改变这一行为</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">grid-area</span><span class="token punctuation">:</span> 起始行线编号/起始列线编号/结束行线编号/结束列线编号<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+q+'" alt=""></p><h2 id="二-视觉" tabindex="-1"><a class="header-anchor" href="#二-视觉" aria-hidden="true">#</a> （二）视觉</h2><ul><li>视觉类样式，是指不影响盒子位置、尺寸的样式</li><li>例如文字颜色、背景颜色、背景图片等</li></ul><h3 id="_1-阴影" tabindex="-1"><a class="header-anchor" href="#_1-阴影" aria-hidden="true">#</a> 1.阴影</h3><h4 id="_1-盒子阴影-box-shadow" tabindex="-1"><a class="header-anchor" href="#_1-盒子阴影-box-shadow" aria-hidden="true">#</a> 1）盒子阴影 <code>box-shadow</code></h4>',26),R={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-shadow",target:"_blank",rel:"noopener noreferrer"},K={href:"http://mdrs.yuanjin.tech/html/css-manual/box-shadow.html?v=2",target:"_blank",rel:"noopener noreferrer"},Q=n("h4",{id:"_2-文字阴影-text-shadow",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-文字阴影-text-shadow","aria-hidden":"true"},"#"),a(" 2）文字阴影 "),n("code",null,"text-shadow")],-1),U={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/text-shadow",target:"_blank",rel:"noopener noreferrer"},X={href:"http://mdrs.yuanjin.tech/html/css-manual/text-shadow.html?v=3",target:"_blank",rel:"noopener noreferrer"},Y=n("h3",{id:"_2-圆角-border-radius",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-圆角-border-radius","aria-hidden":"true"},"#"),a(" 2.圆角 "),n("code",null,"border-radius")],-1),Z={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-radius",target:"_blank",rel:"noopener noreferrer"},$=e('<p><img src="'+y+`" alt=""></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 同时设置4个角的圆角，半径为10px */</span>
<span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span> <span class="token comment">/* 同时设置4个角的圆角，圆的横向半径为宽度一半，纵向半径为高度一半 */</span>
<span class="token property">border-radius</span><span class="token punctuation">:</span> 10px 20px 30px 40px<span class="token punctuation">;</span> <span class="token comment">/* 分别设置左上、右上、右下、左下的圆角 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),nn={href:"http://mdrs.yuanjin.tech/html/css-manual/border-raduis.html?v=5",target:"_blank",rel:"noopener noreferrer"},an=n("h3",{id:"_3-背景渐变-linear-gradient",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-背景渐变-linear-gradient","aria-hidden":"true"},"#"),a(" 3.背景渐变 "),n("code",null,"linear-gradient()")],-1),sn={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient()",target:"_blank",rel:"noopener noreferrer"},tn=e(`<ul><li>在设置 <mark>背景图片</mark> 时，除了可以使用 <code>url()</code> 加载一张背景图，还可以使用 <code>linear-gradient()</code> 函数设置背景渐变（用于创建一张渐变的图片）</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 设置渐变背景，方向：从上到下，颜色：从#e66465渐变到#9198e5 */</span>
<span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom<span class="token punctuation">,</span> #e66465<span class="token punctuation">,</span> #9198e5<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+S+'" alt=""></p><h3 id="_4-变形-transform" tabindex="-1"><a class="header-anchor" href="#_4-变形-transform" aria-hidden="true">#</a> 4.变形 <code>transform</code></h3>',4),en={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform",target:"_blank",rel:"noopener noreferrer"},on=e('<ul><li>translate：平移</li><li>scale：缩放</li><li>rotate：旋转</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>无论是哪一种 transform，都只是视觉效果的变化，不会影响盒子的布局</p><p>transform 不会导致浏览器 reflow 和 rerender，因此效率极高</p></div><h4 id="_1-平移-translate" tabindex="-1"><a class="header-anchor" href="#_1-平移-translate" aria-hidden="true">#</a> 1）平移 <code>translate</code></h4><ul><li>让盒子在原来位置上产生位移，类似于相对定位</li></ul><p><img src="'+C+'" alt=""></p><h4 id="_2-缩放-scale" tabindex="-1"><a class="header-anchor" href="#_2-缩放-scale" aria-hidden="true">#</a> 2）缩放 <code>scale</code></h4><ul><li>让盒子基于原来的尺寸发生缩放</li></ul><p><img src="'+H+`" alt=""></p><h4 id="_3-旋转-rotate" tabindex="-1"><a class="header-anchor" href="#_3-旋转-rotate" aria-hidden="true">#</a> 3）旋转 <code>rotate</code></h4><ul><li>让盒子在原图基础上进行旋转</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 在原图的基础上，顺时针旋转45度角 */</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* 在原图的基础上，顺时针旋转半圈 */</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0.5turn<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),pn={href:"http://mdrs.yuanjin.tech/html/css-manual/rotate.html",target:"_blank",rel:"noopener noreferrer"},ln=n("h4",{id:"_4-改变变形原点-transform-origin",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-改变变形原点-transform-origin","aria-hidden":"true"},"#"),a(" 4）改变变形原点 "),n("code",null,"transform-origin")],-1),cn={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-origin",target:"_blank",rel:"noopener noreferrer"},un=e(`<ul><li>变形原点的位置，会影响到具体的变形行为</li><li>默认情况下，变形的原点在盒子中心</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform-origin</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子中心 */</span>
<span class="token property">transform-origin</span><span class="token punctuation">:</span> left top<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子左上角 */</span>
<span class="token property">transform-origin</span><span class="token punctuation">:</span> right bottom<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子右下角 */</span>
<span class="token property">transform-origin</span><span class="token punctuation">:</span> 30px 60px<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子坐标 (30, 60) 位置 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),rn={href:"http://mdrs.yuanjin.tech/html/css-manual/transform-origin.html?v2",target:"_blank",rel:"noopener noreferrer"},dn=e(`<h4 id="_5-多种变形叠加" tabindex="-1"><a class="header-anchor" href="#_5-多种变形叠加" aria-hidden="true">#</a> 5）多种变形叠加</h4><ul><li>可以一次性设置多种变形效果</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 先旋转45度，再平移(100,100) */</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span> <span class="token function">translate</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> 100px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* 先平移(100, 100)，再旋转45度 */</span>
<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> 100px<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">警告</p><p>旋转会导致坐标系也跟着旋转，从而可能影响到后续的变形效果</p></div>`,4),kn={href:"http://mdrs.yuanjin.tech/html/css-manual/multi-transform.html?v2",target:"_blank",rel:"noopener noreferrer"},hn=n("h2",{id:"三-过渡和动画",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三-过渡和动画","aria-hidden":"true"},"#"),a(" （三）过渡和动画")],-1),mn=n("ul",null,[n("li",null,"使用过渡和动画，可以让 css 属性变化更加丝滑"),n("li",null,[a("过渡和动画无法对所有的 CSS 属性产生影响，能够产生影响的只有 "),n("mark",null,"数值类属性")]),n("li",null,"例如：颜色、宽高、字体大小等等")],-1),gn=n("h3",{id:"_1-过渡",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-过渡","aria-hidden":"true"},"#"),a(" 1.过渡")],-1),vn={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition",target:"_blank",rel:"noopener noreferrer"},bn=e(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transition</span><span class="token punctuation">:</span> 过渡属性 持续时间 过渡函数 过渡延迟<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-过渡属性" tabindex="-1"><a class="header-anchor" href="#_1-过渡属性" aria-hidden="true">#</a> 1）过渡属性</h4><ul><li>针对哪个 css 属性应用过渡。</li><li>例如填写 <code>transform</code>，则表示仅针对 transform 属性应用过渡</li><li>若填写 <code>all</code> 或不填写，则表示针对所有 css 属性都应用过渡</li></ul><h4 id="_2-持续时间" tabindex="-1"><a class="header-anchor" href="#_2-持续时间" aria-hidden="true">#</a> 2）持续时间</h4><ul><li>css 属性变化所持续的时间，需要带上单位</li><li>例如 <code>3s</code> 表示 3 秒， <code>0.5s</code> 或 <code>500ms</code> 均表示 500 毫秒</li></ul><h4 id="_3-过渡函数" tabindex="-1"><a class="header-anchor" href="#_3-过渡函数" aria-hidden="true">#</a> 3）过渡函数</h4><ul><li>本质是 css 属性变化的贝塞尔曲线函数，通常直接使用预设值： <ul><li><code>ease-in-out</code>：平滑开始，平滑结束</li><li><code>linear</code>：线性变化</li><li><code>ease-in</code>：仅平滑开始</li><li><code>ease-out</code>：仅平滑结束</li></ul></li></ul><h4 id="_4-过渡延迟" tabindex="-1"><a class="header-anchor" href="#_4-过渡延迟" aria-hidden="true">#</a> 4）过渡延迟</h4><ul><li>书写规则和持续时间一样，表示过渡效果延迟多久后触发，不填则无延迟</li><li>在 JS 中，可以监听元素的 <code>transitionstart</code> 和 <code>transitionend</code> 事件，从而在过渡开始和过渡结束时做一些别的事情</li></ul><h3 id="_2-动画" tabindex="-1"><a class="header-anchor" href="#_2-动画" aria-hidden="true">#</a> 2.动画</h3>`,10),_n={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Animations",target:"_blank",rel:"noopener noreferrer"},fn=e('<ul><li>动画的本质是预先定义的一套 css 变化规则，然后给该规则取个名字</li></ul><p><img src="'+w+`" alt=""></p><ul><li>其他元素即可使用这样的规则：</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span> 规则名 持续时间<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在应用规则时，还可以指定更多的信息</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span> 规则名 持续时间 重复次数 时间函数 动画方向 延迟时间<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>定义规则时， <code>0%</code> 可以书写为 <code>from</code></li><li>定义规则时， <code>100%</code> 可以书写为 <code>to</code></li><li>重复次数为 <code>infinite</code> 时，表示无限重复</li><li>动画方向为 <code>alternate</code> 时，表示交替反向，第 1 次正向，第 2 次反向，第 3 次正向，第 4 次方向，以此类推</li><li>在 JS 中，可以监听元素的 <code>animationstart</code> 和 <code>animationnend</code> 事件，从而在动画开始和动画结束时做一些别的事情</li></ul><h2 id="四-其他-css3-属性" tabindex="-1"><a class="header-anchor" href="#四-其他-css3-属性" aria-hidden="true">#</a> （四）其他 CSS3 属性</h2><h3 id="_1-box-sizing" tabindex="-1"><a class="header-anchor" href="#_1-box-sizing" aria-hidden="true">#</a> 1.box-sizing</h3><p><img src="`+j+`" alt=""></p><ul><li>使用 <code>border-box</code> 控制尺寸更加直观</li><li>因此，很多网站都会加入下面的代码</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-字体图标" tabindex="-1"><a class="header-anchor" href="#_2-字体图标" aria-hidden="true">#</a> 2.字体图标</h3>`,13),xn={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/@font-face",target:"_blank",rel:"noopener noreferrer"},qn=n("li",null,[a("css3 新增了 "),n("code",null,"font-face"),a(" 指令，可以加载网络字体")],-1),yn=n("li",null,"最常见的应用就是字体图标",-1),Sn=n("li",null,[a("字体图标本质上是文字，即通过 "),n("code",null,"color"),a(" 设置颜色，通过 "),n("code",null,"font-size"),a(" 设置尺寸")],-1),Cn={href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"},Hn=n("h3",{id:"_3-图像内容适应",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-图像内容适应","aria-hidden":"true"},"#"),a(" 3.图像内容适应")],-1),wn={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-fit",target:"_blank",rel:"noopener noreferrer"},jn=e('<ul><li>css3 属性 <code>object-fit</code> 可以控制 <mark>多媒体内容和与元素</mark> 的适应方式 <ul><li>通常应用在 <code>img</code> 或 <code>video</code> 元素中</li></ul></li><li>下图中的所有 <code>img</code> 元素均被固定了宽高，溢出的部分实际上均不会显示</li></ul><p><img src="'+N+'" alt=""></p><h3 id="_4-视口单位" tabindex="-1"><a class="header-anchor" href="#_4-视口单位" aria-hidden="true">#</a> 4.视口单位</h3><ul><li>css3 支持使用 <code>vw</code> 和 <code>vh</code> 作为单位，分别表示 <mark>视口宽度</mark> 和 <mark>视口高度</mark></li><li>例如 <code>1vh</code> 表示视口高度的 <code>1%</code> ， <code>100vw</code> 表示视口宽度的 <code>100%</code></li></ul><h3 id="_5-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_5-伪元素选择器" aria-hidden="true">#</a> 5.伪元素选择器</h3><ul><li>通过 <code>::before</code> 和 <code>::after</code> 选择器，可以通过 css 给元素生成两个子元素</li><li>使用伪元素可以避免在 HTML 中使用过多的空元素</li><li>伪元素必须要有 <code>content</code> 属性，否则不能生效，如果不需要有元素内容，设置 <code>content:&#39;&#39;</code></li></ul><p><img src="'+M+'" alt=""></p><h3 id="_6-平滑滚动" tabindex="-1"><a class="header-anchor" href="#_6-平滑滚动" aria-hidden="true">#</a> 6.平滑滚动</h3>',8),Nn={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/scroll-behavior",target:"_blank",rel:"noopener noreferrer"},Mn=e('<ul><li>使用 <code>scroll-behavior: smooth</code>，可以让滚动更加丝滑</li><li>滚动条在哪个元素上就加到哪个元素上</li></ul><h2 id="五-html5-更新" tabindex="-1"><a class="header-anchor" href="#五-html5-更新" aria-hidden="true">#</a> （五）HTML5 更新</h2><ul><li>HTML5 包含两个部分的更新，分别是 <code>文档</code> 和 <code>Web API</code>，这些标准都是由 W3C 组织发布的</li><li><code>JavaScript</code> 由 <code>EcmaScript</code> 和 <code>WebAPI</code> 组成 <ul><li><code>EcmaScript</code> 是语言标准，定义关键字、语法规则、运算符、Array 方法等，与使用环境无关，由 ECMA 组织发布</li><li><code>WebAPI</code> 是浏览器环境专门提供的一些操作方法，如 DOM、BOM(setTimeout、setInterval)等</li></ul></li></ul><p><img src="'+z+'" alt=""></p><h2 id="六-html5-文档" tabindex="-1"><a class="header-anchor" href="#六-html5-文档" aria-hidden="true">#</a> （六）HTML5 文档</h2>',5),zn={href:"http://www.html5star.com/manual/html5label-meaning/",target:"_blank",rel:"noopener noreferrer"},Ln=e(`<h3 id="_1-元素语义化" tabindex="-1"><a class="header-anchor" href="#_1-元素语义化" aria-hidden="true">#</a> 1.元素语义化</h3><ul><li>每个 HTML 元素都代表着某种含义，在开发中应该根据 <mark>元素含义</mark> 选择元素</li><li>好处 <ul><li>利于 SEO（搜索引擎优化）</li><li>利于无障碍访问</li><li>利于浏览器的插件分析网页</li></ul></li></ul><h3 id="_2-新增元素" tabindex="-1"><a class="header-anchor" href="#_2-新增元素" aria-hidden="true">#</a> 2.新增元素</h3><h4 id="_1-多媒体" tabindex="-1"><a class="header-anchor" href="#_1-多媒体" aria-hidden="true">#</a> 1）多媒体</h4><ul><li>可以使用 <code>audio</code> 元素表达一段音频</li><li>可以使用 <code>video</code> 元素表达一个视频</li><li>它们均具有以下属性</li></ul><table><thead><tr><th>属性名</th><th>含义</th><th>类型</th></tr></thead><tbody><tr><td>src</td><td>多媒体的文件路径</td><td>普通属性</td></tr><tr><td>controls</td><td>是否显示播放控件</td><td>布尔属性</td></tr><tr><td>autoplay</td><td>是否自动播放</td><td>布尔属性</td></tr><tr><td>loop</td><td>是否循环播放</td><td>布尔属性</td></tr><tr><td>muted</td><td>是否静音播放</td><td>布尔属性</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>新版浏览器不允许「带声音的自动播放」，可能将来甚至不允许自动播放</p><p>浏览器希望播放行为由用户决定</p></div><h4 id="_2-文章结构" tabindex="-1"><a class="header-anchor" href="#_2-文章结构" aria-hidden="true">#</a> 2）文章结构</h4><ul><li>为了让搜索引擎和浏览器更好的理解文档内容，HTML5 新增了多个元素来表达内容的含义</li><li>下面的示例中，使用了 HTML5 的新增元素来表达一篇文章</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- article：一篇文章 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- header：文章头部信息 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>文章标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- blockquote：引用信息 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">&gt;</span></span>此文章引用的文献：xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- aside: 文章的其他附加信息 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>作者：xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>发布日期：xxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>浏览量：xxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- section：章节 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>章节1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- section：章节 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>章节2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- section：章节 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>章节3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>段落4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 页脚 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>参考资料<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- cite表示外部站点的引用 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>xxxxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>xxxxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>xxxxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>xxxxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>xxxxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">&gt;</span></span>xxxxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-新增属性" tabindex="-1"><a class="header-anchor" href="#_3-新增属性" aria-hidden="true">#</a> 3.新增属性</h3><h4 id="_1-自定义数据属性" tabindex="-1"><a class="header-anchor" href="#_1-自定义数据属性" aria-hidden="true">#</a> 1）自定义数据属性</h4><p><img src="`+L+'" alt=""></p><h4 id="_2-input-的新增属性" tabindex="-1"><a class="header-anchor" href="#_2-input-的新增属性" aria-hidden="true">#</a> 2）input 的新增属性</h4>',14),Tn={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input",target:"_blank",rel:"noopener noreferrer"},Wn={href:"http://mdrs.yuanjin.tech/html/html-manual/input-property.html?v2",target:"_blank",rel:"noopener noreferrer"},In=e(`<h2 id="七-html5-web-api" tabindex="-1"><a class="header-anchor" href="#七-html5-web-api" aria-hidden="true">#</a> （七） HTML5 Web API</h2><h3 id="_1-使用-css-选择器选中元素" tabindex="-1"><a class="header-anchor" href="#_1-使用-css-选择器选中元素" aria-hidden="true">#</a> 1.使用 css 选择器选中元素</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 使用css选择器选中匹配的第一个元素</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;css选择器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 使用css选择器选中匹配的所有元素，返回伪数组</span>
document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;css选择器&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-控制类样式" tabindex="-1"><a class="header-anchor" href="#_2-控制类样式" aria-hidden="true">#</a> 2.控制类样式</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 添加类样式</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;a&quot;&gt;&lt;/div&gt;</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;a b&quot;&gt;&lt;/div&gt;</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;a b c&quot;&gt;&lt;/div&gt;</span>

<span class="token comment">// 是否包含某个类样式</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// 移除类样式</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;b c&quot;&gt;&lt;/div&gt;</span>

<span class="token comment">// 切换类样式</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;a b c&quot;&gt;&lt;/div&gt;</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;b c&quot;&gt;&lt;/div&gt;</span>
dom<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;div class=&quot;a b c&quot;&gt;&lt;/div&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-本地存储" tabindex="-1"><a class="header-anchor" href="#_3-本地存储" aria-hidden="true">#</a> 3.本地存储</h3><ul><li><code>localStorage</code>：<mark>永久</mark> 保存到本地</li><li><code>sessionStorage</code>：<mark>临时</mark> 保存到本地，关闭浏览器后消失</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 保存一个键值对到本地，值必须是字符串</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 根据键，读取本地保存的值</span>
localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 清除所有保存的内容</span>
localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 根据键，清除指定的内容</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 保存一个键值对到本地，值必须是字符串</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 根据键，读取本地保存的值</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 清除所有保存的内容</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 根据键，清除指定的内容</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>无论是 <code>localStorage</code> 还是 <code>sessionStorage</code> ，它们都只能保存字符串</p><p>如果需要保存对象或数组，可以先将对象和数组转换为 <code>JSON</code> 字符串再进行保存</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将对象或数组转换为JSON格式</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将JSON格式的字符串转换为对象或数组</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-渲染帧" tabindex="-1"><a class="header-anchor" href="#_4-渲染帧" aria-hidden="true">#</a> 4.渲染帧</h3><ul><li>浏览器会不断的对网页进行渲染，通常情况下的速度为每秒渲染 60 次，每一次渲染称之为 <mark>一帧</mark><ul><li>因此又可以说：浏览器的渲染速率是 60 帧</li></ul></li><li>但这不是一定的，它会受到各种因素的影响 <ul><li>因此，帧率往往会有浮动</li></ul></li></ul><blockquote><p>浮动的帧率就导致一个问题，我们在使用 <code>setInterval</code> 等计时器实现某些动画效果时，如何才能保证每一帧只执行一次动画效果呢？</p></blockquote><p><img src="`+T+`" alt=""></p><ul><li>为了解决该问题，HTML5 新增 API <code>requestAnimationFrame</code>，用于在每一帧渲染 <mark>之前</mark> 做某些事</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 传入一个回调函数，该函数在下一帧渲染之前自动运行</span>
  <span class="token comment">// 通常，可以利用该回调函数，在下一帧渲染前改动元素的状态</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>raq</code> 的回调函数 <mark>仅执行一次</mark></li><li>因此，要实现连贯的动画，通常使用下面的代码结构</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 该函数负责在下一帧渲染前，执行一次元素状态变化</span>
<span class="token keyword">function</span> <span class="token function">changeOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>动画是否应该停止<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    改变元素状态<span class="token punctuation">;</span>
    <span class="token function">changeOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 改变完成后，继续注册下一帧的变化</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">changeOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-音视频-api" tabindex="-1"><a class="header-anchor" href="#_5-音视频-api" aria-hidden="true">#</a> 5.音视频 API</h3>`,19),Dn={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLMediaElement",target:"_blank",rel:"noopener noreferrer"},An=e('<ul><li>针对 <code>video</code> 和 <code>audio</code> 元素，HTML5 新增了音视频的 API，让开发者可以使用 JS 控制它们</li></ul><h4 id="_1-音视频属性" tabindex="-1"><a class="header-anchor" href="#_1-音视频属性" aria-hidden="true">#</a> 1）音视频属性</h4><table><thead><tr><th>属性名</th><th>含义</th></tr></thead><tbody><tr><td>currentTime</td><td>当前播放时间，单位为秒，为其赋值将会使媒体跳到一个新的时间</td></tr><tr><td>loop</td><td>对应 HTML 标签 <code>loop</code> 属性，决定该媒体是否循环播放</td></tr><tr><td>controls</td><td>对应 HTML 标签 <code>controls</code> 属性，控制是否显示用户播放界面的控制 HTML</td></tr><tr><td>src</td><td>对应 HTML 标签 <code>src</code> 属性，获取和设置播放地址</td></tr><tr><td>volume</td><td>表示音频的音量，值从 0.0（静音）到 1.0（最大音量）</td></tr><tr><td>playbackRate</td><td>播放倍速，1 为正常倍速</td></tr><tr><td>duration</td><td>总时长，单位为秒</td></tr><tr><td>paused</td><td>当前是否是暂停状态</td></tr><tr><td>muted</td><td>是否静音</td></tr></tbody></table><h4 id="_2-音视频方法" tabindex="-1"><a class="header-anchor" href="#_2-音视频方法" aria-hidden="true">#</a> 2）音视频方法</h4><table><thead><tr><th>方法名</th><th>含义</th></tr></thead><tbody><tr><td>play()</td><td>开始播放</td></tr><tr><td>pause()</td><td>暂停播放</td></tr></tbody></table><h4 id="_3-事件" tabindex="-1"><a class="header-anchor" href="#_3-事件" aria-hidden="true">#</a> 3）事件</h4><table><thead><tr><th>事件名</th><th>含义</th></tr></thead><tbody><tr><td>pause</td><td>暂停时触发</td></tr><tr><td>ended</td><td>结束时触发</td></tr><tr><td>play</td><td>开始播放时触发</td></tr><tr><td>timeupdate</td><td>属性 <code>currentTime</code> 变化时触发，会随着播放进度的变化不断触发</td></tr><tr><td>loadeddata</td><td>事件在第一帧数据加载完成后触发</td></tr></tbody></table>',7);function On(En,Jn){const s=p("ExternalLinkIcon");return l(),c("div",null,[I,n("blockquote",null,[n("p",null,[a("详细文档见 "),n("a",D,[a("MDN"),t(s)])]),A,n("p",null,[n("a",O,[a("弹性盒小游戏"),t(s)])])]),E,n("blockquote",null,[n("p",null,[n("a",J,[a("MDN 详细文档"),t(s)])]),P,n("p",null,[n("a",B,[a("阮一峰网格布局教程"),t(s)])]),F,n("p",null,[n("a",V,[a("网格布局小游戏"),t(s)])])]),G,n("blockquote",null,[n("p",null,[n("a",R,[a("MDN 详细文档"),t(s)])])]),n("p",null,[n("a",K,[a("http://mdrs.yuanjin.tech/html/css-manual/box-shadow.html?v=2"),t(s)])]),Q,n("blockquote",null,[n("p",null,[n("a",U,[a("MDN 详细文档"),t(s)])])]),n("p",null,[n("a",X,[a("http://mdrs.yuanjin.tech/html/css-manual/text-shadow.html?v=3"),t(s)])]),Y,n("blockquote",null,[n("p",null,[n("a",Z,[a("MDN 详细文档"),t(s)])])]),$,n("p",null,[n("a",nn,[a("http://mdrs.yuanjin.tech/html/css-manual/border-raduis.html?v=5"),t(s)])]),an,n("blockquote",null,[n("p",null,[n("a",sn,[a("MDN 详细文档"),t(s)])])]),tn,n("blockquote",null,[n("p",null,[n("a",en,[a("MDN 详细文档"),t(s)])])]),on,n("p",null,[n("a",pn,[a("http://mdrs.yuanjin.tech/html/css-manual/rotate.html"),t(s)])]),ln,n("blockquote",null,[n("p",null,[n("a",cn,[a("MDN 详细文档"),t(s)])])]),un,n("p",null,[n("a",rn,[a("http://mdrs.yuanjin.tech/html/css-manual/transform-origin.html?v2"),t(s)])]),dn,n("p",null,[n("a",kn,[a("http://mdrs.yuanjin.tech/html/css-manual/multi-transform.html?v2"),t(s)])]),hn,mn,gn,n("blockquote",null,[n("p",null,[n("a",vn,[a("MDN 详细文档"),t(s)])])]),bn,n("blockquote",null,[n("p",null,[n("a",_n,[a("MDN 详细文档"),t(s)])])]),fn,n("blockquote",null,[n("p",null,[n("a",xn,[a("MDN font-face 指令"),t(s)])])]),n("ul",null,[qn,yn,Sn,n("li",null,[a("国内使用最多的字体图标平台是"),n("a",Cn,[a("阿里巴巴矢量图标库"),t(s)])])]),Hn,n("blockquote",null,[n("p",null,[n("a",wn,[a("MDN 详细文档"),t(s)])])]),jn,n("blockquote",null,[n("p",null,[n("a",Nn,[a("MDN 详细文档"),t(s)])])]),Mn,n("blockquote",null,[n("p",null,[n("a",zn,[a("HTML5 元素表"),t(s)])])]),Ln,n("blockquote",null,[n("p",null,[n("a",Tn,[a("MDN input 详细文档"),t(s)])])]),n("p",null,[n("a",Wn,[a("http://mdrs.yuanjin.tech/html/html-manual/input-property.html?v2"),t(s)])]),In,n("blockquote",null,[n("p",null,[n("a",Dn,[a("MDN 详细文档"),t(s)])])]),An])}const Fn=o(W,[["render",On],["__file","08.html.vue"]]);export{Fn as default};
