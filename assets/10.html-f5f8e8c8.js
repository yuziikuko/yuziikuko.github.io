import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-7bd4b1bd.js";const p={},o=t(`<h2 id="一-文字滚动效果" tabindex="-1"><a class="header-anchor" href="#一-文字滚动效果" aria-hidden="true">#</a> （一）文字滚动效果</h2><h3 id="_1-编写-js-前需考虑" tabindex="-1"><a class="header-anchor" href="#_1-编写-js-前需考虑" aria-hidden="true">#</a> 1.编写 JS 前需考虑</h3><ul><li>初始化：一开始要做什么</li><li>交互：用户操作之后要做什么</li></ul><h2 id="二-手风琴效果" tabindex="-1"><a class="header-anchor" href="#二-手风琴效果" aria-hidden="true">#</a> （二）手风琴效果</h2><div class="hint-container tip"><p class="hint-container-title">规范</p><p>DRY：don&#39;t repeat yourself</p><p>能封装成模块的功能函数尽量抽离出来</p></div><h3 id="_1-js-动画函数" tabindex="-1"><a class="header-anchor" href="#_1-js-动画函数" aria-hidden="true">#</a> 1.JS 动画函数</h3><ul><li>动画的本质：从一个值变化到另一个值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createAnimation</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> from <span class="token operator">=</span> options<span class="token punctuation">.</span>from<span class="token punctuation">;</span> <span class="token comment">// 起始值</span>
  <span class="token keyword">var</span> to <span class="token operator">=</span> options<span class="token punctuation">.</span>to<span class="token punctuation">;</span> <span class="token comment">// 结束值</span>
  <span class="token keyword">var</span> totalMS <span class="token operator">=</span> options<span class="token punctuation">.</span>totalMS <span class="token operator">||</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// 变化总时间</span>
  <span class="token keyword">var</span> duration <span class="token operator">=</span> options<span class="token punctuation">.</span>duration <span class="token operator">||</span> <span class="token number">15</span><span class="token punctuation">;</span> <span class="token comment">// 动画间隔时间</span>
  <span class="token keyword">var</span> times <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>totalMS <span class="token operator">/</span> duration<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 变化的次数</span>
  <span class="token keyword">var</span> dis <span class="token operator">=</span> <span class="token punctuation">(</span>to <span class="token operator">-</span> from<span class="token punctuation">)</span> <span class="token operator">/</span> times<span class="token punctuation">;</span> <span class="token comment">// 每一次变化改变的值</span>
  <span class="token keyword">var</span> curTimes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 当前变化的次数</span>
  <span class="token keyword">var</span> timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    from <span class="token operator">+=</span> dis<span class="token punctuation">;</span>
    curTimes<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 当前变化增加一次</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curTimes <span class="token operator">&gt;=</span> times<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 变化的次数达到了</span>
      from <span class="token operator">=</span> to<span class="token punctuation">;</span> <span class="token comment">// 变化完成了</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不再变化了</span>
      options<span class="token punctuation">.</span>onend <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span><span class="token function">onend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 无数的可能性 —— 回调模式</span>
    options<span class="token punctuation">.</span>onmove <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span><span class="token function">onmove</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> duration<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-回调模式" tabindex="-1"><a class="header-anchor" href="#_2-回调模式" aria-hidden="true">#</a> 2.回调模式</h3><ul><li>满足以下两点即可使用回调模式 <ul><li>事件函数知道什么时候处理，但不知道怎么处理</li><li>绑定事件的对象知道怎么处理，但不知道什么时候处理</li></ul></li><li>通过回调函数参数交互</li></ul>`,10),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","10.html.vue"]]);export{k as default};
