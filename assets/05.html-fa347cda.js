const n=JSON.parse(`{"key":"v-4012c68e","path":"/notes/Vue3/05.html","title":"五、Vue3.x中的响应式原理","lang":"zh-CN","frontmatter":{"title":"五、Vue3.x中的响应式原理","copyright":false,"date":"2022-09-08T00:00:00.000Z","category":["笔记","Vue3"],"tag":["尚硅谷","张天禹"]},"headers":[{"level":2,"title":"（一）Vue2.x 的响应式","slug":"一-vue2-x-的响应式","link":"#一-vue2-x-的响应式","children":[{"level":3,"title":"1.实现原理","slug":"_1-实现原理","link":"#_1-实现原理","children":[]},{"level":3,"title":"2.存在问题","slug":"_2-存在问题","link":"#_2-存在问题","children":[]}]},{"level":2,"title":"（二）Vue3.x 的响应式","slug":"二-vue3-x-的响应式","link":"#二-vue3-x-的响应式","children":[{"level":3,"title":"1.实现原理","slug":"_1-实现原理-1","link":"#_1-实现原理-1","children":[]},{"level":3,"title":"2.MDN 文档中描述的 Proxy 与 Reflect","slug":"_2-mdn-文档中描述的-proxy-与-reflect","link":"#_2-mdn-文档中描述的-proxy-与-reflect","children":[]}]}],"git":{"createdTime":1662620297000,"updatedTime":1689506602000,"contributors":[{"name":"郁子IKUKO","email":"1147998314@qq.com","commits":2}]},"readingTime":{"minutes":0.98,"words":294},"filePathRelative":"notes/Vue3/05.md","localizedDate":"2022年9月8日","excerpt":"<h2> （一）Vue2.x 的响应式</h2>\\n<h3> 1.实现原理</h3>\\n<h4> 1）对象类型</h4>\\n<ul>\\n<li>通过 <code>Object.defineProperty()</code> 对属性的读取、修改进行拦截（数据劫持）</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">defineProperty</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'count'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function\\">set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
