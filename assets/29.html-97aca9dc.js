import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as l}from"./app-1ca76096.js";const r={},h=l('<h2 id="一-组件化编码流程" tabindex="-1"><a class="header-anchor" href="#一-组件化编码流程" aria-hidden="true">#</a> （一）组件化编码流程</h2><h3 id="_1-拆分静态组件" tabindex="-1"><a class="header-anchor" href="#_1-拆分静态组件" aria-hidden="true">#</a> 1.拆分静态组件</h3><ul><li>组件要按照功能点拆分</li><li>命名不要与 html 元素冲突</li></ul><h3 id="_2-实现动态组件" tabindex="-1"><a class="header-anchor" href="#_2-实现动态组件" aria-hidden="true">#</a> 2.实现动态组件</h3><ul><li>考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用</li><li>一个组件在用：放在组件自身即可</li><li>一些组件在用：放在他们共同的父组件上（<strong>状态提升</strong>）</li><li>用：读数据、写数据</li></ul><h3 id="_3-实现交互" tabindex="-1"><a class="header-anchor" href="#_3-实现交互" aria-hidden="true">#</a> 3.实现交互</h3><ul><li>从绑定事件开始</li></ul><h2 id="二-props-适用于" tabindex="-1"><a class="header-anchor" href="#二-props-适用于" aria-hidden="true">#</a> （二）props 适用于</h2><ul><li>父组件 ==&gt; 子组件 通信</li><li>子组件 ==&gt; 父组件 通信（要求父先给子提供一个函数）</li></ul><h2 id="三-使用-v-model-要切记" tabindex="-1"><a class="header-anchor" href="#三-使用-v-model-要切记" aria-hidden="true">#</a> （三）使用 v-model 要切记</h2><ul><li>v-model 绑定的值不能是 props 传过来的值</li><li>因为 props 是不可以修改的</li></ul><h2 id="四-备注" tabindex="-1"><a class="header-anchor" href="#四-备注" aria-hidden="true">#</a> （四）备注</h2><ul><li>props 传过来的若是对象类型的值，修改对象中的属性时 Vue 不会报错，但不推荐这样做</li></ul>',13),d=[h];function t(o,n){return a(),i("div",null,d)}const u=e(r,[["render",t],["__file","29.html.vue"]]);export{u as default};
