import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as r,c as t,e as a}from"./app-1ca76096.js";const o={},i=a('<h2 id="一-从定义数据角度对比" tabindex="-1"><a class="header-anchor" href="#一-从定义数据角度对比" aria-hidden="true">#</a> （一）从定义数据角度对比</h2><ul><li>ref 用来定义：<strong>基本类型数据</strong></li><li>reactive 用来定义：<strong>对象（或数组）类型数据</strong></li><li>备注：ref 也可以用来定义 <strong>对象（或数组）类型数据</strong> ，内部会自动通过 <code>reactive</code> 转为 <strong>代理对象（Proxy）</strong></li></ul><h2 id="二-从原理角度对比" tabindex="-1"><a class="header-anchor" href="#二-从原理角度对比" aria-hidden="true">#</a> （二）从原理角度对比</h2><ul><li>ref 通过 <code>Object.defineProperty()</code> 的 <code>get</code> 和 <code>set</code> 来实现响应式（数据劫持）</li><li>reactive 通过使用 <strong>Proxy</strong> 来实现响应式（数据劫持），并通过 <strong>Reflect</strong> 操作 <strong>源对象</strong> 内部的数据</li></ul><h2 id="三-从使用角度对比" tabindex="-1"><a class="header-anchor" href="#三-从使用角度对比" aria-hidden="true">#</a> （三）从使用角度对比</h2><h3 id="_1-ref-定义的数据" tabindex="-1"><a class="header-anchor" href="#_1-ref-定义的数据" aria-hidden="true">#</a> 1.ref 定义的数据</h3><ul><li>操作数据 <strong>需要</strong> <code>.value</code></li><li>读取数据时模板中直接读取， <strong>不需要</strong> <code>.value</code></li></ul><h3 id="_2-reactive-定义的数据" tabindex="-1"><a class="header-anchor" href="#_2-reactive-定义的数据" aria-hidden="true">#</a> 2.reactive 定义的数据</h3><ul><li>操作数据与读取数据： <strong>均不需要</strong> <code>.value</code></li></ul>',9),c=[i];function n(d,s){return r(),t("div",null,c)}const f=e(o,[["render",n],["__file","06.html.vue"]]);export{f as default};
