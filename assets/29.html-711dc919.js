import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as r,e as h}from"./app-18d03323.js";const i={},d=h('<h2 id="_1-组件化编码流程" tabindex="-1"><a class="header-anchor" href="#_1-组件化编码流程" aria-hidden="true">#</a> 1.组件化编码流程</h2><h3 id="_1-拆分静态组件" tabindex="-1"><a class="header-anchor" href="#_1-拆分静态组件" aria-hidden="true">#</a> 1）拆分静态组件</h3><p>组件要按照功能点拆分，命名不要与 html 元素冲突。</p><h3 id="_2-实现动态组件" tabindex="-1"><a class="header-anchor" href="#_2-实现动态组件" aria-hidden="true">#</a> 2）实现动态组件</h3><p>考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：</p><ul><li><p>一个组件在用：放在组件自身即可。</p></li><li><p>一些组件在用：放在他们共同的父组件上（<strong>状态提升</strong>）。</p></li><li><p>用：读数据、写数据。</p></li></ul><h3 id="_3-实现交互" tabindex="-1"><a class="header-anchor" href="#_3-实现交互" aria-hidden="true">#</a> 3）实现交互</h3><p>从绑定事件开始。</p><h2 id="_2-props-适用于" tabindex="-1"><a class="header-anchor" href="#_2-props-适用于" aria-hidden="true">#</a> 2.props 适用于</h2><ul><li><p>父组件 ==&gt; 子组件 通信。</p></li><li><p>子组件 ==&gt; 父组件 通信（要求父先给子提供一个函数）。</p></li></ul><h2 id="_3-使用-v-model-要切记" tabindex="-1"><a class="header-anchor" href="#_3-使用-v-model-要切记" aria-hidden="true">#</a> 3.使用 v-model 要切记</h2><p>v-model 绑定的值不能是 props 传过来的值，因为 props 是不可以修改的。</p><h2 id="_4-备注" tabindex="-1"><a class="header-anchor" href="#_4-备注" aria-hidden="true">#</a> 4.备注</h2><p>props 传过来的若是对象类型的值，修改对象中的属性时 Vue 不会报错，但不推荐这样做。</p>',14),t=[d];function o(p,n){return a(),r("div",null,t)}const c=e(i,[["render",o],["__file","29.html.vue"]]);export{c as default};
